(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{213:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(1),a=n(9),o=(n(0),n(441)),i={},p={id:"jme3/virtualreality",title:"virtualreality",description:"Please see this [forum",source:"@site/docs/jme3/virtualreality.md",permalink:"/wikidemo/docs/jme3/virtualreality",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/virtualreality.md"},c=[],s={rightToc:c};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Please see this ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/official-vr-module/37830/67"}),"forum\npost")," for\nadditional information on JME Official VR module."),Object(o.b)("p",null,"jMonkeyEngine 3 has a wide range of support for Virtual Reality (VR).\nThe known supported systems are:"),Object(o.b)("p",null,"HTC Vive and systems supporting SteamVR/OpenVR"),Object(o.b)("p",null,"Native Oculus Rift support (and through SteamVR)"),Object(o.b)("p",null,"Razer HDK and systems supporting OSVR"),Object(o.b)("p",null,"Google Cardboard / GoogleVR"),Object(o.b)("p",null,"Two implementations exist for OpenVR. A community maintained JNA based\nbinding and LWJGL's JNI based."),Object(o.b)("p",null,"To use the JNA based bindings, put:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"settings.put(VRConstants.SETTING_VRAPI, VRConstants.SETTING_VRAPI_OPENVR_VALUE);\n")),Object(o.b)("p",null,"in your settings. To use LWJGL, instead put:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"settings.put(VRConstants.SETTING_VRAPI, VRConstants.SETTING_VRAPI_OPENVR_LWJGL_VALUE);\n")),Object(o.b)("p",null,"Note that the LWJGL bindings require LWJGL3 (jme3-lwjgl3) to be used."),Object(o.b)("h1",{id:"sample-application"},"Sample Application"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'public class Main extends SimpleApplication {\n\n    public static void main(String[] args) {\n        AppSettings settings = new AppSettings(true);\n        settings.put(VRConstants.SETTING_VRAPI, VRConstants.SETTING_VRAPI_OPENVR_LWJGL_VALUE);\n        settings.put(VRConstants.SETTING_ENABLE_MIRROR_WINDOW, true);\n\n        VREnvironment env = new VREnvironment(settings);\n        env.initialize();\n\n        // Checking if the VR environment is well initialized\n        // (access to the underlying VR system is effective, VR devices are detected).\n        if (env.isInitialized()){\n            VRAppState vrAppState = new VRAppState(settings, env);\n            vrAppState.setMirrorWindowSize(1024, 800);\n            Main app = new Main(vrAppState);\n            app.setLostFocusBehavior(LostFocusBehavior.Disabled);\n            app.setSettings(settings);\n            app.setShowSettings(false);\n            app.start();\n        }\n    }\n\n    public Main(AppState... appStates) {\n        super(appStates);\n    }\n\n    @Override\n    public void simpleInitApp() {\n        Box b = new Box(1, 1, 1);\n        Geometry geom = new Geometry("Box", b);\n\n        Material mat = new Material(assetManager, "Common/MatDefs/Misc/Unshaded.j3md");\n        mat.setColor("Color", ColorRGBA.Blue);\n        geom.setMaterial(mat);\n\n        rootNode.attachChild(geom);\n    }\n\n    @Override\n    public void simpleUpdate(float tpf) {\n        //TODO: add update code\n    }\n\n    @Override\n    public void simpleRender(RenderManager rm) {\n        //TODO: add render code\n    }\n}\n')),Object(o.b)("p",null,"Project source: ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/neph1/VRSampleApplication"}),"https://github.com/neph1/VRSampleApplication")),Object(o.b)("h1",{id:"google-cardboard-vr-sdk-10-integration"},"Google Cardboard VR SDK 1.0 integration"),Object(o.b)("p",null,"gvr-android-jme (",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/nordfalk/gvr-android-jme"}),"https://github.com/nordfalk/gvr-android-jme"),")"),Object(o.b)("h1",{id:"legacy"},"Legacy"),Object(o.b)("p",null,"The following projects are not up to date, but may provide functionality\nnot found in the other packages. Google Cardboard up to version 0.6:\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/neph1/jme-cardboard"}),"https://github.com/neph1/jme-cardboard")))}l.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),l=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p({},t,{},e)),n},u=function(e){var t=l(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return n?a.a.createElement(m,p({ref:t},s,{components:n})):a.a.createElement(m,p({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);