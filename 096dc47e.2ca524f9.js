(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{155:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return o})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return s})),t.d(a,"default",(function(){return c}));var n=t(1),r=t(9),i=(t(0),t(441)),o={},l={id:"jme3/beginner/hello_terrain",title:"hello_terrain",description:"Previous: [Hello Collision](../../jme3/beginner/hello_collision),",source:"@site/docs/jme3/beginner/hello_terrain.md",permalink:"/wikidemo/docs/jme3/beginner/hello_terrain",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/beginner/hello_terrain.md",sidebar:"main",previous:{title:"hello_collision",permalink:"/wikidemo/docs/jme3/beginner/hello_collision"},next:{title:"hello_audio",permalink:"/wikidemo/docs/jme3/beginner/hello_audio"}},s=[{value:"Looking at the Heightmap Code",id:"looking-at-the-heightmap-code",children:[]},{value:"Looking at the Texturing Code",id:"looking-at-the-texturing-code",children:[]},{value:"Looking at the Terrain Code",id:"looking-at-the-terrain-code",children:[]},{value:"Exercise 1: Texture Layers",id:"exercise-1-texture-layers",children:[]},{value:"Exercise 2: Randomized Terrains",id:"exercise-2-randomized-terrains",children:[]},{value:"Exercise 3: Solid Terrains",id:"exercise-3-solid-terrains",children:[]}],p={rightToc:s};function c(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,t,{components:a,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Previous: ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/beginner/hello_collision"}),"Hello Collision"),",\nNext: ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/beginner/hello_audio"}),"Hello Audio")),Object(i.b)("p",null,"One way to create a 3D landscape is to sculpt a huge terrain model. This\ngives you a lot of artistic freedom -- but rendering such a huge model\ncan be quite slow. This tutorial explains how to create fast-rendering\nterrains from heightmaps, and how to use texture splatting to make the\nterrain look good."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"/images/jme3/beginner/beginner-terrain.png",alt:"beginner-terrain.png"}))),Object(i.b)("p",null,"::: {.note}\nIf you get an error when trying to create your ",Object(i.b)("inlineCode",{parentName:"p"},"ImageBasedHeightMap"),"\nobject, you may need to update the SDK, click on\n",Object(i.b)("inlineCode",{parentName:"p"},"Help Check for Updates"),".\n:::"),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"To use the example assets in a new jMonkeyEngine SDK project, RMB select\nyour project, select ",Object(i.b)("inlineCode",{parentName:"p"},"Properties Libraries")," and in the ",Object(i.b)("inlineCode",{parentName:"p"},"Compile")," tab,\npress Add Library and add the ",Object(i.b)("inlineCode",{parentName:"p"},"jme3-test-data")," library."))),Object(i.b)("h1",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'package jme3test.helloworld;\n\nimport com.jme3.app.SimpleApplication;\nimport com.jme3.material.Material;\nimport com.jme3.renderer.Camera;\nimport com.jme3.terrain.geomipmap.TerrainLodControl;\nimport com.jme3.terrain.heightmap.AbstractHeightMap;\nimport com.jme3.terrain.geomipmap.TerrainQuad;\nimport com.jme3.terrain.geomipmap.lodcalc.DistanceLodCalculator;\nimport com.jme3.terrain.heightmap.HillHeightMap; // for exercise 2\nimport com.jme3.terrain.heightmap.ImageBasedHeightMap;\nimport com.jme3.texture.Texture;\nimport com.jme3.texture.Texture.WrapMode;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/** Sample 10 - How to create fast-rendering terrains from heightmaps,\nand how to use texture splatting to make the terrain look good.  */\npublic class HelloTerrain extends SimpleApplication {\n\n  private TerrainQuad terrain;\n  Material mat_terrain;\n\n  public static void main(String[] args) {\n    HelloTerrain app = new HelloTerrain();\n    app.start();\n  }\n\n  @Override\n  public void simpleInitApp() {\n    flyCam.setMoveSpeed(50);\n\n    /** 1. Create terrain material and load four textures into it. */\n    mat_terrain = new Material(assetManager,\n            "Common/MatDefs/Terrain/Terrain.j3md");\n\n    /** 1.1) Add ALPHA map (for red-blue-green coded splat textures) */\n    mat_terrain.setTexture("Alpha", assetManager.loadTexture(\n            "Textures/Terrain/splat/alphamap.png"));\n\n    /** 1.2) Add GRASS texture into the red layer (Tex1). */\n    Texture grass = assetManager.loadTexture(\n            "Textures/Terrain/splat/grass.jpg");\n    grass.setWrap(WrapMode.Repeat);\n    mat_terrain.setTexture("Tex1", grass);\n    mat_terrain.setFloat("Tex1Scale", 64f);\n\n    /** 1.3) Add DIRT texture into the green layer (Tex2) */\n    Texture dirt = assetManager.loadTexture(\n            "Textures/Terrain/splat/dirt.jpg");\n    dirt.setWrap(WrapMode.Repeat);\n    mat_terrain.setTexture("Tex2", dirt);\n    mat_terrain.setFloat("Tex2Scale", 32f);\n\n    /** 1.4) Add ROAD texture into the blue layer (Tex3) */\n    Texture rock = assetManager.loadTexture(\n            "Textures/Terrain/splat/road.jpg");\n    rock.setWrap(WrapMode.Repeat);\n    mat_terrain.setTexture("Tex3", rock);\n    mat_terrain.setFloat("Tex3Scale", 128f);\n\n    /** 2. Create the height map */\n    AbstractHeightMap heightmap = null;\n    Texture heightMapImage = assetManager.loadTexture(\n            "Textures/Terrain/splat/mountains512.png");\n    heightmap = new ImageBasedHeightMap(heightMapImage.getImage());\n    heightmap.load();\n\n    /** 3. We have prepared material and heightmap.\n     * Now we create the actual terrain:\n     * 3.1) Create a TerrainQuad and name it "my terrain".\n     * 3.2) A good value for terrain tiles is 64x64 -- so we supply 64+1=65.\n     * 3.3) We prepared a heightmap of size 512x512 -- so we supply 512+1=513.\n     * 3.4) As LOD step scale we supply Vector3f(1,1,1).\n     * 3.5) We supply the prepared heightmap itself.\n     */\n    int patchSize = 65;\n    terrain = new TerrainQuad("my terrain", patchSize, 513, heightmap.getHeightMap());\n\n    /** 4. We give the terrain its material, position & scale it, and attach it. */\n    terrain.setMaterial(mat_terrain);\n    terrain.setLocalTranslation(0, -100, 0);\n    terrain.setLocalScale(2f, 1f, 2f);\n    rootNode.attachChild(terrain);\n\n    /** 5. The LOD (level of detail) depends on were the camera is: */\n    TerrainLodControl control = new TerrainLodControl(terrain, getCamera());\n    terrain.addControl(control);\n  }\n}\n')),Object(i.b)("p",null,"When you run this sample you should see a landscape with dirt mountains,\ngrass plains, plus some winding roads in between."),Object(i.b)("h1",{id:"what-is-a-heightmap"},"What is a Heightmap?"),Object(i.b)("p",null,"Heightmaps are an efficient way of representing the shape of a hilly\nlandscape. Not every pixel of the landscape is stored, instead, a grid\nof sample values is used to outline the terrain height at certain\npoints. The heights between the samples is interpolated."),Object(i.b)("p",null,"In Java, a heightmap is a float array containing height values between\n0f and 255f. Here is a very simple example of a terrain generated from a\nheightmap with 5x5=25 height values."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"/images/jme2/terrain-from-float-array.png",alt:"terrain-from-float-array.png"}))),Object(i.b)("p",null,"Important things to note:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Low values (e.g. 0 or 50) are valeys.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"High values (e.g. 200, 255) are hills.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The heightmap only specifies a few points, and the engine\ninterpolates the rest. Interpolation is more efficient than creating\na model with several millions vertices."))),Object(i.b)("p",null,"When looking at Java data types to hold an array of floats between 0 and\n255, the Image class comes to mind. Storing a terrain's height values as\na grayscale image has one big advantage: The outcome is a very\nuserfriendly, like a topographical map:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Low values (e.g. 0 or 50) are dark gray -- these are valleys.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"High values (e.g. 200, 255) are light grays -- these are hills."))),Object(i.b)("p",null,"Look at the next screenshot: In the top left you see a 128x128 grayscale\nimage (heightmap) that was used as a base to generate the depicted\nterrain. To make the hilly shape better visible, the mountain tops are\ncolored white, valleys brown, and the areas inbetween green:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"/images/jme2/terrain-from-heightmap.png",alt:"terrain-from-heightmap.png"}))),Object(i.b)("p",null,"In a real game, you will want to use more complex and smoother terrains\nthan the simple heightmaps shown here. Heightmaps typically have square\nsizes of 512x512 or 1024x1024, and contain hundred thousands to 1\nmillion height values. No matter which size, the concept is the same as\ndescribed here."),Object(i.b)("h2",{id:"looking-at-the-heightmap-code"},"Looking at the Heightmap Code"),Object(i.b)("p",null,"The first step of terrain creation is the heightmap. You can create one\nyourself in any standard graphic application. Make sure it has the\nfollowing properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The size must be square, and a power of two."),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Examples: 128x128, 256x256, 512x512, 1024x1024"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Color mode must be 255 grayscales."),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Don't supply a color image, it will be interpreted as grayscale,\nwith possibly weird results."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Save the map as a .jpg or .png image file"))),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"/images/jme3/beginner/mountains512.png",alt:"mountains512.png"}))),Object(i.b)("p",null,"The file ",Object(i.b)("inlineCode",{parentName:"p"},"mountains512.png")," that you see here is a typical example of an\nimage heightmap."),Object(i.b)("p",null,"Here is how you create the heightmap object in your jME code:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create a Texture object.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Load your prepared heightmap image into the texture object.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create an AbstractHeightmap object from an ImageBasedHeightMap.\\\nIt requires an image from a JME Texture.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Load the heightmap."))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'    AbstractHeightMap heightmap = null;\n    Texture heightMapImage = assetManager.loadTexture(\n            "Textures/Terrain/splat/mountains512.png");\n    heightmap = new ImageBasedHeightMap(heightMapImage.getImage());\n    heightmap.load();\n')),Object(i.b)("h1",{id:"what-is-texture-splatting"},"What is Texture Splatting?"),Object(i.b)("p",null,"Previously you learned how to create a material for a simple shape such\nas a cube. All sides of the cube have the same color. You can apply the\nsame material to a terrain, but then you have one big meadow, one big\nrock desert, etc. This is not always what you want."),Object(i.b)("p",null,'Texture splatting allows you create a custom material, and "paint\ntextures" on it like with a "paint brush". This is very useful for\nterrains: As you see in the example here, you can paint a grass texture\ninto the valleys, a dirt texture onto the mountains, and free-form roads\ninbetween.'),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The jMonkeyEngine SDK comes with a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../sdk/terrain_editor"}),"TerrainEditor\nplugin"),". Using the TerrainEditor plugin,\nyou can sculpt the terrain with the mouse, and save the result as\nheightmap. You can paint textures on the terrain and the plugin saves\nthe resulting splat textures as alphamap(s). The following paragraphs\ndescribe the manual process for you. You can choose to create the\nterrain by hand, or using the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../sdk/terrain_editor"}),"TerrainEditor\nplugin"),"."))),Object(i.b)("p",null,"Splat textures are based on the ",Object(i.b)("inlineCode",{parentName:"p"},"Terrain.j3md")," material defintion. If\nyou open the Terrain.j3md file, and look in the Material Parameters\nsection, you see that you have several texture layers to paint on:\n",Object(i.b)("inlineCode",{parentName:"p"},"Tex1"),", ",Object(i.b)("inlineCode",{parentName:"p"},"Tex2"),", ",Object(i.b)("inlineCode",{parentName:"p"},"Tex3"),", etc."),Object(i.b)("p",null,"Before you can start painting, you have to make a few decisions:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Choose three textures. For example grass.jpg, dirt.jpg, and\nroad.jpg."),Object(i.b)("img",{src:"/images/jme3/beginner/grass.jpg",width:"200px"}),Object(i.b)("img",{src:"/images/jme3/beginner/dirt.jpg",width:"200px"}),Object(i.b)("img",{src:"/images/jme3/beginner/road.jpg",width:"200px"})),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},'You "paint" three texture layers by using three colors: Red, blue\nand, green. You arbitrarily decide that...'),Object(i.b)("p",{parentName:"li"},"a.  Red is grass -- red is layer ",Object(i.b)("inlineCode",{parentName:"p"},"Tex1"),", so put the grass texture\ninto Tex1."),Object(i.b)("p",{parentName:"li"},"b.  Green is dirt -- green is layer ",Object(i.b)("inlineCode",{parentName:"p"},"Tex2"),", so put the dirt texture\ninto Tex2."),Object(i.b)("p",{parentName:"li"},"c.  Blue is roads -- blue is layer ",Object(i.b)("inlineCode",{parentName:"p"},"Tex3"),", so put the roads texture\ninto Tex3."))),Object(i.b)("p",null,"Now you start painting the texture:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Make a copy of your terrains heightmap, ",Object(i.b)("inlineCode",{parentName:"p"},"mountains512.png"),". You want\nit as a reference for the shape of the landscape.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Name the copy ",Object(i.b)("inlineCode",{parentName:"p"},"alphamap.png"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Open ",Object(i.b)("inlineCode",{parentName:"p"},"alphamap.png")," in a graphic editor and switch the image mode to\ncolor image."),Object(i.b)("p",{parentName:"li"},"a.  Paint the black valleys red -- this will be the grass."),Object(i.b)("p",{parentName:"li"},"b.  Paint the white hills green -- this will be the dirt of the\nmountains."),Object(i.b)("p",{parentName:"li"},"c.  Paint blue lines where you want roads to criss-cross the\nlandscape.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"The end result should look similar to this:"),Object(i.b)("img",{src:"/images/jme3/beginner/mountains512.png",width:"200px"}),"\u21d2",Object(i.b)("img",{src:"/images/jme3/beginner/alphamap.png",width:"200px"}))),Object(i.b)("h2",{id:"looking-at-the-texturing-code"},"Looking at the Texturing Code"),Object(i.b)("p",null,"As usual, you create a Material object. Base it on the Material\nDefinition ",Object(i.b)("inlineCode",{parentName:"p"},"Terrain.j3md")," that is included in the jME3 framework."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'Material mat_terrain = new Material(assetManager, "Common/MatDefs/Terrain/Terrain.j3md");\n')),Object(i.b)("p",null,"Load four textures into this material. The first one, ",Object(i.b)("inlineCode",{parentName:"p"},"Alpha"),", is the\nalphamap that you just created."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat_terrain.setTexture("Alpha",\n    assetManager.loadTexture("Textures/Terrain/splat/alphamap.png"));\n')),Object(i.b)("p",null,"The three other textures are the layers that you have previously decided\nto paint: grass, dirt, and road. You create texture objects and load the\nthree textures as usual. Note how you assign them to their respective\ntexture layers (Tex1, Tex2, and Tex3) inside the Material!"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'    /** 1.2) Add GRASS texture into the red layer (Tex1). */\n    Texture grass = assetManager.loadTexture(\n            "Textures/Terrain/splat/grass.jpg");\n    grass.setWrap(WrapMode.Repeat);\n    mat_terrain.setTexture("Tex1", grass);\n    mat_terrain.setFloat("Tex1Scale", 64f);\n\n    /** 1.3) Add DIRT texture into the green layer (Tex2) */\n    Texture dirt = assetManager.loadTexture(\n            "Textures/Terrain/splat/dirt.jpg");\n    dirt.setWrap(WrapMode.Repeat);\n    mat_terrain.setTexture("Tex2", dirt);\n    mat_terrain.setFloat("Tex2Scale", 32f);\n\n    /** 1.4) Add ROAD texture into the blue layer (Tex3) */\n    Texture rock = assetManager.loadTexture(\n            "Textures/Terrain/splat/road.jpg");\n    rock.setWrap(WrapMode.Repeat);\n    mat_terrain.setTexture("Tex3", rock);\n    mat_terrain.setFloat("Tex3Scale", 128f);\n')),Object(i.b)("p",null,"The individual texture scales (e.g.\n",Object(i.b)("inlineCode",{parentName:"p"},'mat_terrain.setFloat("Tex3Scale", 128f);'),") depend on the size of the\ntextures you use."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"You can tell you picked too small a scale if, for example, your road\ntiles appear like tiny grains of sand.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"You can tell you picked too big a scale if, for example, the blades\nof grass look like twigs."))),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"setWrap(WrapMode.Repeat)")," to make the small texture fill the wide\narea. If the repetition is too visible, try adjusting the respective\n",Object(i.b)("inlineCode",{parentName:"p"},"Tex*Scale")," value."),Object(i.b)("h1",{id:"what-is-a-terrain"},"What is a Terrain?"),Object(i.b)("p",null,'Internally, the generated terrain mesh is broken down into tiles and\nblocks. This is an optimization to make culling easier. You do not need\nto worry about "tiles" and "blocks" too much, just use recommended\nvalues for now -- 64 is a good start.'),Object(i.b)("p",null,"Let's assume you want to generate a 512x512 terrain. You already have\ncreated the heightmap object. Here are the steps that you perform\neverytime you create a new terrain."),Object(i.b)("p",null,"Create a TerrainQuad with the following arguments:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Specify a name: E.g. ",Object(i.b)("inlineCode",{parentName:"p"},"my terrain"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Specify tile size: You want to terrain tiles of size 64x64, so you\nsupply 64+1 = 65."),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"In general, 64 is a good starting value for terrain tiles."))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Specify block size: Since you prepared a heightmap of size 512x512,\nyou supply 512+1 = 513."),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"If you supply a block size of 2x the heightmap size\n(1024+1=1025), you get a stretched out, wider, flatter terrain.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"If you supply a block size 1/2 the heightmap size (256+1=257),\nyou get a smaller, more detailed terrain.")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Supply the 512x512 heightmap object that you created."))),Object(i.b)("h2",{id:"looking-at-the-terrain-code"},"Looking at the Terrain Code"),Object(i.b)("p",null,"Here's the code:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),'terrain = new TerrainQuad(\n  "my terrain",               // name\n  65,                         // tile size\n  513,                        // block size\n  heightmap.getHeightMap());  // heightmap\n')),Object(i.b)("p",null,"You have created the terrain object."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Remember to apply the created material:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"terrain.setMaterial(mat_terrain);\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Remember to attach the terrain to the rootNode."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"rootNode.attachChild(terrain);\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"If needed, scale and translate the terrain object, just like any\nother Spatial."))),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Terrain.j3md is an unshaded material definition, so you do not need a\nlight source. You can also use TerrainLighting.j3md plus a light, if you\nwant a shaded terrain."))),Object(i.b)("h1",{id:"what-is-lod-level-of-detail"},"What is LOD (Level of Detail)?"),Object(i.b)("p",null,"JME3 includes an optimization that adjusts the level of detail (LOD) of\nthe rendered terrain depending on how close or far the camera is."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"    TerrainLodControl control = new TerrainLodControl(terrain, getCamera());\n    terrain.addControl(control);\n")),Object(i.b)("p",null,"Close parts of the terrain are rendered in full detail. Terrain parts\nthat are further away are not clearly visible anyway, and JME3 improves\nperformance by rendering them less detailed. This way you can afford to\nload huge terrains with no penalty caused by invisible details."),Object(i.b)("h1",{id:"exercises"},"Exercises"),Object(i.b)("h2",{id:"exercise-1-texture-layers"},"Exercise 1: Texture Layers"),Object(i.b)("p",null,"What happens when you swap two layers, for example ",Object(i.b)("inlineCode",{parentName:"p"},"Tex1")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Tex2"),"?"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'...\nmat_terrain.setTexture("Tex2", grass);\n...\nmat_terrain.setTexture("Tex1", dirt);\n')),Object(i.b)("p",null,"You see it's easier to swap layers in the code, than to change the\ncolors in the alphamap."),Object(i.b)("h2",{id:"exercise-2-randomized-terrains"},"Exercise 2: Randomized Terrains"),Object(i.b)("p",null,"The following three lines generate the heightmap object based on your\nuser-defined image:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'    AbstractHeightMap heightmap = null;\n    Texture heightMapImage = assetManager.loadTexture(\n        "Textures/Terrain/splat/mountains512.png");\n    heightmap = new ImageBasedHeightMap(heightMapImage.getImage());\n')),Object(i.b)("p",null,"Instead, you can also let JME3 generate a random landscape for you:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"What result do you get when you replace the above three heightmap\nlines by the following lines and run the sample?"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"HillHeightMap heightmap = null;\nHillHeightMap.NORMALIZE_RANGE = 100; // optional\ntry {\n    heightmap = new HillHeightMap(513, 1000, 50, 100, (byte) 3); // byte 3 is a random seed\n} catch (Exception ex) {\n    ex.printStackTrace();\n}\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Change one parameter at a time, and the run the sample again. Note\nthe differences. Can you find out which of the values has which\neffect on the generated terrain (look at the javadoc also)?"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Which value controls the size?"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"What happens if the size is not a square number +1 ?"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Which value controls the number of hills generated?")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Which values control the size and steepness of the hills?"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"What happens if the min is bigger than or equal to max?")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"What happens if both min and max are small values (e.g.\n10/20)?")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"What happens if both min and max are large values (e.g.\n1000/1500)?")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"What happens if min and max are very close(e.g. 1000/1001,\n20/21)? Very far apart (e.g. 10/1000)?"))))))),Object(i.b)("p",null,"You see the variety of hilly landscapes that can be generated using this\nmethod."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"For this exercise, you can keep using the splat Material from the sample\ncode above. Just don't be surprised that the Material does not match the\nshape of the newly randomized landscape. If you want to generate real\nmatching splat textures for randomized heightmaps, you need to write a\ncustom method that, for example, creates an alphamap from the heightmap\nby replacing certain grayscales with certain RGB values."))),Object(i.b)("h2",{id:"exercise-3-solid-terrains"},"Exercise 3: Solid Terrains"),Object(i.b)("p",null,"Can you combine what you learned here and in ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/beginner/hello_collision"}),"Hello\nCollision"),", and ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/terrain_collision"}),"make the\nterrain solid"),"?"),Object(i.b)("h1",{id:"conclusion"},"Conclusion"),Object(i.b)("p",null,'You have learned how to create terrains that are more efficient than\nloading one giant model. You know how to generate random or create\nhandmade heightmaps. You can add a LOD control to render large terrains\nfaster. You are aware that you can combine what you learned about\ncollision detection to make the terrain solid to a physical player. You\nare also able to texture a terrain "like a boss using layered Materials\nand texture splatting. You are aware that the jMonkeyEngine SDK provides\na TerrainEditor that helps with most of these manual tasks.'),Object(i.b)("p",null,'Do you want to hear your players say "ouch!" when they bump into a wall\nor fall off a hill? Continue with learning ',Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/beginner/hello_audio"}),"how to add\nsound")," to your game."),Object(i.b)("p",null,"See also:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/terrain_collision"}),"Terrain Collision"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/terrain.html"}),"Advanced Terrain")))))}c.isMDXComponent=!0},441:function(e,a,t){"use strict";t.d(a,"a",(function(){return b})),t.d(a,"b",(function(){return d}));var n=t(0),r=t.n(n);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),c=function(e){var a=r.a.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):l({},a,{},e)),t},b=function(e){var a=c(e.components);return r.a.createElement(p.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},h=Object(n.forwardRef)((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=c(t),h=n,d=b["".concat(o,".").concat(h)]||b[h]||m[h]||i;return t?r.a.createElement(d,l({ref:a},p,{components:t})):r.a.createElement(d,l({ref:a},p))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=h;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}h.displayName="MDXCreateElement"}}]);