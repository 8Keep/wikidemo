(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{324:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(1),i=n(9),o=(n(0),n(441)),r={},l={id:"jme3/advanced/hud",title:"hud",description:"A HUD (Head-Up Display) is part of a game's visual user interface. It's",source:"@site/docs/jme3/advanced/hud.md",permalink:"/wikidemo/docs/jme3/advanced/hud",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/hud.md"},s=[{value:"Displaying Pictures in the HUD",id:"displaying-pictures-in-the-hud",children:[]},{value:"Displaying Text in the HUD",id:"displaying-text-in-the-hud",children:[]},{value:"Positioning HUD Elements",id:"positioning-hud-elements",children:[]},{value:"Displaying Geometries in the HUD",id:"displaying-geometries-in-the-hud",children:[]},{value:"Keeping the HUD Up-To-Date",id:"keeping-the-hud-up-to-date",children:[]}],c={rightToc:s};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A HUD (Head-Up Display) is part of a game's visual user interface. It's\nan overlay that displays additional information as (typically)\n2-dimensional text or icons on the screen, on top of the 3D scene. Not\nall games have, or need a HUD. To avoid breaking the immersion and\ncluttering the screen, only use a HUD if it is the only way to convey\ncertain information."),Object(o.b)("p",null,"HUDs are used to supply players with essential information about the\ngame state."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Status: Score, minimap, points, stealth mode, ...")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Resources: Ammunition, lives/health, time, ...")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Vehicle instruments: Cockpit, speedometer, ...")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Navigational aides: Crosshairs, mouse pointer or hand, ..."))),Object(o.b)("p",null,"You have multiple options how to create HUDs."),Object(o.b)("p",null,"+----------------------+----------------------+-----------------------+\n| Option               | Pros                 | Cons                  |\n+======================+======================+=======================+\n| Attach elements to   | Easy to learn.       | Only basic features.\\ |\n| default guiNode:     | jMonkeyEngine        | You will have to      |\n|                      | built-in API for     | write custom controls |\n|                      | attaching plain      | / buttons / effects   |\n|                      | images and bitmap    | if you need them.     |\n|                      | text.                |                       |\n+----------------------+----------------------+-----------------------+\n| Use advanced ","[Nifty  | Full-featured        | Steeper learning      |\n| GUI]","(../../jme3/adv  | interactive user     | curve.                |\n| anced/nifty_gui) | interface.\\          |                       |\n| integration:         | Includes buttons,    |                       |\n|                      | effects, controls.\\  |                       |\n|                      | Supports XML and     |                       |\n|                      | Java layouts.        |                       |\n+----------------------+----------------------+-----------------------+\n| Use user contributed | Both have many       | Are not necessarily   |\n| GUI libraries such   | features that would  | guaranteed future     |\n| as                   | be difficult to do   | updates, not as well  |\n| ","[tonegodgui]","(        | with Nifty\\          | documented            |\n| ../../jme3/contribut | Includes buttons,    |                       |\n| ions/tonegodgui) | effects, controls.\\  |                       |\n| or                   | New features are     |                       |\n| ","[Lemur]","(ht           | still being released |                       |\n| tp://hub.jmonkeyengi |                      |                       |\n| ne.org/t/lemur-api-d |                      |                       |\n| ocumentation/27209): |                      |                       |\n+----------------------+----------------------+-----------------------+"),Object(o.b)("p",null,"Using the GUI Node is the default approach in jme3 to create simple\nHUDs. If you just quickly want to display a line of text, or a simple\nicon on the screen, use the no-frills GUI Node, it's easier."),Object(o.b)("h1",{id:"simple-hud-gui-node"},"Simple HUD: GUI Node"),Object(o.b)("p",null,"You already know the ",Object(o.b)("inlineCode",{parentName:"p"},"rootNode")," that holds the 3-dimensional scene\ngraph. jME3 also offers a 2-dimension (orthogonal) node, the ",Object(o.b)("inlineCode",{parentName:"p"},"guiNode"),"."),Object(o.b)("p",null,"This is how you use the guiNode for HUDs:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Create a GUI element: a BitmapText or Picture object.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Attach the element to the guiNode.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Place the element in the orthogonal render queue using\n",Object(o.b)("inlineCode",{parentName:"p"},"setQueueBucket(Bucket.Gui)"),"."))),Object(o.b)("p",null,"The BitmapTexts and Pictures appear as 2 dimensional element on the\nscreen."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"By default, the guiNode has some scene graph statistics attached. To\nclear the guiNode before you attach your own GUI elements, use the\nfollowing methods:"),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"setDisplayStatView(false); setDisplayFps(false);\n")))),Object(o.b)("h2",{id:"displaying-pictures-in-the-hud"},"Displaying Pictures in the HUD"),Object(o.b)("p",null,"A simple image can be displayed using ",Object(o.b)("inlineCode",{parentName:"p"},"com.jme3.ui.Picture"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'Picture pic = new Picture("HUD Picture");\npic.setImage(assetManager, "Textures/ColoredTex/Monkey.png", true);\npic.setWidth(settings.getWidth()/2);\npic.setHeight(settings.getHeight()/2);\npic.setPosition(settings.getWidth()/4, settings.getHeight()/4);\nguiNode.attachChild(pic);\n')),Object(o.b)("p",null,"When you set the last boolean in setImage() to true, the alpha channel\nof your image is rendered transparent/translucent."),Object(o.b)("h2",{id:"displaying-text-in-the-hud"},"Displaying Text in the HUD"),Object(o.b)("p",null,"You use ",Object(o.b)("inlineCode",{parentName:"p"},"com.jme3.font.BitmapText")," to display text on the screen."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'BitmapText hudText = new BitmapText(guiFont, false);\nhudText.setSize(guiFont.getCharSet().getRenderedSize());      // font size\nhudText.setColor(ColorRGBA.Blue);                             // font color\nhudText.setText("You can write any string here");             // the text\nhudText.setLocalTranslation(300, hudText.getLineHeight(), 0); // position\nguiNode.attachChild(hudText);\n')),Object(o.b)("p",null,"The BitmapFont object ",Object(o.b)("inlineCode",{parentName:"p"},"guiFont")," is a default font provided by\nSimpleApplication. Copy you own fonts as .fnt plus .png files into the\n",Object(o.b)("inlineCode",{parentName:"p"},"assets/Interface/Fonts")," directory and load them like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'BitmapFont myFont = assetManager.loadFont("Interface/Fonts/Console.fnt");\nhudText = new BitmapText(myFont, false);\n')),Object(o.b)("h2",{id:"positioning-hud-elements"},"Positioning HUD Elements"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"When positioning GUI text and images in 2D, the ",Object(o.b)("strong",{parentName:"p"},"bottom left\ncorner")," of the screen is ",Object(o.b)("inlineCode",{parentName:"p"},"(0f,0f)"),", and the ",Object(o.b)("strong",{parentName:"p"},"top right corner")," is\nat ",Object(o.b)("inlineCode",{parentName:"p"},"(settings.getWidth(),settings.getHeight())"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"If you have several 2D elements in the GUI bucket that overlap,\ndefine their depth order by specifing a Z value. For example use\n",Object(o.b)("inlineCode",{parentName:"p"},"pic.move(x, y, -1)")," to move the picture to the background, or\n",Object(o.b)("inlineCode",{parentName:"p"},"hudText.setLocalTranslation(x,y,1)")," to move text to the foreground.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Size and length values in the orthogonal render queue are treated\nlike pixels. A 20","*","20-wu big quad is rendered 20 pixels wide."))),Object(o.b)("h2",{id:"displaying-geometries-in-the-hud"},"Displaying Geometries in the HUD"),Object(o.b)("p",null,"It is technically possible to attach Quads and 3D Geometries to the HUD.\nThey show up as flat, static GUI elements. The size unit for the guiNode\nis pixels, not world units. If you attach a Geometry that uses a lit\nMaterial, you must add a light to the guiNode."),Object(o.b)("p",null,"::: {.important}\nIf you don't see an attached object in the GUI, check it's position and\nmaterial (add a light to guiNode). Also verify whether it is not too\ntiny to be seen. For comparison: A 1 world-unit wide cube is only 1\npixel wide when attached to the guiNode! You may need to scale it\nbigger.\n:::"),Object(o.b)("h2",{id:"keeping-the-hud-up-to-date"},"Keeping the HUD Up-To-Date"),Object(o.b)("p",null,"Use the update loop to keep the content up-to-date."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'public void simpleUpdate(float tpf) {\n  ...\n  hudText.setText("Score: " + score);\n  ...\n  picture.setImage(assetManager, "Interface/statechange.png", true);\n  ...\n}\n')),Object(o.b)("h1",{id:"advanced-hud-nifty-gui"},"Advanced HUD: Nifty GUI"),Object(o.b)("p",null,"The recommended approach to create HUDs is using ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui"}),"Nifty\nGUI"),"."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Lay out the GUI in one or several Nifty XML or Java files.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Write the controller classes in Java.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Load the XML file with the controller object in your game's\nsimpleInit() method."))),Object(o.b)("p",null,"The advantage of Nifty GUI is that it is well integrated into jME and\nthe jMonkeyEngine SDK, and that it offers all the features that you\nexpect from a professional modern user interface."),Object(o.b)("p",null,"For HUDs, you basically follow the same instructions as for creating a\nnormal ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui"}),"Nifty GUI"),", you just don't\npause the game while the HUD is up."),Object(o.b)("h1",{id:"see-also"},"See also"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"../../jme3/external/fonts"}),"Fonts"))))}p.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var a=n(0),i=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),p=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},u=function(e){var t=p(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=a,h=u["".concat(r,".").concat(b)]||u[b]||d[b]||o;return n?i.a.createElement(h,l({ref:t},c,{components:n})):i.a.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);