(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{265:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(1),r=n(9),i=(n(0),n(441)),o={},c={id:"jme3/advanced/nifty_gui_java_interaction",title:"nifty_gui_java_interaction",description:"1.  [Nifty GUI Concepts](../../jme3/advanced/nifty_gui)",source:"@site/docs/jme3/advanced/nifty_gui_java_interaction.md",permalink:"/wikidemo/docs/jme3/advanced/nifty_gui_java_interaction",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/nifty_gui_java_interaction.md"},l=[{value:"GUI Calls a Void Java Method",id:"gui-calls-a-void-java-method",children:[]},{value:"GUI Gets Return Value from Java Method",id:"gui-gets-return-value-from-java-method",children:[]},{value:"Java Modifies Nifty Elements and Events",id:"java-modifies-nifty-elements-and-events",children:[]}],p={rightToc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui"}),"Nifty GUI Concepts"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_best_practices"}),"Nifty GUI Best\nPractices"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_xml_layout"}),"Nifty GUI XML Layout"),"\nor ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_java_layout"}),"Nifty GUI Java\nLayout"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_overlay"}),"Nifty GUI Overlay")," or\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_projection"}),"Nifty GUI Projection"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Nifty GUI Java Interaction")))),Object(i.b)("p",null,"In the previous parts of the tutorial, you created a two-screen user\ninterface. But it is still static, and when you click the buttons,\nnothing happens yet. The purpose of the GUI is to communicate with your\nJava classes: Your game needs to know what the users clicked, which\nsettings they chose, which values they entered into a field, etc.\nSimilarly, the user needs to know what the currently game state is\n(score, health, etc)."),Object(i.b)("h1",{id:"connect-gui-to-java-controller"},"Connect GUI to Java Controller"),Object(i.b)("p",null,"To let a Nifty screen communicate with the Java application, you\nregister a ",Object(i.b)("inlineCode",{parentName:"p"},"ScreenController")," to every NiftyGUI screen. You create a\nScreenController by creating a Java class that implements the\n",Object(i.b)("inlineCode",{parentName:"p"},"de.lessvoid.nifty.screen.ScreenController")," interface and its abstract\nmethods."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Pro Tip:")," Since you are writing a jME3 application, you can\nadditionally make the ScreenController class extend the\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/application_states"}),"BaseAppState")," class! This\ngives the ScreenController access to the application object and to the\nupdate loop!"),Object(i.b)("p",null,"Create an AppState ",Object(i.b)("strong",{parentName:"p"},"MyStartScreen"),".java file in your package. ( RMB\nclick on your package and select\n",Object(i.b)("inlineCode",{parentName:"p"},"New Other JME3 Classes New BaseAppState"),")"),Object(i.b)("p",null,"Now add ",Object(i.b)("strong",{parentName:"p"},"implements ScreenController")," to ",Object(i.b)("em",{parentName:"p"},"public class MyStartScreen\nextends BaseAppState{")," and add ",Object(i.b)("strong",{parentName:"p"},"import\nde.lessvoid.nifty.screen.ScreenController;")),Object(i.b)("p",null,"Continue with adding:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'import de.lessvoid.nifty.screen.Screen;\n\n...\n\npublic void bind(Nifty nifty, Screen screen) {\n    throw new UnsupportedOperationException("Not supported yet.");\n}\n\npublic void onStartScreen() {\n    throw new UnsupportedOperationException("Not supported yet.");\n}\n\npublic void onEndScreen() {\n    throw new UnsupportedOperationException("Not supported yet.");\n}\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Complete BaseAppState file.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'package mygame;\n\nimport com.jme3.app.Application;\nimport com.jme3.app.state.BaseAppState;\nimport de.lessvoid.nifty.Nifty;\nimport de.lessvoid.nifty.screen.Screen;\nimport de.lessvoid.nifty.screen.ScreenController;\n\npublic class MyStartScreen extends BaseAppState implements ScreenController {\n\n  @Override\n  protected void initialize(Application app) {\n      //It is technically safe to do all initialization and cleanup in the\n      //onEnable()/onDisable() methods. Choosing to use initialize() and\n      //cleanup() for this is a matter of performance specifics for the\n      //implementor.\n      //TODO: initialize your AppState, e.g. attach spatials to rootNode\n  }\n\n  @Override\n  protected void cleanup(Application app) {\n      //TODO: clean up what you initialized in the initialize method,\n      //e.g. remove all spatials from rootNode\n  }\n\n  //onEnable()/onDisable() can be used for managing things that should\n  //only exist while the state is enabled. Prime examples would be scene\n  //graph attachment or input listener attachment.\n  @Override\n  protected void onEnable() {\n      //Called when the state is fully enabled, ie: is attached and\n      //isEnabled() is true or when the setEnabled() status changes after the\n      //state is attached.\n  }\n\n  @Override\n  protected void onDisable() {\n      //Called when the state was previously enabled but is now disabled\n      //either because setEnabled(false) was called or the state is being\n      //cleaned up.\n  }\n\n  @Override\n  public void update(float tpf) {\n      //TODO: implement behavior during runtime\n  }\n\n  /**\n   * Bind this ScreenController to a screen. This happens right before the\n   * onStartScreen STARTED and only exactly once for a screen!\n   * @param nifty nifty\n   * @param screen screen\n   */\n  @Override\n  public void bind(Nifty nifty, Screen screen) {\n      throw new UnsupportedOperationException("Not supported yet.");\n  }\n\n  /**\n   * called right after the onStartScreen event ENDED.\n   */\n  @Override\n  public void onStartScreen() {\n      throw new UnsupportedOperationException("Not supported yet.");\n  }\n\n  /**\n   * called right after the onEndScreen event ENDED.\n   */\n  @Override\n  public void onEndScreen() {\n      throw new UnsupportedOperationException("Not supported yet.");\n  }\n}\n')),Object(i.b)("p",null,"The name and package of your custom ScreenController class (here\n",Object(i.b)("inlineCode",{parentName:"p"},"mygame.MyStartScreen"),") goes into the controller parameter of the\nrespective XML screen it belongs to. For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-{.xml}"}),'<nifty>\n  <screen id="start" controller="mygame.MyStartScreen">\n      \x3c!-- layer and panel code ... --\x3e\n  </screen>\n</nifty>\n')),Object(i.b)("p",null,"Or the same in a Java syntax, respectively:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'nifty.addScreen("start", new ScreenBuilder("start") {{\n  controller(new mygame.MyStartScreen());\n}}.build(nifty));\n')),Object(i.b)("p",null,"Now the Java class ",Object(i.b)("inlineCode",{parentName:"p"},"MyStartScreen")," and this GUI screen (",Object(i.b)("inlineCode",{parentName:"p"},"start"),") are\nconnected. For this example you can also connect the ",Object(i.b)("inlineCode",{parentName:"p"},"hud")," screen to\nMyStartScreen."),Object(i.b)("p",null,"See also: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nifty-gui/nifty-gui/raw/1.4/nifty-core/manual/nifty-gui-the-manual-1.3.2.pdf"}),"Nifty GUI - the Manual: Elements (Screen\nController)")),Object(i.b)("h1",{id:"make-gui-and-java-interact"},"Make GUI and Java Interact"),Object(i.b)("p",null,"In most cases, you will want to pass game data in and out of the\nScreenController. Note that you can pass any custom arguments from your\nJava class into your ScreenController constructor\n(",Object(i.b)("inlineCode",{parentName:"p"},"public MyStartScreen(GameData data) {}"),")."),Object(i.b)("p",null,"Use any combination of the three following approaches to make Java\nclasses interact with the GUI."),Object(i.b)("h2",{id:"gui-calls-a-void-java-method"},"GUI Calls a Void Java Method"),Object(i.b)("p",null,"This is how you respond to an GUI interaction such as clicks in XML\nGUIs:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Add ",Object(i.b)("inlineCode",{parentName:"p"},'visibleToMouse="true"')," to the parent element!")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Embed the ",Object(i.b)("inlineCode",{parentName:"p"},"<interact />")," element into the parent element.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Specify the Java methods that you want to call when the users\nperforms certain actions, such as clicking.\\\nExample: ",Object(i.b)("inlineCode",{parentName:"p"},'<interact onClick="startGame(hud)" />')))),Object(i.b)("p",null,"Or this is how you respond to an GUI interaction such as clicks in Java\nGUIs:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Add ",Object(i.b)("inlineCode",{parentName:"p"},"visibleToMouse(true);")," to the parent element!")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Embed one of the ",Object(i.b)("inlineCode",{parentName:"p"},"interact\u2026()")," elements into the parent element.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Specify the Java method that you want to call after the\ninteraction.\\\nExample: ",Object(i.b)("inlineCode",{parentName:"p"},'interactOnClick("startGame(hud)");')))),Object(i.b)("p",null,"In the following example, we call the ",Object(i.b)("inlineCode",{parentName:"p"},"startGame()")," method when the\nplayer clicks the Start button, and ",Object(i.b)("inlineCode",{parentName:"p"},"quitGame()")," when the player clicks\nthe Quit button."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-{.xml}"}),'<panel id="panel_bottom_left" height="50%" width="50%" valign="center" childLayout="center">\n  <control name="button" label="Start" id="StartButton" align="center" valign="center"\n    visibleToMouse="true" >\n    <interact onClick="startGame(hud)"/>\n  </control>\n</panel>\n\n<panel id="panel_bottom_right" height="50%" width="50%" valign="center" childLayout="center">\n  <control name="button" label="Quit" id="QuitButton" align="center" valign="center"\n    visibleToMouse="true" >\n    <interact onClick="quitGame()"/>\n  </control>\n</panel>\n')),Object(i.b)("p",null,"Or the same in a Java syntax, respectively:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'control(new ButtonBuilder("StartButton", "Start") {{\n  alignCenter();\n  valignCenter();\n  height("50%");\n  width("50%");\n  visibleToMouse(true);\n  interactOnClick("startGame(hud)");\n}});\n...\n\ncontrol(new ButtonBuilder("QuitButton", "Quit") {{\n  alignCenter();\n  valignCenter();\n  height("50%");\n  width("50%");\n  visibleToMouse(true);\n  interactOnClick("quitGame()");\n}});\n')),Object(i.b)("p",null,"Back in the MyStartScreen class, you specify what the ",Object(i.b)("inlineCode",{parentName:"p"},"startGame()")," and\n",Object(i.b)("inlineCode",{parentName:"p"},"quitGame()")," methods do. As you see, you can pass String arguments (here\n",Object(i.b)("inlineCode",{parentName:"p"},"hud"),") in the method call. You also see that you have access to the\nApplication object."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public class MyStartScreen extends BaseAppState implements ScreenController {\n  ...\n\n  /** custom methods */\n  public void startGame(String nextScreen) {\n    nifty.gotoScreen(nextScreen);  // switch to another screen\n    // start the game and do some more stuff...\n  }\n\n  public void quitGame() {\n    getApplication().stop();\n  }\n\n  ...\n}\n")),Object(i.b)("p",null,"The startGame() example simply switches the GUI to the ",Object(i.b)("inlineCode",{parentName:"p"},"hud")," screen when\nthe user clicks Start. Of course, in a real game, you would perform more\nsteps here: Load the game level, switch to in-game input and navigation\nhandling, set a custom ",Object(i.b)("inlineCode",{parentName:"p"},"running")," boolean to true, attach custom in-game\nAppStates -- and lots more."),Object(i.b)("p",null,"The quitGame() example shows that you have access to the Application\nobject because you made the ScreenController extend BaseAppState."),Object(i.b)("h2",{id:"gui-gets-return-value-from-java-method"},"GUI Gets Return Value from Java Method"),Object(i.b)("p",null,"When the Nifty GUI is initialized, you can get data from Java. In this\nexample, the Java class ",Object(i.b)("inlineCode",{parentName:"p"},"getPlayerName()")," in ",Object(i.b)("inlineCode",{parentName:"p"},"MyStartScreen")," defines the\nText that is displayed in the textfield before the words ",Object(i.b)("inlineCode",{parentName:"p"},"'s Cool Game"),"."),Object(i.b)("p",null,"First define a Java method in the screen controller, in this example,\n",Object(i.b)("inlineCode",{parentName:"p"},"getPlayerName()"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'public class MySettingsScreen implements ScreenController {\n  ...\n  public String getPlayerName(){\n    return System.getProperty("user.name");\n  }\n}\n')),Object(i.b)("p",null,"Nifty uses ",Object(i.b)("inlineCode",{parentName:"p"},"${CALL.getPlayerName()}")," to get the return value of the\ngetPlayerName() method from your ScreenController Java class."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-{.xml}"}),'<text text="${CALL.getPlayerName()}\'s Cool Game" font="Interface/Fonts/Default.fnt" width="100%" height="100%" />\n')),Object(i.b)("p",null,"Or the same in a Java syntax, respectively:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'text(new TextBuilder() {{\n  text("${CALL.getPlayerName()}\'s Cool Game");\n  font("Interface/Fonts/Default.fnt");\n  height("100%");\n  width("100%");\n}});\n')),Object(i.b)("p",null,"You can use this for Strings and numeric values (e.g. when you read\nsettings from a file, you display the results in the GUI) and also for\nmethods with side effects."),Object(i.b)("h2",{id:"java-modifies-nifty-elements-and-events"},"Java Modifies Nifty Elements and Events"),Object(i.b)("p",null,"You can also alter the appearance and functions of your nifty elements\nfrom Java. Make certain that the element that you want to alter has its\n",Object(i.b)("inlineCode",{parentName:"p"},'id="name"')," attribute set, so you can identy and address it."),Object(i.b)("p",null,"Here's an example of how to change an image called ",Object(i.b)("inlineCode",{parentName:"p"},"playerhealth"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'// load or create new image\nNiftyImage img = nifty.getRenderEngine().createImage("Interface/Images/face2.png", false);\n// find old image\nElement niftyElement = nifty.getCurrentScreen().findElementByName("playerhealth");\n// swap old with new image\nniftyElement.getRenderer(ImageRenderer.class).setImage(img);\n')),Object(i.b)("p",null,'The same is valid for other elements, for example a text label "score":'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'// find old text\nElement niftyElement = nifty.getCurrentScreen().findElementByName("score");\n// swap old with new text\nniftyElement.getRenderer(TextRenderer.class).setText("124");\n')),Object(i.b)("p",null,"Similarly, to change the onClick() event of an element, create an\n",Object(i.b)("inlineCode",{parentName:"p"},"ElementInteraction")," object:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'Element niftyElement = nifty.getCurrentScreen().findElementByName("myElement");\nniftyElement.getElementInteraction().getPrimary().setOnMouseOver(new NiftyMethodInvoker(nifty, "myCustomMethod()", this));\n')),Object(i.b)("p",null,"For this to work, there already needs to be a (possibly inactive)\n",Object(i.b)("inlineCode",{parentName:"p"},"<interact />")," tag inside your xml element:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-{.xml}"}),'<interact onClick="doNothing()"/>\n')),Object(i.b)("h1",{id:"next-steps"},"Next Steps"),Object(i.b)("p",null,"You're done with the basic Nifty GUI for jME3 tutorial. You can proceed\nto advanced topics and learn how add controls and effects:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_scenarios"}),"Nifty GUI Scenarios"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nifty-gui/nifty-gui/raw/1.4/nifty-core/manual/nifty-gui-the-manual-1.3.2.pdf"}),"Nifty GUI - the\nManual"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nifty-gui/nifty-gui/wiki/Controls"}),"Controls")))))}s.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},b=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=s(n),u=a,d=b["".concat(o,".").concat(u)]||b[u]||m[u]||i;return n?r.a.createElement(d,c({ref:t},p,{components:n})):r.a.createElement(d,c({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);