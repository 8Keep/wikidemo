(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{303:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return m}));var n=a(1),r=a(9),b=(a(0),a(441)),i={},l={id:"jme3/features",title:"features",description:"See also: [requirements](../jme3/requirements).",source:"@site/docs/jme3/features.md",permalink:"/wikidemo/docs/jme3/features",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/features.md",sidebar:"main",previous:{title:"appsettings",permalink:"/wikidemo/docs/jme3/intermediate/appsettings"},next:{title:"optimization",permalink:"/wikidemo/docs/jme3/intermediate/optimization"}},p=[{value:"jMonkeyEngine3 File Formats",id:"jmonkeyengine3-file-formats",children:[]},{value:"Supported External File Types",id:"supported-external-file-types",children:[]}],c={rightToc:p};function m(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"See also: ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/requirements"}),"requirements"),"."),Object(b.b)("h1",{id:"software-development-kit-jmonkeyengine-sdk"},"Software Development Kit: jMonkeyEngine SDK"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/project_creation"}),"Creates jME3-ready Java projects")),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Preconfigured classpath")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Bundled with compatible JDK")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/asset_manager"}),"Asset Manager")," for loading\nmulti-media files and 3D models including asset name code\ncompletion")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/default_build_script"}),"Non-proprietary Ant build\nscripts"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"jME3-ready Javadoc popups, ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/sample_code"}),"sample code\nprojects"),", and code snippet palette")))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/code_editor"}),"Full-featured Java and XML code editor"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/update_center"}),"Plugins")),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/version_control"}),"File Version Control"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/debugging_profiling_testing"}),"Debugger and Profiler\n(optional)"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/model_loader_and_viewer"}),"Converters and Importers for game assets (3D models\netc)"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/scene_composer"}),"3D Scene Viewer and Scene Composer"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/material_editing"}),"Material editor"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Shader Node editor")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/terrain_editor"}),"Terrain generation, painting, and\nediting"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/external/fonts"}),"Custom font creator"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/neotexture"}),"Procedural texture creator (NeoTexture)"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/level_of_detail"}),"Level of Detail (LOD)\ngenerator"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk"}),"...\u200b and much more...\u200b"))))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/application_deployment"}),"Deployment")),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Generates desktop executables for Win, Mac, Linux")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Generates mobile executables for ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/android"}),"Android"),",\niOS support is in the works.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Generates JNLP WebStart and Java Browser Applets")))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../sdk/whynoteclipse"}),"Based on the NetBeans Platform")),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},"Supports all NetBeans IDE plugins")))),Object(b.b)("h1",{id:"physics"},"Physics"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/physics"}),"JBullet physics binding")),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/walking_character"}),"Physical characters"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/hinges_and_joints"}),"Physical joints and\nhinges"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/vehicles"}),"Ray-cast vehicle"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/ragdoll"}),"Ragdoll physics"))))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/bullet_multithreading"}),"Multi-threaded physics"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/physics.xml#create_a_collisionshape"}),"Mesh-accurate collision\nshapes")))),Object(b.b)("h1",{id:"supported-formats"},"Supported Formats"),Object(b.b)("h2",{id:"jmonkeyengine3-file-formats"},"jMonkeyEngine3 File Formats"),Object(b.b)("p",null,"+------+---------------------------------------------+-----------------+\n| Su   | Usage                                       | Learn more      |\n| ffix |                                             |                 |\n+======+=============================================+=================+\n| .j3o | Binary 3D model or scene. At the latest     | ","[Model Loader   |\n|      | from the Beta release of your game on, you  | and             |\n|      | should convert all models to .j3o format.\\  | Viewer]","(../sd   |\n|      | During alpha and earlier development phases | k/model",Object(b.b)("em",{parentName:"p"},"loader")," |\n|      | (when models still change a lot) you can    | and_viewer) |\n|      | alternatively load GLTF/OBJ models          |                 |\n|      | directly.                                   |                 |\n+------+---------------------------------------------+-----------------+\n| .j3m | A custom Material. You can create a .j3m    | ","[Materials      |\n|      | file to store a Material configuration for  | Overvi          |\n|      | a Geometry (e.g. 3D model).                 | ew]","(../jme3/adv |\n|      |                                             | anced/materials |\n|      |                                             | _overview)\\ |\n|      |                                             | ","[Material       |\n|      |                                             | Editing         |\n|      |                                             | ]","(../sdk/materi |\n|      |                                             | al_editing) |\n+------+---------------------------------------------+-----------------+\n| .    | A Material definition. These are            | ","[Materials      |\n| j3md | pre-defined templates for shader-based      | Overv           |\n|      | Materials.\\                                 | iew]","(../jme3/ad |\n|      | Each custom .j3m Material is based on a     | vanced/material |\n|      | material definition. Advanced users can     | s_overview) |\n|      | create their own material definitions.      |                 |\n+------+---------------------------------------------+-----------------+\n| .j3f | A custom post-processor filter              | ","[Filters]","(../sd |\n|      | configuration. You can create a .j3f file   | k/filters)\\ |\n|      | to store a FilterPostProcessor with a set   | ","[Effects        |\n|      | of preconfigured filters.                   | Ove             |\n|      |                                             | rview]","(../jme3/ |\n|      |                                             | advanced/effect |\n|      |                                             | s_overview) |\n+------+---------------------------------------------+-----------------+"),Object(b.b)("h2",{id:"supported-external-file-types"},"Supported External File Types"),Object(b.b)("p",null,"+---------------------------+---------+-------------------------------+\n| File Suffix               | Type    | Description                   |\n+===========================+=========+===============================+\n| .mesh.xml, .meshxml,      | 3D      | Ogre Mesh XML ",Object(b.b)("strong",{parentName:"p"},"(soon to be   |\n| .scene                    | model   | discontinued)"),"\\              |\n|                           |         | see:                          |\n|                           |         |                               |\n|                           |         | -   ","[Exporting Models as Ogre |\n|                           |         |     XML meshes from           |\n|                           |         |                               |\n|                           |         | Blender]","(../jme3/external/ble |\n|                           |         | nder/blender_ogre_export) |\n|                           |         |                               |\n|                           |         | -   ","[Ogre                     |\n|                           |         |     Compatibility             |\n|                           |         | ]","(../jme3/external/blender/bl |\n|                           |         | ender_ogre_compatibility) |\n|                           |         |                               |\n|                           |         | Converting to j3o:            |\n|                           |         |                               |\n|                           |         | -   ","[SDK                      |\n|                           |         |     convert]","(../sdk           |\n|                           |         | /model_loader_and_viewer) |\n|                           |         |                               |\n|                           |         | -   ","[BinaryExporter]","(         |\n|                           |         | {link-javadoc}/com/jme3/expor |\n|                           |         | t/binary/BinaryExporter.html) |\n+---------------------------+---------+-------------------------------+\n| .obj, .mtl                | 3D      | Wavefront\\                    |\n|                           | model   | Converting to j3o:            |\n|                           |         |                               |\n|                           |         | -   ","[SDK                      |\n|                           |         |     convert]","(../sdk           |\n|                           |         | /model_loader_and_viewer) |\n|                           |         |                               |\n|                           |         | -   ","[BinaryExporter]","(         |\n|                           |         | {link-javadoc}/com/jme3/expor |\n|                           |         | t/binary/BinaryExporter.html) |\n+---------------------------+---------+-------------------------------+\n| .xbuf                     | 3D      | Blender version 2.74\\         |\n|                           | model   | See:                          |\n|                           |         |                               |\n|                           |         | -   ","[.xbuf]","(",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonk"}),"https://hub.jmonk")," |\n|                           |         | eyengine.org/t/xbuf-format-a- |\n|                           |         | developer-friendly-game-excha |\n|                           |         | nge-format-for-3d-data/31130) |\n|                           |         |     forum post.               |\n|                           |         |                               |\n|                           |         | Converting to j3o:            |\n|                           |         |                               |\n|                           |         | -   ","[SDK                      |\n|                           |         |     convert]","(../sdk           |\n|                           |         | /model_loader_and_viewer) |\n|                           |         |                               |\n|                           |         | -   ","[BinaryExporter]","(         |\n|                           |         | {link-javadoc}/com/jme3/expor |\n|                           |         | t/binary/BinaryExporter.html) |\n+---------------------------+---------+-------------------------------+\n| .fbx                      | 3D      | Filmbox\\                      |\n|                           | model   | See:                          |\n|                           |         |                               |\n|                           |         | -   ","[Fbx                      |\n|                           |         |     imp                       |\n|                           |         | orter]","(",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyeng"}),"https://hub.jmonkeyeng")," |\n|                           |         | ine.org/t/fbx-importer/30309) |\n|                           |         |     forum post.               |\n|                           |         |                               |\n|                           |         | Converting to j3o:            |\n|                           |         |                               |\n|                           |         | -   ","[SDK                      |\n|                           |         |     convert]","(../sdk           |\n|                           |         | /model_loader_and_viewer) |\n|                           |         |                               |\n|                           |         | -   ","[BinaryExporter]","(         |\n|                           |         | {link-javadoc}/com/jme3/expor |\n|                           |         | t/binary/BinaryExporter.html) |\n+---------------------------+---------+-------------------------------+\n| .gltf, .bin, .glb, custom | 3D      | Blender version 2.78c         |\n| extensions                | model   | onwards,\\                     |\n|                           |         | See:                          |\n|                           |         |                               |\n|                           |         | -   ","[glt                      |\n|                           |         | f]","(",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine."}),"https://hub.jmonkeyengine.")," |\n|                           |         | org/t/jme-gltf-support/39174) |\n|                           |         |     forum post                |\n|                           |         |                               |\n|                           |         | -   ","[Exporting Models as GlTF |\n|                           |         |     meshes from               |\n|                           |         |     Blender]","(../jme3/exter    |\n|                           |         | nal/blender/blender_gltf) |\n|                           |         |                               |\n|                           |         | Converting to j3o:            |\n|                           |         |                               |\n|                           |         | -   ","[JmeConvert               |\n|                           |         |     to                        |\n|                           |         | ol]","(",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine"}),"https://hub.jmonkeyengine")," |\n|                           |         | .org/t/jmeconvert-tool/41831) |\n|                           |         |                               |\n|                           |         | -   ","[SDK                      |\n|                           |         |     convert]","(../sdk           |\n|                           |         | /model_loader_and_viewer) |\n|                           |         |                               |\n|                           |         | -   ","[BinaryExporter]","(         |\n|                           |         | {link-javadoc}/com/jme3/expor |\n|                           |         | t/binary/BinaryExporter.html) |\n+---------------------------+---------+-------------------------------+\n| .jpg, .png, .gif          | image   | Textures, icons               |\n+---------------------------+---------+-------------------------------+\n| .dds                      | image   | Direct Draw Surface texture   |\n+---------------------------+---------+-------------------------------+\n| .hdr                      | image   | High Dynamic Range texture    |\n+---------------------------+---------+-------------------------------+\n| .tga                      | image   | Targa Image File texture      |\n+---------------------------+---------+-------------------------------+\n| .pfm                      | image   | Portable Float Map texture    |\n+---------------------------+---------+-------------------------------+\n| .bmp                      | image   | Bitmap texture                |\n+---------------------------+---------+-------------------------------+\n| .ani, .cur, .ico          | image   | Windows Cursor, static or     |\n|                           |         | animated.                     |\n+---------------------------+---------+-------------------------------+\n| .fnt                      | bitmap  | AngelCode font for GUI and    |\n|                           | font    | HUD                           |\n+---------------------------+---------+-------------------------------+\n| .wav                      | audio   | Wave music and sounds         |\n+---------------------------+---------+-------------------------------+\n| .ogg                      | audio   | OGG Vorbis music and sounds   |\n+---------------------------+---------+-------------------------------+"),Object(b.b)("h1",{id:"shaders"},"Shaders"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"GLSL support")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Shader libraries")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Shader permutations")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/jme3_shadernodes"}),"Shader Nodes")))),Object(b.b)("h1",{id:"material-lighting"},"Material Lighting"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Per-pixel lighting")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Multi-pass lighting")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Phong Lighting"),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Diffuse Map")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Alpha Map")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Glow Map")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Specular Map")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Normal Map, Parallax Map (a.k.a. bump mapping)")))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Tangent shading")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Reflection"))),Object(b.b)("h1",{id:"material-textures"},"Material Textures"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Texturing"),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"material colors (ambient, diffuse, specular/shininess, glow),")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"color map, light map,")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"transparency, translucency, alpha map, alpha testing with\nfalloff threshold,")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"sphere map, cube map,")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"texture scale,")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"wireframe")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"color ramp texture")))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Multi-texturing through shaders")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"UV textures")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Splat textures, Phong lit or unshaded, supports diffuse and normal\nmaps")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"http://hub.jmonkeyengine.org/forum/topic/textureatlas-creation-and-packed-texture-handling-in-sdk/"}),"Texture Atlas, handling of packed\nTextures")))),Object(b.b)("h1",{id:"asset-system"},"Asset System"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Asset importing"),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Animation")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Meshes")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Textures")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Scenes")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Materials")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Shaders")))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Multi-threaded asset loading via HTTP")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Loading scenes from .ZIP files")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Sharable AssetPacks"))),Object(b.b)("h1",{id:"special-effects"},"Special Effects"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/particle_emitters"}),"Particles: Smoke, fire, explosions,\netc"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/effects_overview"}),"Post processing / 2D Filter\nEffects")),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Reflective Water")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Shadow mapping")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"High Dynamic Range rendering")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Screen Space Ambient Occlusion")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Light Scattering")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Cartoon Effect")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Fog")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Bloom")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Depth of Field Blur"))))),Object(b.b)("h1",{id:"terrain"},"Terrain"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/terrain"}),"Geomipmapped hightmap terrain"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/external/blender/blender_ogre_compatibility"}),"Ogre\nCompatibility"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/sky"}),"SkyBox and SkyDome"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Terrain lighting"))),Object(b.b)("h1",{id:"gui--hud"},"GUI / HUD"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/hud"}),"Orthogonal (Billboard) node"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/nifty_gui"}),"Nifty GUI integration")))),Object(b.b)("h1",{id:"miscellaneous"},"Miscellaneous"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/application_states"}),"Application States")," and\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/custom_controls"}),"Controls")," to implement ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/update_loop"}),"game\nlogic"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/cinematics"}),"Cinematics and motion paths"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/camera"}),"Camera System")),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Normal or parallel view")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Multiple views")))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Swing canvas (e.g. for Applets)")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/input_handling"}),"Input handling")),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Mouse, keyboard, joystick")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"../jme3/advanced/combo_moves"}),"Combo moves")))))),Object(b.b)("h1",{id:"networking"},"Networking"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"../jme3/advanced/networking"}),"SpiderMonkey API"))))}m.isMDXComponent=!0},441:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),m=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},o=function(e){var t=m(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),o=m(a),s=n,O=o["".concat(i,".").concat(s)]||o[s]||j[s]||b;return a?r.a.createElement(O,l({ref:t},c,{components:a})):r.a.createElement(O,l({ref:t},c))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,i=new Array(b);i[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<b;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}s.displayName="MDXCreateElement"}}]);