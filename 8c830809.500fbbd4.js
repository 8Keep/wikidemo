(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{300:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return d}));var o=t(1),a=t(9),r=(t(0),t(441)),i={},c={id:"jme3/contributions/tonegodgui_quickstart",title:"tonegodgui_quickstart",description:"Quick Start Guide:",source:"@site/docs/jme3/contributions/tonegodgui_quickstart.md",permalink:"/wikidemo/docs/jme3/contributions/tonegodgui_quickstart",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/contributions/tonegodgui_quickstart.md"},s=[],l={rightToc:s};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"quick-start-guide"},"Quick Start Guide:"),Object(r.b)("p",null,"For anyone who just wants to jump right in and read as you go, here are\nthe basics for getting a UI up and running in minutes."),Object(r.b)("p",null,"The first step is to create the screen control. This can be done one of\ntwo ways."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Using the provided default style information:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"// this = any JME Application\nScreen screen = new Screen(this);\nscreen.initialize();\nguiNode.addControl(screen);\n"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Providing a path to another Style map."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"// this = any JME Application\nScreen screen = new Screen(this, \u201ctonegod/gui/style/def/style_map.xml\u201d);\nscreen.initialize();\nguiNode.addControl(screen);\n")))),Object(r.b)("p",null,"::: {.note}\nstyle","_","map.xml consists of a list of xml documents containing varied\nstyles for varied use. You can copy the default style map and replace\none, many, all with project specific style (Covered later in this\ntutorial).\n:::"),Object(r.b)("p",null,"Next, we add a control. Might as well start with something interesting\nas all control contructors follow the same format. Let go with a window\nand then we'll add a button to it. Here are the three contrustor choices\nfor creating the window:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"/** Parameters:\n  * Screen screen,\n  * String UID,\n  * Vector2f position\n  */\n\nWindow win = new Window(screen, \u201cwin\u201d, new Vector2f(15, 15));\nscreen.addElement(win);\n")),Object(r.b)("p",null,"And... boom! You have a fancy new resizable, movable window as part of\nyou're UI. Now, let's take a look at the two additional constructors."),Object(r.b)("p",null,"The second adds a 4th parameter to specify the windows dimensions, like\nsuch:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"/** Additional Parameter:\n  * Vector2f dimensions  */\n\nWindow win = new Window(screen, \u201cwin\u201d, new Vector2f(15, 15),\n    new Vector2f(400, 300)\n);\nscreen.addElement(win);\n")),Object(r.b)("p",null,"The third option adds 2 more parameters and looks like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"/** Additional Parameters:\n  * Vector4f resizeBorders,\n  * String defaultImg\n  */\n\nWindow win = new Window(screen, \u201cwin\u201d, new Vector2f(15, 15), new Vector2f(400, 300),\n    new Vector4f(14,14,14,14),\n    \u201ctonegod/gui/style/def/Window/panel_x.png\u201d\n);\nscreen.addElement(win);\n")),Object(r.b)("p",null,"Any parameters not specified are derived from the defaults specified in\nthe Window style information."),Object(r.b)("p",null,"::: {.note}\nThe occasional control extends this contructor format, adding an\nadditional Orientation parameter or possibly a boolean flag for controls\nthat provide multiple configurable layouts.\n:::"),Object(r.b)("p",null,"So, now lets add a button to the window that will create more windows!"),Object(r.b)("p",null,"The Button class is one of the only GUI control classes that implements\nJME's Control interface. The Control only becomes active if setInterval\nis called because the Button requires the use of stillPressed events.\nThis and much more will be cover in later documentation. Again, you ave\nthe three options above for creating an instance of the button control."),Object(r.b)("p",null,"::: {.note}\nThe button control (like many controls) is abstract and provides methods\nfor handling user input. All events can be consumed by using\nevt.setConsumed();\n:::"),Object(r.b)("p",null,"First, lets setup a method to create new windows:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"private int winCount = 0;\n\npublic final void createNewWindow(String someWindowTitle) {\n    Window nWin = new Window(\n        screen,\n        \u201cWindow\u201d + winCount,\n        new Vector2f( (screen.getWidth()/2)-175, (screen.getHeight()/2)-100 )\n    );\n    nWin.setWindowTitle(someWindowTitle);\n    screen.addElement(nWin);\n    winCount++;\n}\n")),Object(r.b)("p",null,"Now lets add the button to allow users to create new window:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"/** Parameters:\n  * Screen screen,\n  * String UID,\n  * Vector2f position\n  */\n\nButtonAdapter makeWindow = new ButtonAdapter( screen, \u201cBtn1\u2033, new Vector2f(15, 55) ) {\n    @Override\n    public void onButtonMouseLeftUp(MouseButtonEvent evt, boolean toggled) {\n        createNewWindow(\u201cNew Window \u201d + winCount);\n    }\n};\n\n// Add it to out initial window\nwin.addChild(makeWindow);\n")),Object(r.b)("p",null,"::: {.note}\nFor layout purposes, it is suggested that you add all child Elements toa\ncontrol PRIOR to adding the control to the screen... so, ceate a window,\nadd a button, add window to screen."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"A Bit More Info:")," All controls are based on the Element class which\nhas access to all default behaviors. Behaviors can be enabled disabled\non ANY control or primitive Element.\n:::"),Object(r.b)("h1",{id:"a-few-of-the-common-behaviors"},"A Few of the Common Behaviors:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"// Makes control resizable from defined borders\nsetIsResizable(boolean);\n\n// Makes the control movable\nsetIsMovable(boolean);\n\n// Constrained to parent dimensions\nsetLockToParentBounds(boolean);\n\n// On interaction effects direct parent instead of self\nsetEffectParent(boolean);\n\n// On interaction effects absolute parent (screen lvl) instead of self\nsetEffectAbsoluteParent(boolean);\n\n// allows the control to scale north/south from any encapsulating parent resize\nsetScaleNS(boolean);\n// allows the control to scale east/west from any encapsulating parent resize\nsetScaleEW(boolean);\n\nsetDockN(boolean); // also enables/disables dock south\nsetDockS(boolean); // also enables/disables dock north\nsetDockE(boolean); // also enables/disables dock west\nsetDockW(boolean); // also enables/disables dock east\n\nsetIgnoreMouse(boolean);\n")),Object(r.b)("p",null,"::: {.note}\nThere are far more behaviors, however, these are the most critical when\ncreating custom controls to ensure that nested Elements react as you\nwould like when a parent Element is altered.\n:::"))}d.isMDXComponent=!0},441:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var o=t(0),a=t.n(o);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),d=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},u=function(e){var n=d(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},p=Object(o.forwardRef)((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(t),p=o,m=u["".concat(i,".").concat(p)]||u[p]||b[p]||r;return t?a.a.createElement(m,c({ref:n},l,{components:t})):a.a.createElement(m,c({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<r;l++)i[l]=t[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);