(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{157:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return c}));var r=a(1),n=a(9),o=(a(0),a(441)),i={},l={id:"sdk/neotexture",title:"neotexture",description:"The NeoTextureEditor allows creating tiled textures procedurally using a",source:"@site/docs/sdk/neotexture.md",permalink:"/wikidemo/docs/sdk/neotexture",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/sdk/neotexture.md"},s=[],p={rightToc:s};function c(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The NeoTextureEditor allows creating tiled textures procedurally using a\nsimple node interface for generating images, blending them, creating\nnormal maps and much more. You can directly load the .tgr files as a\nmaterial or export the generated images as .png files and use them in a\njMonkeyEngine-based game."),Object(o.b)("p",null,"Textures usually make up most of the size of a game distribution. This\nis why NeoTexture is not only an editor, but also a library that\ngenerates textures from .tgr files. Use the library to load .tgr files\ndirectly in jME3 as a material, without having to export the textures\nbefore. This means high-quality textures for your models, but just tiny\ndescription files in your distribution."),Object(o.b)("h1",{id:"creating-and-editing-a-neotexture-file"},"Creating and Editing a NeoTexture file"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Right-click the ",Object(o.b)("inlineCode",{parentName:"p"},"assets/Textures")," directory and choose New... ",">","\nOther.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In the New File Wizard, choose NeoTexture ",">"," Empty NeoTextureFile\nand click Next.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Give the file a name, for exmaple ",Object(o.b)("inlineCode",{parentName:"p"},"neoMaterial"),".")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"A new file ",Object(o.b)("inlineCode",{parentName:"p"},"neoMaterial.tgr")," is created in the Textures directory\nand opens in the NeoTexture Editor."))),Object(o.b)("p",null,"Edit the .tgr file and create your procedural texture: (",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"http://neotextureedit.sourceforge.net/"}),"Learn more\nabout creating Procedural Textures\nhere"),")"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Drag any pattern from the left bar to the editor area.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Right-click the editor area and paste a NormalMap filter node.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Connect the green output mark of the pattern with the red input mark\nof the filter. +This generates a Normal Map that can be used as bump\nmap."))),Object(o.b)("h1",{id:"adding-the-neotexture-libraries-to-your-project"},"Adding the NeoTexture libraries to your project"),Object(o.b)("p",null,"To use NeoTexture tgr files directly in your application, you have to\nadd the NeoTexture libraries to your project:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Right-click your project and select "Properties')),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Go to the "Libraries section of the properties window')),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Press "Add Library..')),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Select "NeoTexture-Libraries and press "add'))),Object(o.b)("h1",{id:"loading-tgr-files-as-material"},"Loading tgr files as material"),Object(o.b)("p",null,"We want to use the procedural texture as a material based on\n",Object(o.b)("inlineCode",{parentName:"p"},"Lighting.j3md")," (the default). We know that Lighting.j3md supports\nDiffuseMap, NormalMap, SpecularMap, and ParallaxMap."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click the Normal Map filter to select it. We want to use it as the\nNormal Map of the texture."),Object(o.b)("p",{parentName:"li"},"a.  In the NeoTextures Properties window under ",Object(o.b)("inlineCode",{parentName:"p"},"Export name"),', enter\nthe name of the texture layer as it would appear in a .j3m file,\ne.g. "NormalMap".')),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click the pattern to select it. We want to (re)use it as Diffuse Map\nof the texture."),Object(o.b)("p",{parentName:"li"},"a.  In the NeoTextures Properties window under ",Object(o.b)("inlineCode",{parentName:"p"},"Export name"),', enter\nthe name of the texture layer as it would appear in a .j3m file,\ne.g. "DiffuseMap".')),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click the Save button in the NeoTextures Editor. The .tgr file is\nsaved with two layers. (We could add SpecularMap and ParallaxMap the\nsame way, if we wanted.)"))),Object(o.b)("p",null,"Let's assign the newly created texture to a mesh to see what it looks\nlike."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Open your Main.java file.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Choose Window\u2192Palette to open the Palette. You will find two\nNeoTexture code snippets, one for adding the NeoTexture loader to\nthe assetManager, and one for loading a NeoTexture material.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Drag&Drop one of each into the simpleInitApp() method of your\napplication.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Adjust the .tgr file path names to match the file that we just\ncreated: "Materials/neoMaterial.tgr.'))),Object(o.b)("p",null,"Clean, build and run. You're ready to load your procedural material!"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'assetManager.registerLoader(com.jme3.material.plugins.NeoTextureMaterialLoader.class,"tgr");\nNeoTextureMaterialKey key = new NeoTextureMaterialKey("Materials/neoMaterial.tgr");\n\nMaterial mat = assetManager.loadAsset(key);\nmat.setFloat("Shininess",12); /* Lighting.j3md has non-map parameters too that we can set. */\nthing.setMaterial(mat);\n')),Object(o.b)("p",null,"The default Material Definition for NeoTextures is ",Object(o.b)("inlineCode",{parentName:"p"},"Lighting.j3md"),", and\nit's probably the one you will use most often. In case that you want to\nuse additional texture parameters, other than DiffuseMap, SpecularMap,\nParallaxMap, and NormalMap, you can switch to another Material\nDefinition using setMaterialDef(), for instance:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'key.setMaterialDef("Commons/MatDefs/Misc/ColoredTextured.j3md");\n')),Object(o.b)("p",null,"Remember that the layer names in the .tgr file must match the ones\ndeclared in the .j3md file. In our example of ",Object(o.b)("inlineCode",{parentName:"p"},"ColoredTextured.j3md"),",\nthe .tgr file must contain a ",Object(o.b)("inlineCode",{parentName:"p"},"ColorMap")," and you need to set a RGBAColor."),Object(o.b)("h1",{id:"using-tgr-files-like-normal-textures-in-j3m-files"},"Using tgr files like normal textures in j3m files"),Object(o.b)("p",null,"You can use the .tgr files like normal textures in j3m files, with a\nsyntax like this: ",Object(o.b)("inlineCode",{parentName:"p"},"Materials/neoMaterial?DiffuseMap.tgr")," The part\nbetween the ",Object(o.b)("inlineCode",{parentName:"p"},"?")," and the suffix is the name of the node you want to load\nas a texture. If you dont supply a name, ",Object(o.b)("inlineCode",{parentName:"p"},"texture")," is used."),Object(o.b)("p",null,"To be able to load these textures, you have to register a Locator and a\nLoader in the AssetManager, note that you can only register one loader\nper extension so you cannot load .tgr files as materials and as textures\nwith the same assetManager."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'assetManager.registerLocator("/", com.jme3.texture.plugins.NeoTextureLocator.class );\nassetManager.registerLoader(com.jme3.texture.plugins.NeoTextureLoader.class,"tgr");\n')))}c.isMDXComponent=!0},441:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),c=function(e){var t=n.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},u=function(e){var t=c(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return a?n.a.createElement(m,l({ref:t},p,{components:a})):n.a.createElement(m,l({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);