(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{335:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var a=t(1),r=t(9),i=(t(0),t(441)),o={},c={id:"jme3/build_from_sources",title:"build_from_sources",description:"Foreword",source:"@site/docs/jme3/build_from_sources.md",permalink:"/wikidemo/docs/jme3/build_from_sources",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/build_from_sources.md"},l=[],b={rightToc:l};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"foreword"},"Foreword"),Object(i.b)("p",null,"Please understand that this tutorial gives you access to the latest\ndevelopment release of the engine. Whilst many developers use this\nrelease to work with, it is by definition still being developed. Expect\nbleeding edge implementations to need work. If you don't want that kind\nof hassle, please use the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../jme3/maven"}),"stable releases"),"."),Object(i.b)("h1",{id:"build-jmonkeyengine-from-github-source"},"Build jMonkeyEngine from Github source."),Object(i.b)("p",null,"Here is the basic outline of our goal:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Install git client.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Download jMonkeyEngine using git-client.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Update jMonkeyEngine using git-client.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Build jMonkeyEngine locally using gradle."))),Object(i.b)("p",null,"Repeat steps 3 and 4 whenever any changes have been committed to the\nmaster branch."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Install Git Client:\\\nwebsite: ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://git-scm.com/downloads"}),"https://git-scm.com/downloads"))),Object(i.b)("p",null,"Now we need to get the engine source using the git client and build it\nlocally. There are 3 batch files below provided for convenience\n(download, update, build) and can all be placed in the same directory\nand run without administrator privileges. For example, you can put all\nof these files into ",Object(i.b)("inlineCode",{parentName:"p"},"D:\\programming\\")," - and the scripts will create,\ndownload and update files in the ",Object(i.b)("inlineCode",{parentName:"p"},"./jmonkeyengine/")," sub-directory."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Download the Engine: ",Object(i.b)("inlineCode",{parentName:"p"},"download.bat"),'\\\nThis file downloads the engine into a dir called "jmonkey" using the\ngit client.')),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Update the Engine: ",Object(i.b)("inlineCode",{parentName:"p"},"update.bat"),"\\\nThis file downloads any changed files from github using the git\nclient.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Build the Engine: ",Object(i.b)("inlineCode",{parentName:"p"},"build.bat"),"\\\nThis file builds the engine using the gradle wrapper and places them\nin your local repository."),Object(i.b)("div",Object(a.a)({parentName:"li"},{className:"admonition admonition-note alert alert--secondary"}),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"This is USER-SPECIFIC. My files are stored in\n",Object(i.b)("inlineCode",{parentName:"p"},"C:\\Users\\James\\.m2\\repository")))),Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://gist.github.com/jayfella/12af46c2fc4650640652b69b84b3dd01"}),"https://gist.github.com/jayfella/12af46c2fc4650640652b69b84b3dd01")),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"download.bat.")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'@echo off\necho "downloading engine..."\ngit clone -b master --single-branch --depth 10 https://github.com/jMonkeyEngine/jMonkeyEngine/ jmonkeyengine\n')),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"build.bat.")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'@echo off\n\necho "Building JME engine to your local maven repo...."\ncd jmonkeyengine\ngradlew.bat -PbuildJavaDoc=true install\ncd ..\n\ncmd /k\n')),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"update.bat.")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"@echo off\ncd jmonkeyengine\ngit pull\ncd ..\ncmd /k\n")))),Object(i.b)("h1",{id:"using-the-built-engine-in-your-game"},"Using the built engine in your game"),Object(i.b)("p",null,"Add the maven plugin to your build script, and put the mavenLocal()\nrepository in your list of repositories. Then just reference the\ndependencies as you would normally. Note that we are now using version\n3.2.+ of the engine."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'apply plugin: \'maven\'\n\next.jmeVersion = "[3.2,)"\n\nrepositories {\n    mavenLocal()\n    jcenter()\n}\n\ndependencies {\n    compile "org.jmonkeyengine:jme3-core:$jmeVersion"\n    compile "org.jmonkeyengine:jme3-desktop:$jmeVersion"\n    compile "org.jmonkeyengine:jme3-lwjgl:$jmeVersion"\n}\n')),Object(i.b)("p",null,"Learn more about:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../jme3/simpleapplication_from_the_commandline"}),"Setting up JME3 on the commandline\n(generic)"),".")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../jme3/build_jme3_sources_with_netbeans"}),"Building JME3 from the sources with\nNetBeans")))))}p.isMDXComponent=!0},441:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return u}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var b=r.a.createContext({}),p=function(e){var n=r.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},s=function(e){var n=p(e.components);return r.a.createElement(b.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),s=p(t),d=a,u=s["".concat(o,".").concat(d)]||s[d]||m[d]||i;return t?r.a.createElement(u,c({ref:n},b,{components:t})):r.a.createElement(u,c({ref:n},b))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var b=2;b<i;b++)o[b]=t[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);