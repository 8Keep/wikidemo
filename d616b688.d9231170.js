(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{398:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return c}));var n=a(1),l=a(9),r=(a(0),a(441)),o={},i={id:"sdk/plugin/shaderblow",title:"shaderblow",description:"![shaderblow\\_intro\\_01.jpg](/images/sdk/plugin/shaderblow_intro_01.jpg)",source:"@site/docs/sdk/plugin/shaderblow.md",permalink:"/wikidemo/docs/sdk/plugin/shaderblow",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/sdk/plugin/shaderblow.md"},s=[{value:"Usage",id:"usage",children:[]},{value:"Usage",id:"usage-1",children:[]},{value:"Usage",id:"usage-2",children:[]},{value:"Usage",id:"usage-3",children:[]},{value:"Usage",id:"usage-4",children:[]},{value:"Usage",id:"usage-5",children:[]},{value:"Usage",id:"usage-6",children:[]},{value:"Usage",id:"usage-7",children:[]},{value:"Usage",id:"usage-8",children:[]},{value:"Usage",id:"usage-9",children:[]},{value:"Usage",id:"usage-10",children:[]},{value:"Usage",id:"usage-11",children:[]},{value:"Usage",id:"usage-12",children:[]},{value:"Usage",id:"usage-13",children:[]}],b={rightToc:s};function c(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("img",Object(n.a)({parentName:"p"},{src:"/images/sdk/plugin/shaderblow_intro_01.jpg",alt:"shaderblow_intro_01.jpg"}))),Object(r.b)("p",null,"Collections of effects for jMonkeyEngine 3. To install the ShaderBlow\nplugin into the jMonkeyEngine SDK, go to Tools\u2192Plugins\u2192Available\nPlugins. You can always get the source of ShaderBlow project here:\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib"}),"ShaderBlow project\nGithub")),Object(r.b)("p",null,"The source has many examples and tests to explain the capacity of\nshaders much better."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Filters:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Basic SSAO")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"ColorScale (added by \\@H)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"GrayScale (added by \\@H)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Simple Refraction (added by \\@mifth)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Old Film Effect (added by \\@H)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Night Vision (added by \\@wezrule)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Predator Thermal Vision (added by \\@wezrule)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Frosted Glass effect (added by \\@wezrule)")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Shaders"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Dissolver (added by \\@thetoucher)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"FakeParticleBlow (added by \\@mifth)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Forceshield (added by \\@ficik)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"MatCap (added by \\@mifth)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Glass (added by \\@mifth)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Texture Bombing (added by \\@wezrule)"))))),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Official Forum:\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/shaderblow-project/26655"}),"https://hub.jmonkeyengine.org/forum/t/shaderblow-project/26655"),"\nOr you can use the forum threads of shaders."))),Object(r.b)("h1",{id:"colorscale-filter"},"ColorScale Filter"),Object(r.b)("p",null,"The ColorScale filter applys a color to the render image. You can use\nthis filter to tint the render according to one particular color without\nchange any material (underwater scene, night scene, fire scene) or to\nachieve fade-in/fade-out effect."),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set the color to apply. Default is red.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set intensity of the color. Default is 0.7f. Frag shader\nclamps color intensity between 0 and 1."))),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ![ColorScale Filter               | ","![ColorScale filter               |\n| OFF]","(.                            | ON](.                             |\n| ./../sdk/plugin/colorfilter2.png) | ./../sdk/plugin/colorfilter1.png) |\n+-----------------------------------+-----------------------------------+\n| ![ColorScale Filter               | ","![ColorScale                      |\n| ON]","(.                             | Filter](.                         |\n| ./../sdk/plugin/colorfilter3.png) | ./../sdk/plugin/colorfilter4.png) |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("p",null,"Add a\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/src/com/shaderblow/filter/colorscale/ColorScaleFilter.java"}),"ColorScaleFilter"),"\ninstance to a FilterPostProccesor instance. Set color and color\nintensity. Then add the FilterPostProccesor instance to Application's\nviewPort attribute."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"this.fpp = new FilterPostProcessor(this.assetManager);\nthis.fpp.setNumSamples(4);\nthis.colorScale = new ColorScaleFilter();\nthis.fpp.addFilter(this.colorScale);\n// colorScale.setFilterColor(ColorRGBA.Red.clone()); // Set Filter color\n// colorScale.setColorDensity(0.5f); // Set Color intensity (between 0 and 1);\nthis.viewPort.addProcessor(this.fpp);\n")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/filter/color/TestColorScale.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/colorscale-filter-added-to-shaderblow/23995"}),"Forum\nthread")),Object(r.b)("h1",{id:"grayscale-filter"},"GrayScale Filter"),Object(r.b)("p",null,"The GrayScale filter converts the render image to grayscale."),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"GrayScale Filter OFF"),"          | ",Object(r.b)("strong",{parentName:"p"},"GrayScale Filter ON"),"           |\n+===================================+===================================+\n| ![GrayScale Filter                | ","![GrayScale Filter                |\n| OFF]","(../../sd                     | ON](../../s                       |\n| k/plugin/grayscalefilter-off.jpg) | dk/plugin/grayscalefilter-on.png) |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("h2",{id:"usage-1"},"Usage"),Object(r.b)("p",null,"Add a\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/src/com/shaderblow/filter/grayscale/GrayScaleFilter.java"}),"GrayScaleFilter"),"\ninstance to a FilterPostProccesor instance. Then add the\nFilterPostProccesor instance to Application's viewPort attribute."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"this.fpp = new FilterPostProcessor(this.assetManager); // Create FilterPostProcessor instance\nthis.grayScale = new GrayScaleFilter();  // Create GrayScaleFilter instance\nthis.fpp.addFilter(this.grayScale);  // Add GrayScaleFilter instance to FilterPostProcessor instance\nthis.viewPort.addProcessor(this.fpp);  // Add FilterPostProcessor instance to ViewPort\n")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/filter/grayscale/TestGrayScale.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/solved-grayscale-filter/23656"}),"Forum\nthread")),Object(r.b)("h1",{id:"old-film-effect-filter"},"Old Film Effect Filter"),Object(r.b)("p",null,"Old Film filter simulate the effect of a classic looking film effect.\nIt's a port of this ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"http://devmaster.net/posts/2989/shader-effects-old-film"}),"shader\neffect"),"."),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set the ",Object(r.b)("strong",{parentName:"p"},"filter's color"),". Default is sepia\n(ColorRGBA(112f / 255f, 66f / 255f, 20f / 255f, 1.0f)).")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set the ",Object(r.b)("strong",{parentName:"p"},"color's density"),". Default is 0.7. Shader clamps\nthis value between 0 to 1. The color image gets grayscale when\ncolor's densite is set to 0.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set the ",Object(r.b)("strong",{parentName:"p"},"noise's density"),". Default is 0.4. Shader clamps\nthis value between 0 to 1.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set the ",Object(r.b)("strong",{parentName:"p"},"scratches\\' density"),". Default is 0.3. Shader\nclamps this value between 0 to 1.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set the ",Object(r.b)("strong",{parentName:"p"},"vignetting's diameter"),". Default is 0.9. Shader\nclamps this value between 0 to 1.4. Vignetting effect is made using\ntwo circles. The inner circle represents the region untouched by\nvignetting. The region between the inner and outer circle represent\nthe area where vignetting starts to take place, which is a gradual\nfade to black from the inner to outer ring. Any part of the frame\noutside of the outer ring would be completely black."))),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"I chose to clamp this value inside the frag shader code instead of using\njava code because I thought this way is faster (better from preformace\npoint of view). You can clamp this values using java code if you want."))),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"Old Film Effect."),"              |                                   |\n|                                   |                                   |\n| ","![youtu.be/CgFzhkq-MKk]","(          |                                   |\n| ../../sdk/plugin/CgFzhkq-MKk.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("h2",{id:"usage-2"},"Usage"),Object(r.b)("p",null,"Add a\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/src/com/shaderblow/filter/oldfilm/OldFilmFilter.java"}),"OldFilmFilter"),"\ninstance to a FilterPostProccesor instance. Then add the\nFilterPostProccesor instance to Application's viewPort attribute."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"this.fpp = new FilterPostProcessor(this.assetManager); // Create FilterPostProcessor instance\nthis.oldFilmFilter= new OldFilmFilter();  // Create OldFilmFilter instance\nthis.fpp.addFilter(this.oldFilmFilter);  // Add OldFilmFilter instance to FilterPostProcessor instance\nthis.viewPort.addProcessor(this.fpp);  // Add FilterPostProcessor instance to ViewPort\n")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/filter/oldfilm/TestOldFilm.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/old-film-effect-filter/25464"}),"Forum\nthread")),Object(r.b)("h1",{id:"lightblow-shader"},"LightBlow Shader"),Object(r.b)("p",null,"The Lightblow shader is an improved Lighting shader for JME."),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Improved lighting calculations.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Improved reflection calculations.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Reflection map implementation with alpha normal map.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Improved Minnaert calculations.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Hemispherical lighting.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Image Based Lighting with Albedo.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Emissive map implementation with diffuse alpha.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"normalization of normals by default.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Specular map implementation with normal map alpha.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Specular intensity implementation.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Switching -x/-y/-z normals for different normal maps. (3dmax,\nblender, xnormal have different approaches).")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Specular Color now works with specular maps")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Glowblow fragment shader is added with m","_","GlowIntensity? uniform.\nIt's possible to change glow intensity for objects. Please, use\nDiffuseMap? as GlowMap? instead of new additional Glow rgb texture.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Lightmaps are added.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Rim Lighting is added. Thanks to Thetoucher from JME Blog!")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Fog is added. Fog is used without post-processing!")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Texture Blending: 4 diffuse, 4 normal textures can be blended (Like\nTerrain System)."))),Object(r.b)("p",null,"Software for NormalMaps? making:\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"http://shadermap.com/shadermap_pro.php"}),"http://shadermap.com/shadermap_pro.php"),"\\\nSoftware for CubeMaps? editing:\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://code.google.com/archive/p/cubemapgen/downloads"}),"https://code.google.com/archive/p/cubemapgen/downloads"),"\\"),Object(r.b)("p",null,"Watch following videos:"),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"LightBlow Shader."),"             |                                   |\n|                                   |                                   |\n| ","![youtube                         |                                   |\n| _https://youtu.be/knROh_3o2uo]","( |                                   |\n| ../../sdk/plugin/knROh_3o2uo.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/lightblow-shader/16182"}),"Forum thread")),Object(r.b)("h1",{id:"dissolver-shader"},"Dissolver Shader"),Object(r.b)("p",null,"The Dissolve Shader uses a simple grey scale image as an animated mask\nto hide a material."),Object(r.b)("p",null,"The shader incrementally clamps off the colour value, dark to light, and\nuses that for a masking texture to discard pixels. It is currently\ncapped for convenience at 255 frames of animation and is only using one\ncolour channel. In simple terms, in starts by only discarding the\ndarkest parts of the texture map, then the slightly lighter parts, then\nthe slightly lighter again and again until it eventually cant get any\nlighter (white), at which point the proccess is complete."),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ![Dissolver                       | ","![Mask                            |\n| screenshot]","(../..                 | maps](../                         |\n| /sdk/plugin/dissolver-screen.png) | ../sdk/plugin/dissolver-maps.png) |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,"Starting at the top left we have: simple linear dissolve, organic\ndissolve and pixel dissolve. And bottom row: organic growth, texture\nmasking, organic burn. Mask texture maps on the second image."),Object(r.b)("p",null,"The test is occolating the dissolve amount between 0 and 1. It\ndemonstrates 6 different uses for the shader, all running at the same\nspeed. The top row are straight forward dissolves. The bottom row shows\n3 potential applications:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},'Organic Growth (bottom left) over a mesh, this could work both\nanimating rapidly for a fast grow effect, or set to a fixed value\ne.g. set to 0.5f is "50% covered in growth";')),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},'Texture Masking (bottom middle) , I see this is probably where the\nmost practical applications will come from. The demonstration shows\na poorely photoshoped clean street, peices of garbage are then\nscattered around dependant on the dissolve amount, this would work\nbest with a fixed value eg set to .75 is "75% dirty". Texture\nMasking could be also be used for:'),Object(r.b)("p",{parentName:"li"},"a.  paint damage on a car;"),Object(r.b)("p",{parentName:"li"},"b.  lacerations on a character;"),Object(r.b)("p",{parentName:"li"},"c.  the blood shot eye effect that creeps in from the sides of the\nscreen when you've taken too much damage in a modern FPS.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Organic Burn (bottom right) is comprised of 2 cubes, one blue, one\norange, both with the same organic dissolve, however the orange one\nis slightly offset ahead of the blue so it shows first (ie the\ndissolve amount is always slight advanced)."))),Object(r.b)("p",null,"Watch following videos:"),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"GLSL Dissolve Shader."),"         | ",Object(r.b)("strong",{parentName:"p"},"mTheoryGame."),"                  |\n|                                   |                                   |\n| ","![youtube_ry0r_qwFQLQ]","(         | ","![youtube_wUfMcN1Uv48]","(          |\n| ../../sdk/plugin/ry0r_qwFQLQ.jpg) | ../../sdk/plugin/wUfMcN1Uv48.jpg) |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("h2",{id:"usage-3"},"Usage"),Object(r.b)("p",null,"The shader requires 2 parameters:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"a Texture2D texture map to use as the dissolve map; and")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"a Vector2 of internal params params:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"the first is a float value being the amount of dissolve, a value\nfrom 0-1 : 0 being no dissolve, being fully dissolved; and")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"the second value is an int use as an inversion switch, 1 to\ninvert the dissolve/discard, 0 to leave as is."))))),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Dissolver is based on Common/MatDefs/Lighting.j3md. So, all\nCommon/MatDefs/Lighting.j3md features should be available on the\ndissolver too."))),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'// Create a material instance using ShaderBlow\'s Lighting.j3md\nfinal Material mat = new Material(this.assetManager, "ShaderBlow/MatDefs/Dissolve/Lighting.j3md");\nmat.setColor("Ambient", ColorRGBA.Blue);\nmat.setColor("Diffuse", ColorRGBA.White);\nmat.setColor("Specular", ColorRGBA.Black);\nmat.setBoolean("UseMaterialColors", true);\n\nthis.assetManager.loadTexture("TestTextures/Dissolve/burnMap.png", mat.setTexture("DissolveMap", map); // Set mask texture map\n\nthis.DSParams = new Vector2f(0, 0); // standard dissolver\n//this.DSParamsInv = new Vector2f(0, 1); // inverted dissolver\nmat.setVector2("DissolveParams", this.DSParams); // Set params\n\nfinal Box b = new Box(Vector3f.ZERO, 1, 1, 1);\nfinal Geometry geom = new Geometry("Box", b);\ngeom.setMaterial(mat);\n')),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/dissolve/TestDissolve.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/dissolve-shader/18720"}),"Forum thread")),Object(r.b)("h1",{id:"fakeparticleblow-shader"},"FakeParticleBlow Shader"),Object(r.b)("p",null,'Effect for fire or engine of a ship. Such an effect is used in the "Eve\nOnline game for ship engines.'),Object(r.b)("p",null,"Features:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"GPU animation (now you don't need simpleUpdate(float tpf) for the\nshader). Animation is made displacing the texture according to X\nand/or Y axis.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"X and/or Y animation direction. No animation is supported also.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Animation direction changer. By default the Y axis animation's\ndirection is up-to-down and the X axis animation's direction is\nright-to-left.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Allow to set animation speed.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Allow to set mask texture in order to set particle shape.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Allow to set particle color.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Allow to set fog color. Fog color is applyed to the material using\nfor color's alpha value as fog distance factor."))),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ","![FakeParticleBlow]","(../..         | ",Object(r.b)("strong",{parentName:"p"},"Fog applied to blue fire."),"     |\n| /sdk/plugin/fakeparticleblow.png) |                                   |\n|                                   | ","![FakeParticleBlow]","(../../        |\n|                                   | sdk/plugin/fakeparticleblow3.png) |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"FakeParticleBlow Shader."),"      |                                   |\n|                                   |                                   |\n| ","![youtube_hdQop4yZ-lA]","(          |                                   |\n| ../../sdk/plugin/hdQop4yZ-lA.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("h2",{id:"usage-4"},"Usage"),Object(r.b)("p",null,"Create a material (by SDK or by code) using\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/assets/ShaderBlow/MatDefs/FakeParticleBlow/FakeParticleBlow.j3md"}),"FakeParticleBlow.j3md"),".\nSet material's parameters and set the material to a spatial."),Object(r.b)("p",null,"Most of the cases the spatial will be 4 to 10 planes in the same\nlocation but rotated on Y axis using different angles for each plane.\nSomething similar to this:"),Object(r.b)("p",null,Object(r.b)("img",Object(n.a)({parentName:"p"},{src:"/images/sdk/plugin/fakeobject.png",alt:"fakeobject.png"}))),Object(r.b)("p",null,"::: {.important}\nRemenber to set the queue bucket to transparent for the spatial.\n:::"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'// Create the material\nfinal Material mat = new Material(this.assetManager, "ShaderBlow/MatDefs/FakeParticleBlow/FakeParticleBlow.j3md");\n\n// Create the mask texture to use\nfinal Texture maskTex = this.assetManager.loadTexture("TestTextures/FakeParticleBlow/mask.png");\nmat.setTexture("MaskMap", maskTex);\n\n// Create the texture to use for the spatial.\nfinal Texture aniTex = this.assetManager.loadTexture("TestTextures/FakeParticleBlow/particles.png");\naniTex.setWrap(WrapMode.MirroredRepeat); // NOTE: Set WrapMode = MirroredRepeat in order to animate the texture\nmat.setTexture("AniTexMap", aniTex); // Set texture\n\nmat.setFloat("TimeSpeed", 2); // Set animation speed\n\nmat.setColor("BaseColor", ColorRGBA.Green.clone()); // Set base color to apply to the texture\n\n// mat.setBoolean("Animation_X", true); // Enable X axis animation\nmat.setBoolean("Animation_Y", true); // Enable Y axis animation\nmat.setBoolean("Change_Direction", true); // Change direction of the texture animation\n\nmat.getAdditionalRenderState().setFaceCullMode(FaceCullMode.Off); // Allow to see both sides of a face\nmat.getAdditionalRenderState().setBlendMode(BlendMode.Additive);\n\nfinal ColorRGBA fogColor = ColorRGBA.Black.clone();\nfogColor.a = 10; // fogColor\'s alpha value is used to calculate the intensity of the fog (distance to apply fog)\nmat.setColor("FogColor", fogColor); // Set fog color to apply to the spatial.\n\nfinal Quad quad = new Quad(3, 3); // Create an spatial. A plane in this case\nfinal Geometry geom = new Geometry("Particle", quad);\ngeom.setMaterial(mat); // Assign the material to the spatial\nTangentBinormalGenerator.generate(geom);\ngeom.setQueueBucket(Bucket.Transparent); // Remenber to set the queue bucket to transparent for the spatial\n')),Object(r.b)("p",null,"To get green/yellow/blue fog (not transparency):"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"mat.getAdditionalRenderState().setBlendMode(BlendMode.AlphaAdditive);\nfinal ColorRGBA fogColor = ColorRGBA.Blue.clone();\n")),Object(r.b)("p",null,"Several planes geometries will be required as there will be\nAlphaAdditive material."),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/fakeparticleblow/TestFakeParticleBlow.java"}),"TestCase\n1"),"\\\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/fakeparticleblow/TestFakeParticleBlow2.java"}),"TestCase\n2")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/fakeparticleblow-shader/16443"}),"Forum\nthread")),Object(r.b)("h1",{id:"forceshield-shader"},"Forceshield Shader"),Object(r.b)("p",null,"Forcefield shader adds shield effect to a spatial. The spatial will be a\nsphere most of the cases, but box or oval should be possible to use.\nOnly problem is that it has to be higher-poly because distace is\ncalculated from vertex."),Object(r.b)("p",null,"Hits are registred as contact point position using this control and\neffect animation is based on distance from contact point and time. Max\nnumber of hits displayed is 4."),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set texture of the shield.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set color of the shield.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set minimal visibility (similar to alpha value). Default is\n0, that means shield is no displayed, only hit animations.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set effect duration. Default is 0.5s.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to set effect size. Default is 1.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Allow to enable/disable hit animations."))),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"Forceshield Shader."),"           | ",Object(r.b)("strong",{parentName:"p"},"Forceshield Cube Shader."),"      |\n|                                   |                                   |\n| ","![youtube_uu2nbaBM9Pk]","(          | ","![youtube_urzMiUeHsCc]","(          |\n| ../../sdk/plugin/uu2nbaBM9Pk.jpg) | ../../sdk/plugin/urzMiUeHsCc.png) |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("h2",{id:"usage-5"},"Usage"),Object(r.b)("p",null,"Create a Spatial instance. Create a\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/src/com/shaderblow/forceshield/ForceShieldControl.java"}),"ForceShieldControl"),"\ninstance. Add the control instance to the spatial."),Object(r.b)("p",null,"::: {.important}\nIf you experience problems, try higher polygon object.\n:::"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'// Create spatial to be the shield\nfinal Sphere sphere = new Sphere(30, 30, 1.2f);\nfinal Geometry shield = new Geometry("forceshield", sphere);\nshield.setQueueBucket(Bucket.Transparent); // Remenber to set the queue bucket to transparent for the spatial\n\n// Create ForceShieldControl\nthis.forceShieldControl = new ForceShieldControl(this.assetManager, 0.5f);\nshield.addControl(this.forceShieldControl); // Add the control to the spatial\nthis.forceShieldControl.setEffectSize(2f); // Set the effect size\nthis.forceShieldControl.setColor(new ColorRGBA(1, 0, 0, 3)); // Set effect color\nthis.forceShieldControl.setVisibility(0.1f); // Set shield visibility.\n\n// Set a texture to the shield\nthis.forceShieldControl.setTexture(this.assetManager.loadTexture("TestTextures/ForceShield/fs_texture.png"));\n\n// this.forceShieldControl.setEnabled(false); // Enable, disable animation.\n')),Object(r.b)("p",null,"Use ",Object(r.b)("em",{parentName:"p"},"forceShieldControl.registerHit(final Vector3f position)")," method to\nregister a hit."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"final CollisionResults crs = new CollisionResults();\nthis.rootNode.collideWith(new Ray(this.cam.getLocation(), this.cam.getDirection()), crs);\nif (crs.getClosestCollision() != null) {\n    // Register a hit\n    this.forceShieldControl.registerHit(crs.getClosestCollision().getContactPoint());\n}\n")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/forceshield/TestShield.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/forceshield-my-very-first-shader/18673"}),"Forum\nthread")),Object(r.b)("h1",{id:"matcap-shader"},"MatCap Shader"),Object(r.b)("p",null,"MatCap shader will be very useful for scrollshooters to imitate\ndifferent materials like glass, gold, metals. The shader does not use\nany lights, only one texture."),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Fog color and fog skybox.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Toon edge effect.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Multiply color: set a color to change texture's color.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Normal map."))),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("img",Object(n.a)({parentName:"p"},{src:"/images/sdk/plugin/matcap3.png",alt:"MatCap                          | ![Multiply                        |\n| shader](../../                    | col                               |\n| sdk/plugin/shaderblow_matcap.jpg) | or"}))," |\n+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("img",Object(n.a)({parentName:"p"},{src:"/images/sdk/plugin/matcap2.png",alt:"Toon edge                       | ![Fog                             |\n| effe                              | effe                              |\n| ct](/images/sdk/plugin/matcap1.png) | ct"}))," |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("h2",{id:"usage-6"},"Usage"),Object(r.b)("p",null,"Create a material (by SDK or by code) using\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/assets/ShaderBlow/MatDefs/MatCap/MatCap.j3md"}),"MatCap.j3md"),".\nSet material's parameters and set the material to a spatial."),Object(r.b)("p",null,"::: {.important}\nRemember to add a DirectionalLight if you want to use toon edge effect.\n:::"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"Material My Material : ShaderBlow/MatDefs/MatCap/MatCap.j3md {\n     MaterialParameters {\n        DiffuseMap : Flip TestTextures/matcaps/met2.png\n        Nor_Inv_Y : true\n        Nor_Inv_X : false\n        Nor_Inv_Z : false\n        NormalMap : TestModels/LightBlow/jme_lightblow_nor.png\n        FogSkyBox : Flip TestTextures/Water256.dds\n\n        Toon : true\n        EdgesColor : 1.0 0.0 0.0 1.0\n        EdgeSize : 0.01\n        Fog_Edges : true\n     }\n    AdditionalRenderState {\n    }\n}\n")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/matcap/TestMatCap.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/glsl-matcap-shader-done/18920"}),"Forum\nthread")),Object(r.b)("h1",{id:"glass-shader"},"Glass Shader"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Fog color and fog skybox.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Toon edge effect.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Multiply color: set a color to change texture's color.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Normal map."))),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ![Glass                           | ","![Glass Shader and Fog Color      |\n| shader]","(.                         | effect](..                        |\n| ./../sdk/plugin/glass-shader.png) | /../sdk/plugin/glass-shader2.png) |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("h2",{id:"usage-7"},"Usage"),Object(r.b)("p",null,"Create a material (by SDK or by code) using\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/assets/ShaderBlow/MatDefs/Glass/Glass.j3md"}),"Glass.j3md"),".\nSet material's parameters and set the material to a spatial."),Object(r.b)("p",null,"::: {.important}\nRemember to add a DirectionalLight if you want to use toon edge effect.\n:::"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"Material My Material : ShaderBlow/MatDefs/Glass/Glass.j3md {\n     MaterialParameters {\n\n        RefMap : Flip TestTextures/Water256.dds\n        Multiply_Color : 1.1 1.5 1.1 1.0\n        colorIntensity : 0.79999995\n        Nor_Inv_Y : true\n        NormalMap : TestModels/LightBlow/jme_lightblow_nor.png\n        ChromaticAbberation : true\n        abberIndex : 0.04\n        specularIntensity : 0.59999996\n\n        Toon : true\n        EdgesColor : 0.2 1.0 0.0 1.0\n        EdgeSize : 0.01\n        Fog_Edges : true\n     }\n    AdditionalRenderState {\n    }\n}\n")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/glass/TestGlass.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/glsl-glass-shader-done/19050"}),"Forum\nthread")),Object(r.b)("h1",{id:"simplerefraction-postprocessorfilter"},"SimpleRefraction PostProcessor/Filter"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Cool refraction effect")),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"SimpleRefraction                |                                   |\n| PostProcessor."),"                  |                                   |\n|                                   |                                   |\n| ","![youtube_EAUKCU5GRmc]","(          |                                   |\n| ../../sdk/plugin/EAUKCU5GRmc.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("h2",{id:"usage-8"},"Usage"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/simplerefraction/TestSimpleRefraction.java"}),"TestCase for\nPostProcessor")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/src/com/shaderblow/filter/simplerefractionfilter/SimpleRefractionFilter.java"}),"TestCase for\nFilter")),Object(r.b)("h1",{id:"basicssao-filter"},"BasicSSAO Filter"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Cool Shadows.")),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ","![Glass                           |                                   |\n| shader]","(../.                      |                                   |\n| ./sdk/plugin/shaderblow_ssao.png) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("h2",{id:"usage-9"},"Usage"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/filter/basicssao/TestBasicSSAO.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/wip-basicssao-added-optional-smoothing/23490"}),"Forum\nthread")),Object(r.b)("h1",{id:"electricity-shaders"},"Electricity Shaders"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Cool Electricity effect")),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"Electricity Shaders."),"          |                                   |\n|                                   |                                   |\n| ","![youtube_JDTES95HnPE]","(          |                                   |\n| ../../sdk/plugin/JDTES95HnPE.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/electricity-shaders/23436"}),"Forum\nthread")),Object(r.b)("h1",{id:"simplesprite-shader"},"SimpleSprite Shader"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"GPU animated texture.")),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ","![Glass                           |                                   |\n| shader]","(../../sdk/plugin/sh       |                                   |\n| aderblow_simplesprite_shader.png) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"SimpleSprite Shader."),"          |                                   |\n|                                   |                                   |\n| ","![youtube_7XFxbt-dw3I]","(          |                                   |\n| ../../sdk/plugin/7XFxbt-dw3I.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/texture-animation-shader-done/19579"}),"Forum\nthread")),Object(r.b)("h1",{id:"bubble-shader"},"Bubble Shader"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Cool nice bubble.")),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"Bubble Shader."),"                |                                   |\n|                                   |                                   |\n| ","![youtube_rkFbLZ1EOhg]","(          |                                   |\n| ../../sdk/plugin/rkFbLZ1EOhg.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/bubble-shader/26169"}),"Forum thread")),Object(r.b)("h1",{id:"simplespriteparticle-shader"},"SimpleSpriteParticle Shader"),Object(r.b)("p",null,"Features: static sprite speed: can render 1500000 sprites at 149 fps (\n0% cpu load, speed limited only by graphics card ). As long as you don't\nchange them (add, move, delete, change image). FULL LIBRARY PLUGIN:\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"http://code.google.com/p/petomancer/downloads/detail?name=SpriteLibrary.zip&can=2&q="}),"http://code.google.com/p/petomancer/downloads/detail?name=SpriteLibrary.zip&can=2&q=")),Object(r.b)("p",null,Object(r.b)("img",Object(n.a)({parentName:"p"},{src:"/images/sdk/plugin/shaderblow_simplespriteparticle_shader.png",alt:"shaderblow_simplespriteparticle_shader.png"}))),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/spritelibrary-efficient-render-of-sprites/20901"}),"Forum\nthread")),Object(r.b)("h1",{id:"texture-bombing"},"Texture Bombing"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Applying random images from a texture atlas to a model by dividing\nup the model's UV textures into cells.")),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"GLSL Texture Bomb."),"            |                                   |\n|                                   |                                   |\n| ","![youtube_3lBhu2c5V8o]","(          |                                   |\n| ../../sdk/plugin/3lBhu2c5V8o.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("h2",{id:"usage-10"},"Usage"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/texturebombing/TestTextureBombing.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/texture-glyph-bombing-shader/26867"}),"Forum\nthread")),Object(r.b)("h1",{id:"night-vision"},"Night Vision"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Apply a mask (Binoculars) and color to emulate night vision mode.")),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"Night Vision Post Processor."),"  |                                   |\n|                                   |                                   |\n| ","![youtube_mNsjAVUTDPs]","(          |                                   |\n| ../../sdk/plugin/mNsjAVUTDPs.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("h2",{id:"usage-11"},"Usage"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/filter/nightvision/TestNightVision.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/night-vision-filter-available-in-shaderblow-plugin/26892"}),"Forum\nthread")),Object(r.b)("h1",{id:"predator-thermal-vision"},"Predator Thermal Vision"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Changes the color in the scene to emulate the predator thermal\nvision effect")),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"Predator Thermal Vision."),"      |                                   |\n|                                   |                                   |\n| ","![youtube_DqBwCWVwTFQ]","(          |                                   |\n| ../../sdk/plugin/DqBwCWVwTFQ.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("h2",{id:"usage-12"},"Usage"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/filter/predatorvision/TestPredatorVision.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/predator-thermal-vision-filter-available-in-the-shaderblow-plugin/27005"}),"Forum\nthread")),Object(r.b)("h1",{id:"frosted-glass-effect"},"Frosted glass effect"),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Displays a frosted glass effect over the current scene")),Object(r.b)("p",null,"+-----------------------------------+-----------------------------------+\n| ",Object(r.b)("strong",{parentName:"p"},"Frosted Glass effect Filter."),"  |                                   |\n|                                   |                                   |\n| ","![youtube_Bb0jVjqvURw]","(          |                                   |\n| ../../sdk/plugin/Bb0jVjqvURw.jpg) |                                   |\n+-----------------------------------+-----------------------------------+"),Object(r.b)("p",null,": YouTube"),Object(r.b)("h2",{id:"usage-13"},"Usage"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine-Contributions/shaderblowlib/blob/master/ShaderBlow/test-src/com/shaderblow/test/filter/frostedglass/TestFrostedGlass.java"}),"TestCase")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/frosted-glass-filter-available-in-the-shaderblow-plugin/27023"}),"Forum\nthread")))}c.isMDXComponent=!0},441:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return h}));var n=a(0),l=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var b=l.a.createContext({}),c=function(e){var t=l.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},p=function(e){var t=c(e.components);return l.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),p=c(a),u=n,h=p["".concat(o,".").concat(u)]||p[u]||d[u]||r;return a?l.a.createElement(h,i({ref:t},b,{components:a})):l.a.createElement(h,i({ref:t},b))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var b=2;b<r;b++)o[b]=a[b];return l.a.createElement.apply(null,o)}return l.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);