(window.webpackJsonp=window.webpackJsonp||[]).push([[289],{428:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(1),o=n(9),a=(n(0),n(441)),c={},i={id:"jme3/contributions/tonegodgui/osrviewport",title:"osrviewport",description:"OSRViewPort",source:"@site/docs/jme3/contributions/tonegodgui/osrviewport.md",permalink:"/wikidemo/docs/jme3/contributions/tonegodgui/osrviewport",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/contributions/tonegodgui/osrviewport.md"},l=[{value:"The ViewPort&#39;s Camera control methods:",id:"the-viewports-camera-control-methods",children:[]},{value:"Other methods:",id:"other-methods",children:[]}],s={rightToc:l};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"osrviewport"},"OSRViewPort"),Object(a.b)("p",null,"The OSRViewPort allows you to create a movable, resizable ViewPort with\nthe ability to control the camera's rotation and zoom features via mouse\ninput."),Object(a.b)("p",null,"To initialize the OSRViewPort you can call one of the 3 standard\nconstructors as shown in the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"../../../jme3/contributions/tonegodgui/quickstart"}),"Quick Start\nGuide"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Constructor 1:")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"/** Parameters:\n  * Screen screen,\n  * String UID,\n  * Vector2f position\n  */\n\nOSRViewPort vp = new OSRViewPort(screen, \u201cvp\u201d, new Vector2f(15, 15));\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Constructor 2:")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"/** Additional Parameter:\n  * Vector2f dimensions  */\n\nOSRViewPort vp = new OSRViewPort(screen, \u201cvp\u201d, new Vector2f(15, 15),\n    new Vector2f(150, 150)\n);\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Constructor 3:")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'/** Additional Parameters:\n  * Vector4f resizeBorders,\n  * String defaultImg\n  */\n\nOSRViewPort vp = new OSRViewPort(screen, \u201cvp\u201d, new Vector2f(15, 15), new Vector2f(150, 150),\n    new Vector4f(0,0,0,0),\n    "imagePathToOverlayImage"\n);\n')),Object(a.b)("p",null,"Once initialized, you will want to active the OSRBridge for off-screen\nrendering of your new scene:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"vp.setOSRBridge(Node newScene, int renderWidth, int renderHeight);\n")),Object(a.b)("h2",{id:"the-viewports-camera-control-methods"},"The ViewPort's Camera control methods:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"vp.setUseCameraControlRotate(boolean rotateEnabled); // enable/disable rotation control\nvp.setUseCameraControlZoom(boolean zoomEnabled); // enable/disable zoom control\n\nvp.setCameraDistance(float distance);\nvp.setCameraHorizonalRotation(float angleInRads);\nvp.setCameraVerticalRotation(float angleInRads);\nvp.setCameraMinDistance(float distance);\nvp.setCameraMaxDistance(float distance);\nvp.setCameraMinVerticalRotation(float angleInRads);\nvp.setCameraMaxVerticalRotation(float angleInRads);\n")),Object(a.b)("h2",{id:"other-methods"},"Other methods:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"vp.setBackgroundColor(ColorRGBA color); // ViewPort is transparent by default\n")))}p.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(c,".").concat(d)]||u[d]||b[d]||a;return n?o.a.createElement(m,i({ref:t},s,{components:n})):o.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);