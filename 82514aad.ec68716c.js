(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{290:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(1),a=n(9),i=(n(0),n(441)),o={},s={id:"jme3/intermediate/transparency_sorting",title:"transparency_sorting",description:"There is often a lot of confusion with how pixels get processed in",source:"@site/docs/jme3/intermediate/transparency_sorting.md",permalink:"/wikidemo/docs/jme3/intermediate/transparency_sorting",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/intermediate/transparency_sorting.md",sidebar:"main",previous:{title:"how_to_use_materials",permalink:"/wikidemo/docs/jme3/intermediate/how_to_use_materials"},next:{title:"blender",permalink:"/wikidemo/docs/jme3/external/blender"}},l=[],c={rightToc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"There is often a lot of confusion with how pixels get processed in\nrelation to the z-buffer and why sorting is important. Most importantly\nit can be mind-warping trying to wrap one's head around how to \\'fix\\'\nthe cases where proper sorting isn't possible."),Object(i.b)("p",null,"Hopefully these diagrams help show the futility of it all... I mean the\ntrade offs one has to make to get transparency looking its best in the\ngeneral case."),Object(i.b)("p",null,"The first image I'll show is the \\'best case\\' where all objects are\ndrawn back to front. I'll then discuss briefly the steps JME goes\nthrough to try to make that happen."),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"/images/jme3/intermediate/transparency_sorting1.png",alt:"transparency_sorting1.png"}))),Object(i.b)("p",null,"In JME, the opaque layer would generally be placed in the opaque bucket.\nAll opaque layers are drawn first and within the ability to sort them,\nthey are sorted front to back to prevent overdraw."),Object(i.b)("p",null,"After the opaque bucket is drawn, the transparent bucket is drawn and it\nis sorted back to front. So in the ideal case it would appear exactly as\nin this picture."),Object(i.b)("p",null,"::: {.note}\nSorting is done at the object level and it can never be perfect. It is\nimpossible to properly sort objects by distance in the general case even\nif they were just triangles. Simply imagine intersecting triangles and\nit's clear there is no proper order. JME tries its best.\n:::"),Object(i.b)("p",null,"Next I'll show an image of the worst case scenario to show why sorting\nis important and how your \\'best friend\\' the z-buffer is really\ntransparency's worst enemy."),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"/images/jme3/intermediate/transparency_sorting2.png",alt:"transparency_sorting2.png"}))),Object(i.b)("p",null,"This is what will happen if you put all of your objects in the opaque\nbuffer. JME will sort them front to back and you will get these strange\n\\'windows\\' into your background."),Object(i.b)("p",null,"::: {.note}\nBecause sorting is done at the object level, you may have triangle to\ntriangle overlap even within the same mesh if it is non-convex. Think of\na glass donut where the near surface triangles are drawn before the\nhole's triangles. There will be this same issue where they occlude the\nfarther triangles. A different angle on the donut might produce the\ncorrect results depending on the order of the triangles in the mesh.\n:::"),Object(i.b)("p",null,"Finally, I'll augment the worst case sorting with something like\n",Object(i.b)("inlineCode",{parentName:"p"},"alphaDiscardThreshold")," (or the old alphaTest/alphaFalloff values). In\nthis example, let's pretend we only discard pixels with alpha = 0."),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"/images/jme3/intermediate/transparency_sorting3.png",alt:"transparency_sorting3.png"}))),Object(i.b)("p",null,"It's better but not perfect. Any partially transparent pixels will still\nshow the issue. Partial transparency will drive you crazy if you let it."),Object(i.b)("p",null,"Bottom line:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"back to front sorting would fix all issues")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"accurate back to front sorting in the general case is impossible")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"for purely on/off a = 1 or a = 0 transparency then a discard\nthreshold is the best bet to mitigate sorting problems.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Where 0 \\< alpha \\< 1, improper sorting of triangles/pixels will\nalways cause artifacts."))))}p.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},u=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,m=u["".concat(o,".").concat(h)]||u[h]||b[h]||i;return n?a.a.createElement(m,s({ref:t},c,{components:n})):a.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);