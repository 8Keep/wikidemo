(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{190:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(1),a=t(9),i=(t(0),t(441)),c={},o={id:"jme3/contributions/tonegodgui/spinner",title:"spinner",description:"Spinner Class",source:"@site/docs/jme3/contributions/tonegodgui/spinner.md",permalink:"/wikidemo/docs/jme3/contributions/tonegodgui/spinner",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/contributions/tonegodgui/spinner.md"},l=[{value:"Abstract Event Methods:",id:"abstract-event-methods",children:[]},{value:"Methods specific to the Spinner class:",id:"methods-specific-to-the-spinner-class",children:[]}],s={rightToc:l};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"spinner-class"},"Spinner Class"),Object(i.b)("p",null,"The Spinner class provides:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"A display area for the current step value")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"An increment button")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"A Decrement button")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"It can be set to cycle (when it reaches heighest step value it\ncycles to index 0, and reversed for decrement."))),Object(i.b)("p",null,"The Spinner class provides the same 3 common constructors as shown in\nthe ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"../../../jme3/contributions/tonegodgui/quickstart"}),"Quick Start\nGuide")," with the\naddition of two extra parameters."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The orientation of the Spinner")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"A boolean flag enabling/disabling Spinner cycling."))),Object(i.b)("p",null,"The additional parameter are appended to the existing parameter list for\nall 3 constructors, like so:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"/**\n  * Parameters:\n  * Screen screen\n  * String UID\n  * Vector2f position\n  * Spinner.Orientation orientation\n  * boolean cycle\n  */\nSpinner spinner1 = new Spinner(\n    screen,\n    \u201cSomeID\u201d,\n    new Vector2f(15, 15),\n    Spinner.Orientation.HORIZONTAL,\n    true\n);\n")),Object(i.b)("h2",{id:"abstract-event-methods"},"Abstract Event Methods:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"public void onChange(int selectedIndex, String value);\n")),Object(i.b)("h2",{id:"methods-specific-to-the-spinner-class"},"Methods specific to the Spinner class:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Quickly set interval info for both button\nspinner1.setInterval(float callsPerSecond);\n\n// Adding removing list info\nspinner1.addStepValue(String value);\nspinner1.removeStepValue(String value);\n\n// Quickly populate step values with integers/floats\nspinner1.setStepIntegerRange(int min, int max, int inc);\nspinner1.setStepFloatRange(float min, float max, float inc);\n\n// Retrieval of current selected step\nspinner1.getSelectedIndex();\n")),Object(i.b)("p",null,"You can set the select Spinner's displayed and selected value using:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"spinner1.setSelectedIndex(int selectedIndex)\n")))}p.isMDXComponent=!0},441:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),p=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o({},n,{},e)),t},u=function(e){var n=p(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(t),d=r,m=u["".concat(c,".").concat(d)]||u[d]||b[d]||i;return t?a.a.createElement(m,o({ref:n},s,{components:t})):a.a.createElement(m,o({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var s=2;s<i;s++)c[s]=t[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);