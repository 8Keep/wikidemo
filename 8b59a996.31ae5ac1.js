(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{298:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var o=n(1),r=n(9),a=(n(0),n(441)),i={},l={id:"sdk/model_loader_and_viewer",title:"model_loader_and_viewer",description:"The jMonkeyEngine SDK imports models from your project and stores them",source:"@site/docs/sdk/model_loader_and_viewer.md",permalink:"/wikidemo/docs/sdk/model_loader_and_viewer",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/sdk/model_loader_and_viewer.md"},s=[{value:"Working With a Model",id:"working-with-a-model",children:[]},{value:"Notes About Model Assets",id:"notes-about-model-assets",children:[]},{value:"About the SceneViewer and SceneExplorer window",id:"about-the-sceneviewer-and-sceneexplorer-window",children:[]}],c={rightToc:s};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The jMonkeyEngine SDK imports models from your project and stores them\nin the assets folder. The imported models are converted to a jME3\ncompatible binary format called .j3o. Double-click .j3o files in the\njMonkeyEngine SDK to display them in the SceneViewer, or load them\nin-game using the AssetManager."),Object(a.b)("p",null,"Presently, ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"http://www.blender.org/"}),"Blender 3D")," is the preferred\nmodelling tool for jME3 as it is also Open-Source Software and an\nexporter for GLTF files exists. View the 3D model ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"../jme3/features.xml#supported-external-file-types"}),"Supported External\nFile Types")," and\ntheir export/conversion options for more info."),Object(a.b)("p",null,"::: {.warning}\nBlender no longer supports Ogre exporting as of version 2.8. It's highly\nrecommended that you export and convert files using the GLTF type. Ogre\nwill eventually be removed from this wiki.\n:::"),Object(a.b)("p",null,"Also, see this ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"http://www.youtube.com/watch?v=nL7woH40i5c"}),"demo video"),"\non importing models."),Object(a.b)("h1",{id:"installing-the-ogrexml-exporter-in-blender"},"Installing the OgreXML Exporter in Blender"),Object(a.b)("p",null,"The jMonkeyEngine SDK includes a tool to install the correct exporter\ntools in Blender to export OgreXML files. To install the exporter, do\nthe following:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Select ",Object(a.b)("inlineCode",{parentName:"p"},"Tools OgreXML Install Blender OgreXML")," in the jMonkeyEngine\nSDK Menu.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"If you are presented a filechooser, select the folder where your\nblender scripts reside.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},'Press "Install" in the window that opens.'))),Object(a.b)("p",null,"Also check out ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"../jme3/external/blender"}),"how to create compatible models in\nblender")," and ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"../jme3/intermediate/multi-media_asset_pipeline"}),"how to organize your\nassets"),"."),Object(a.b)("h1",{id:"using-the-model-files-directly"},"Using the model files directly"),Object(a.b)("p",null,Object(a.b)("img",Object(o.a)({parentName:"p"},{src:"../sdk/jmonkeyplatform-docu-2.png",alt:"jmonkeyplatform-docu-2.png"}))),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Create a separate folder for each model in the ",Object(a.b)("inlineCode",{parentName:"p"},"assets")," folder of\nyour project.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Export the model created in Blender ",Object(a.b)("strong",{parentName:"p"},"to the ",Object(a.b)("inlineCode",{parentName:"strong"},"asset")," folder of your\nproject"),",")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Make sure all textures used in the .blend file are in the assets\nfolder of the project.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},'Double-click the model or right-click and select "Convert to JME\nbinary" from the context-menu.')),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"In the Projects Explorer Assets node you should see your model j3o\nfile.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Double-click it to view it in the SceneViewer.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Click on the lightbulb to turn on the light if you cannot see your\nmodel."))),Object(a.b)("p",null,"::: {.note}\nIt is important that you export the model file and its textures to the\ncorrect assets folder before creating the j3o file because the paths for\ntextures (and possibly other things) will be stored as absolute (to the\nassets folder root) when you convert that model. This means the texture\nlocation should not change after the import.\n:::"),Object(a.b)("p",null,"::: {.note}\nIf the SceneViewer doesn't work refer to ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"../sdk/troubleshooting"}),"Troubleshooting jMonkeyEngine3\nSDK"),".\n:::"),Object(a.b)("h2",{id:"working-with-a-model"},"Working With a Model"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Open ",Object(a.b)("inlineCode",{parentName:"p"},"Windows SceneExplorer")," to view sub-nodes of the model.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Open ",Object(a.b)("inlineCode",{parentName:"p"},"Windows Properties")," to view the properties of the model's\nnodes.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Click the cube button in the SceneViewer to toggle between Wireframe\nmode and Textured mode.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Click the lightbulb to view Materials that require a light source"))),Object(a.b)("h2",{id:"notes-about-model-assets"},"Notes About Model Assets"),Object(a.b)("p",null,"The original OgreXML ",Object(a.b)("inlineCode",{parentName:"p"},".mesh.xml"),", ",Object(a.b)("inlineCode",{parentName:"p"},".scene"),", ",Object(a.b)("inlineCode",{parentName:"p"},".material"),", ",Object(a.b)("inlineCode",{parentName:"p"},".skeleton.xml"),"\nor ",Object(a.b)("inlineCode",{parentName:"p"},".gltf")," model files ",Object(a.b)("strong",{parentName:"p"},"will not be included")," in the distribution\n",Object(a.b)("inlineCode",{parentName:"p"},"assets.jar")," file of your distributed game, they are only available in\nthe assets folder so you are able to recreate the ",Object(a.b)("inlineCode",{parentName:"p"},".j3o")," file from the\noriginal if you ever come to change it in blender and have to export it\nagain."),Object(a.b)("h2",{id:"about-the-sceneviewer-and-sceneexplorer-window"},"About the SceneViewer and SceneExplorer window"),Object(a.b)("p",null,"The SceneViewer and SceneExplorer windows are shared among plugins to\nsave system resources. This means that you will have to keep an eye on\nwhat plugin is using the scene right now and what you are actually\nmodifying in these windows."),Object(a.b)("p",null,"Most plugins will deliver their own UI elements to modify the scene so\nthe SceneExplorer is more of a global tool. The simple SceneComposer\nhowever heavily relies on its functions as other plugins might too in\nthe future."),Object(a.b)("h1",{id:"about-the-projects-assetmanager"},"About the projects AssetManager"),Object(a.b)("p",null,"Each jMonkeyEngine SDK project has its own internal AssetManager that\nhas the projects assets folder registered as a FileLocator. When the\nproject is run, the assets folder is compressed into a jar file and\nadded to the projects main jar classpath. This way the editors in\njMonkeyEngine SDK and the running game have the same asset folder\nstructure."),Object(a.b)("p",null,'You might wonder why jMonkeyEngine SDK requires you to copy the model\nthat is to be converted to j3o into the assets folder before. The Model\nImport Tool also copies the model and associated files to the project\ndirectory before converting. To load the model it needs to be in a\nfolder (or jar etc..) that belongs to the projects AssetManager root. To\nload a model from some other folder of the filesystem, that folder would\nhave to be added to the AssetManager root. If every folder that contains\na model was in the root of the AssetManager, all textures named\n"hull.jpg" for example would be the same for the AssetManager and it\nwould only deliver the texture of the first model folder that was added.'),Object(a.b)("p",null,"To have a valid jME3 object, the paths to textures and other assets\nbelonging to the model have to be read with the correct, final path that\ncan then be stored in the j3o object. The j3o object will use those\npaths when it is loaded with the AssetManager and it requires the\nAssetManager to deliver the assets on those paths, this is why the\nfolder structure while converting has to be the same as when loading."))}d.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},p=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),h=o,m=p["".concat(i,".").concat(h)]||p[h]||b[h]||a;return n?r.a.createElement(m,l({ref:t},c,{components:n})):r.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);