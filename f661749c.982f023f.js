(window.webpackJsonp=window.webpackJsonp||[]).push([[288],{427:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(1),r=a(9),o=(a(0),a(441)),s={},i={id:"jme3/contributions/vegetationsystem/grass",title:"grass",description:"Here you will learn how to use the grass system. The test project",source:"@site/docs/jme3/contributions/vegetationsystem/grass.md",permalink:"/wikidemo/docs/jme3/contributions/vegetationsystem/grass",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/contributions/vegetationsystem/grass.md"},l=[{value:"Alpha textures",id:"alpha-textures",children:[]},{value:"Coloring &amp; Depth",id:"coloring--depth",children:[]},{value:"Alpha to coverage",id:"alpha-to-coverage",children:[]}],c={rightToc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Here you will learn how to use the grass system. The test project\navailable on the project page contains enough well-commented examples to\nget you going, but there are some more information available here."),Object(o.b)("h1",{id:"simplegrasstestjava"},"SimpleGrassTest.java"),Object(o.b)("p",null,"The demo project contains an example named SimpleGrassTest.java. That\nclass has a method named setupForester(). It is well commented, and can\nbe used as a primer on how to set up a simple grass system. The basic\napproach is this:"),Object(o.b)("p",null,"1",")"," Create a Forester object, and initialize it."),Object(o.b)("p",null,"2",")"," Use it to create a grass-loader."),Object(o.b)("p",null,"3",")"," Use the grassloader to create a map-provider. The map-provider is\nused to feed the grass-loader with densitymaps."),Object(o.b)("p",null,"4",")"," Use the grassloader to create one grass-layer for each type of\ngrass. Each type of grass has its own grasslayer object which contains\nthe material settings, the actual grass texture, and lots of other\nsettings. Each layer also has their own instance of the planting\nalgorithm, so that each type of grass can be planted in it's own way."),Object(o.b)("p",null,"5",")"," Tweak everything until you're happy with the way it looks/runs."),Object(o.b)("p",null,"6",")"," Make sure you call forester.update() each frame."),Object(o.b)("h1",{id:"rendering-vegetation-basic"},"Rendering vegetation (Basic)"),Object(o.b)("p",null,"Here is some basic information and tips here on how to make a vegetation\nsystem more efficient and/or better looking. There are also links to\nmore in-depth jME tutorials on each subject, where there are any."),Object(o.b)("h2",{id:"alpha-textures"},"Alpha textures"),Object(o.b)("p",null,"Grass and foliage often use alpha textures. Alpha textures are partially\n(or fully) transparent. A standard alpha texture contains the RGB\nchannels, but also an additional alpha channel where the transparency\nvalues are stored."),Object(o.b)("p",null,"There is a tutorial on how to work with alpha textures and transparency\nhere:\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../../../jme3/beginner/hello_material"}),"jme3\ud83d\udd30hello","_","material")),Object(o.b)("h2",{id:"coloring--depth"},"Coloring & Depth"),Object(o.b)("p",null,"Materials have something called additional renderstate options. They can\nbe found in the material editor. When rendering grass, you usually want\nto look at these settings:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"FaceCull:"),' When using fixed quads it should be set to "Off. This\nmeans both sides of the quads will be rendered. When using billboarded\ngrass, you can cull the back side, because it never faces the camera.'),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Blending mode:")," With grass you'd normally be using ",Object(o.b)("strong",{parentName:"p"},"Alpha"),". The\n",Object(o.b)("strong",{parentName:"p"},"AlphaTestFallof")," parameter should also be set, but the value to use\ndepends a lot on the texture. It may be worth trying a few different\nvalues."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"DepthWrite/DepthCheck:")," Both of those should normally be checked."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"ColorWrite:")," This should always be on."),Object(o.b)("h2",{id:"alpha-to-coverage"},"Alpha to coverage"),Object(o.b)("p",null,"Alpha to coverage (AtoC) is a method used to smooth out the edges of\ngrass and such. It is an alternative to regular alpha blending. In jME\nyou enable it through the rendermanager, or renderer:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"renderer.setAlphaToCoverage(true);\n")),Object(o.b)("p",null,"There's an example in the Forester test project that shows how you\nenable it, and how you use it in Forester."),Object(o.b)("p",null,"Alpha to coverage works through multi-sampling, and you have to use\n4xMSAA in order for it to work. It is a fairly new technique and may not\nbe supported on older graphics-cards. It is also implemented differently\nby different vendors, and while some cards \"technically support it, it\nmay not work as intended. This means it's always a good idea to provide\nan alternative to AtoC in your apps/games."),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://en.wikipedia.org/wiki/Alpha_to_coverage"}),"http://en.wikipedia.org/wiki/Alpha_to_coverage")))}p.isMDXComponent=!0},441:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},u=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),b=n,d=u["".concat(s,".").concat(b)]||u[b]||h[b]||o;return a?r.a.createElement(d,i({ref:t},c,{components:a})):r.a.createElement(d,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=b;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"}}]);