(window.webpackJsonp=window.webpackJsonp||[]).push([[294],{433:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(9),i=(n(0),n(441)),o={},c={id:"jme3/advanced/particle_emitters",title:"particle_emitters",description:"You cannot create a 3D model for delicate things like fire, smoke, or",source:"@site/docs/jme3/advanced/particle_emitters.md",permalink:"/wikidemo/docs/jme3/advanced/particle_emitters",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/particle_emitters.md"},s=[{value:"Default Particle Textures",id:"default-particle-textures",children:[]}],l={rightToc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"You cannot create a 3D model for delicate things like fire, smoke, or\nexplosions. Particle Emitters are quite an efficient solution to create\nthese kinds of effects: The emitter renders a series of flat orthogonal\nimages and manipulates them in a way that creates the illusion of a\nanything from a delicate smoke cloud to individual flames, etc. Creating\nan effect involves some trial and error to get the settings ",Object(i.b)("em",{parentName:"p"},"just\nright"),", and it's worth exploring the expressiveness of the options\ndescribed below."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Use the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../sdk/scene_explorer"}),"Scene Explorer")," in the\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../sdk"}),"SDK")," to design and preview effects."))),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/advanced/explosion-5.png",alt:"explosion-5.png"})),"\n",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/advanced/particle.png",alt:"particle.png"})),"\n",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/beginner/beginner-effect-fire.png",alt:"beginner-effect-fire.png"})),"\n",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/advanced/butterfly-particle-emitter.png",alt:"butterfly-particle-emitter.png"}))),Object(i.b)("h1",{id:"create-an-emitter"},"Create an Emitter"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create one emitter for each effect:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'ParticleEmitter explosion = new ParticleEmitter(\n"My explosion effect", Type.Triangle, 30);\n'))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Attach the emitter to the rootNode and position it in the scene:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"rootNode.attachChild(explosion);\nexplosion.setLocalTranslation(bomb.getLocalTranslation());\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Trigger the effect by calling"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"explosion.emitAllParticles()\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"End the effect by calling"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"explosion.killAllParticles()\n")))),Object(i.b)("p",null,"Choose one of the following mesh shapes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Type.Triangle")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Type.Point"))),Object(i.b)("h1",{id:"configure-parameters"},"Configure Parameters"),Object(i.b)("p",null,"Not all of these parameters are required for all kinds of effects. If\nyou don't specify one of them, a default value will be used."),Object(i.b)("p",null,"+---------+-----------------+-------------+---------------------------+\n| Pa      | Method          | Default     | Description               |\n| rameter |                 |             |                           |\n+=========+=================+=============+===========================+\n| number  | ",Object(i.b)("inlineCode",{parentName:"p"},"set            |             | The maximum number of     |\n|         | NumParticles()")," |             | particles visible at the  |\n|         |                 |             | same time. Specified by   |\n|         |                 |             | user in constructor.      |\n+---------+-----------------+-------------+---------------------------+\n| e       | ",Object(i.b)("inlineCode",{parentName:"p"},"setPar         | 20          | Density of the effect,    |\n| mission | ticlesPerSec()")," |             | how many new particles    |\n| rate    |                 |             | are emitted per second.\\  |\n|         |                 |             | Set to zero to control    |\n|         |                 |             | the start/end of the      |\n|         |                 |             | effect.\\                  |\n|         |                 |             | Set to a number for a     |\n|         |                 |             | constantly running        |\n|         |                 |             | effect.                   |\n+---------+-----------------+-------------+---------------------------+\n| size    | ",Object(i.b)("inlineCode",{parentName:"p"},"s              | 0.2f, 2f    | The radius of the scaled  |\n|         | etStartSize()"),", |             | sprite image. Set both to |\n|         | ",Object(i.b)("inlineCode",{parentName:"p"},"setEndSize()"),"  |             | same value for constant   |\n|         |                 |             | size effect.\\             |\n|         |                 |             | Set to different values   |\n|         |                 |             | for shrink/grow effect.   |\n+---------+-----------------+-------------+---------------------------+\n| color   | ",Object(i.b)("inlineCode",{parentName:"p"},"se             | gray        | Controls how the opaque   |\n|         | tStartColor()"),", |             | (non-black) parts of the  |\n|         | ",Object(i.b)("inlineCode",{parentName:"p"},"setEndColor()")," |             | texture are colorized.\\   |\n|         |                 |             | Set both to the same      |\n|         |                 |             | color for single-colored  |\n|         |                 |             | effects (e.g. fog,        |\n|         |                 |             | debris).\\                 |\n|         |                 |             | Set both to different     |\n|         |                 |             | colors for a gradient     |\n|         |                 |             | effect (e.g. fire).       |\n+---------+-----------------+-------------+---------------------------+\n| dire    | ",Object(i.b)("inlineCode",{parentName:"p"},"g              | Vect        | A vector specifying the   |\n| ction/v | etParticleInflu | or3f(0,0,0) | initial direction and     |\n| elocity | encer(). setIni |             | speed of particles. The   |\n|         | tialVelocity(in |             | longer the vector, the    |\n|         | itialVelocity)")," |             | faster.                   |\n+---------+-----------------+-------------+---------------------------+\n| fanning | ",Object(i.b)("inlineCode",{parentName:"p"},"getParticle    | 0.2f        | How much the direction    |\n| out     | Influencer().se |             | ("),"setInitialVelocity()",Object(i.b)("inlineCode",{parentName:"p"},")  |\n|         | tVelocityVariat |             | can vary among particles. |\n|         | ion(variation)")," |             | Use a value between 1 and |\n|         |                 |             | 0 to create a directed    |\n|         |                 |             | swarm-like cloud of       |\n|         |                 |             | particles.\\               |\n|         |                 |             | 1 = Maximum variation,    |\n|         |                 |             | particles emit in random  |\n|         |                 |             | 360\xb0 directions (e.g.     |\n|         |                 |             | explosion, butterflies).\\ |\n|         |                 |             | 0.5f = particles are      |\n|         |                 |             | emitted within 180\xb0 of    |\n|         |                 |             | the initial direction.\\   |\n|         |                 |             | 0 = No variation,         |\n|         |                 |             | particles fly in a        |\n|         |                 |             | straight line in          |\n|         |                 |             | direction of start        |\n|         |                 |             | velocity (e.g. lasergun   |\n|         |                 |             | blasts).                  |\n+---------+-----------------+-------------+---------------------------+\n| dir     | ",Object(i.b)("inlineCode",{parentName:"p"},"setFa          | false       | true = Flying particles   |\n| ection\\ | cingVelocity()")," |             | pitch in the direction    |\n| (pick   |                 |             | they're flying (e.g.      |\n| one)    |                 |             | missiles).\\               |\n|         |                 |             | false = Particles keep    |\n|         |                 |             | flying rotated the way    |\n|         |                 |             | they started (e.g.        |\n|         |                 |             | debris).                  |\n+---------+-----------------+-------------+---------------------------+\n| dir     | ",Object(i.b)("inlineCode",{parentName:"p"},"s              | V           | Vector3f = Flying         |\n| ection\\ | etFaceNormal()")," | ector3f.NAN | particles face in the     |\n| (pick   |                 |             | given direction (e.g.     |\n| one)    |                 |             | horizontal shockwave      |\n|         |                 |             | faces up =                |\n|         |                 |             | Vector3f.UNIT","_","Y).\\       |\n|         |                 |             | Vector3f.NAN = Flying     |\n|         |                 |             | particles face the        |\n|         |                 |             | camera.                   |\n+---------+-----------------+-------------+---------------------------+\n| l       | ",Object(i.b)("inlineCode",{parentName:"p"},"setLowLife()"),", | 3f, 7f      | The time period before a  |\n| ifetime | ",Object(i.b)("inlineCode",{parentName:"p"},"setHighLife()")," |             | particle fades is set to  |\n|         |                 |             | a random value between    |\n|         |                 |             | minimum and maximum;      |\n|         |                 |             | minimum must be smaller   |\n|         |                 |             | than maximum. A minimum   |\n|         |                 |             | \\< 1f makes the effect    |\n|         |                 |             | more busy, a higher       |\n|         |                 |             | minimum looks more        |\n|         |                 |             | steady. Use a maximum \\<  |\n|         |                 |             | 1f for short bursts, and  |\n|         |                 |             | higher maxima for long    |\n|         |                 |             | lasting swarms or smoke.  |\n|         |                 |             | Set maximum and minimum   |\n|         |                 |             | to similar values to      |\n|         |                 |             | create an evenly spaced   |\n|         |                 |             | effect (e.g. fountain),   |\n|         |                 |             | set the to very different |\n|         |                 |             | values to create a        |\n|         |                 |             | distorted effect (e.g.    |\n|         |                 |             | fire with individual long |\n|         |                 |             | flames).                  |\n+---------+-----------------+-------------+---------------------------+\n| s       | ",Object(i.b)("inlineCode",{parentName:"p"},"se             | 0f          | 0 = Flying particles      |\n| pinning | tRotateSpeed()")," |             | don't spin while flying   |\n|         |                 |             | (e.g. smoke, insects,     |\n|         |                 |             | controlled projectiles).\\ |\n|         |                 |             | ",">"," 0 = How fast particle  |\n|         |                 |             | spins while flying (e.g.  |\n|         |                 |             | debris, shuriken,         |\n|         |                 |             | missiles out of control). |\n+---------+-----------------+-------------+---------------------------+\n| r       | ",Object(i.b)("inlineCode",{parentName:"p"},"se             | false       | true = The particle       |\n| otation | tRandomAngle()")," |             | sprite is rotated at a    |\n|         |                 |             | random angle when it is   |\n|         |                 |             | emitted (e.g. explosion,  |\n|         |                 |             | debris).\\                 |\n|         |                 |             | false = Particles fly     |\n|         |                 |             | straight like you drew    |\n|         |                 |             | them in the sprite        |\n|         |                 |             | texture (e.g. insects).   |\n+---------+-----------------+-------------+---------------------------+\n| gravity | ",Object(i.b)("inlineCode",{parentName:"p"},"setGravity()"),"  | Ve          | Particles fall in the     |\n|         |                 | ctor3f(0.0f | direction of the vector   |\n|         |                 | ,0.1f,0.0f) | (e.g. debris, sparks).\\   |\n|         |                 |             | (0,0,0) = Particles keep  |\n|         |                 |             | flying in start direction |\n|         |                 |             | (e.g. flames,             |\n|         |                 |             | zero-gravity explosion.)  |\n+---------+-----------------+-------------+---------------------------+\n| start   | ",Object(i.b)("inlineCode",{parentName:"p"},"setShape(      | EmitterP    | By default, particles are |\n| area    | new EmitterSphe | ointShape() | emitted from the emitters |\n|         | reShape( Vector |             | location (a point). You   |\n|         | 3f.ZERO, 2f));")," |             | can increase the emitter  |\n|         |                 |             | shape to occupy a sphere, |\n|         |                 |             | so that the start point   |\n|         |                 |             | of new particles can be   |\n|         |                 |             | anywhere inside the       |\n|         |                 |             | sphere, which makes the   |\n|         |                 |             | effect a bit more         |\n|         |                 |             | irregular.                |\n+---------+-----------------+-------------+---------------------------+"),Object(i.b)("p",null,"Build up your effect by specifying one parameter after the other. If you\nchange several parameters at the same time, it's difficult to tell which\nof the values caused which outcome."),Object(i.b)("h1",{id:"create-an-effect-material"},"Create an Effect Material"),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/beginner/flash.png",alt:"flash.png"}))),Object(i.b)("p",null,"Use the common Particle.j3md Material Definition and a texture to\nspecify the shape of the particles. The shape is defined by the texture\nyou provide and can be anything -- debris, flames, smoke, mosquitoes,\nleaves, butterflies... be creative."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'    Material flash_mat = new Material(\n        assetManager, "Common/MatDefs/Misc/Particle.j3md");\n    flash_mat.setTexture("Texture",\n        assetManager.loadTexture("Effects/Explosion/flash.png"));\n    flash.setMaterial(flash_mat);\n    flash.setImagesX(2); // columns\n    flash.setImagesY(2); // rows\n    flash.setSelectRandomImage(true);\n')),Object(i.b)("p",null,"The effect texture can be one image, or contain a sprite animation -- a\nseries of slightly different pictures in equally spaced rows and\ncolumns. If you choose the sprite animation:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Specify the number of rows and columns using setImagesX(2) and\nsetImagesY().")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Specify whether you want to play the sprite series in order\n(animation), or at random (explosion, flame), by setting\nsetSelectRandomImage() true or false."))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Examples:")," Have a look at the following default textures and you will\nsee how you can create your own sprite textures after the same fashion."),Object(i.b)("h2",{id:"default-particle-textures"},"Default Particle Textures"),Object(i.b)("p",null,"The Material is used together with grayscale texture: The black parts\nwill be transparent and the white parts will be opaque (colored). The\nfollowing effect textures are available by default from ",Object(i.b)("inlineCode",{parentName:"p"},"test-data.jar"),".\nYou can also load your own textures from your assets directory."),Object(i.b)("p",null,"+----------------------+----------------------+-----------------------+\n| Texture Path         | Dimension            | Preview               |\n+======================+======================+=======================+\n| Effects/             | 3","*","3                 | ","![D                   |\n| Explosion/Debris.png |                      | ebris.png]","(../../jme3 |\n|                      |                      | /beginner/Debris.png) |\n+----------------------+----------------------+-----------------------+\n| Effects              | 2","*","2                 | !                     |\n| /Explosion/flame.png |                      | ","[flame.png]","(../../jme |\n|                      |                      | 3/beginner/flame.png) |\n+----------------------+----------------------+-----------------------+\n| Effects              | 2","*","2                 | !                     |\n| /Explosion/flash.png |                      | ","[flash.png]","(../../jme |\n|                      |                      | 3/beginner/flash.png) |\n+----------------------+----------------------+-----------------------+\n| Effects/Expl         | 1","*","1                 | ","![roundspar           |\n| osion/roundspark.png |                      | k.png]","(../../jme3/beg |\n|                      |                      | inner/roundspark.png) |\n+----------------------+----------------------+-----------------------+\n| Effects/Exp          | 1","*","1                 | ","![shockwa             |\n| losion/shockwave.png |                      | ve.png]","(../../jme3/be |\n|                      |                      | ginner/shockwave.png) |\n+----------------------+----------------------+-----------------------+\n| Effects/Expl         | 1","*","3                 | ","![smoketrai           |\n| osion/smoketrail.png |                      | l.png]","(../../jme3/beg |\n|                      |                      | inner/smoketrail.png) |\n+----------------------+----------------------+-----------------------+\n| Effects              | 1","*","1                 | !                     |\n| /Explosion/spark.png |                      | ","[spark.png]","(../../jme |\n|                      |                      | 3/beginner/spark.png) |\n+----------------------+----------------------+-----------------------+\n| Eff                  | 1","*","15                | !                     |\n| ects/Smoke/Smoke.png |                      | ","[Smoke.png]","(../../jme |\n|                      |                      | 3/beginner/Smoke.png) |\n+----------------------+----------------------+-----------------------+"),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Use the ",Object(i.b)("inlineCode",{parentName:"p"},"setStartColor()"),"/",Object(i.b)("inlineCode",{parentName:"p"},"setEndColor()")," settings described above to\ncolorize the white and gray parts of textures."))),Object(i.b)("h1",{id:"usage-example"},"Usage Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'    ParticleEmitter fire = new ParticleEmitter("Emitter", Type.Triangle, 30);\n    Material mat_red = new Material(assetManager, "Common/MatDefs/Misc/Particle.j3md");\n    mat_red.setTexture("Texture", assetManager.loadTexture("Effects/Explosion/flame.png"));\n    fire.setMaterial(mat_red);\n    fire.setImagesX(2); fire.setImagesY(2); // 2x2 texture animation\n    fire.setEndColor(  new ColorRGBA(1f, 0f, 0f, 1f));   // red\n    fire.setStartColor(new ColorRGBA(1f, 1f, 0f, 0.5f)); // yellow\n    fire.getParticleInfluencer().setInitialVelocity(new Vector3f(0,2,0));\n    fire.setStartSize(1.5f);\n    fire.setEndSize(0.1f);\n    fire.setGravity(0,0,0);\n    fire.setLowLife(0.5f);\n    fire.setHighLife(3f);\n    fire.getParticleInfluencer().setVelocityVariation(0.3f);\n    rootNode.attachChild(fire);\n')),Object(i.b)("p",null,"Browse the full source code of all ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/tree/master/jme3-examples/src/main/java/jme3test/effect"}),"effect\nexamples"),"\nhere."),Object(i.b)("p",null,"See also: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/effects_overview"}),"Effects Overview")))}p.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},m=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(n),b=a,d=m["".concat(o,".").concat(b)]||m[b]||f[b]||i;return n?r.a.createElement(d,c({ref:t},l,{components:n})):r.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);