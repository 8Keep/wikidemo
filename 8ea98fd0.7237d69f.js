(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{302:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(1),o=n(9),r=(n(0),n(441)),i={},l={id:"jme3/advanced/level_of_detail",title:"level_of_detail",description:"A mesh with a high level of detail has lots of polygons and looks good",source:"@site/docs/jme3/advanced/level_of_detail.md",permalink:"/wikidemo/docs/jme3/advanced/level_of_detail",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/level_of_detail.md"},c=[{value:"Generating LODs in the SDK",id:"generating-lods-in-the-sdk",children:[]},{value:"Generating LODs in Code",id:"generating-lods-in-code",children:[]}],s={rightToc:c};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A mesh with a high level of detail has lots of polygons and looks good\nclose up. But when the mesh is further away (and the detail is not\nvisible), the high-polygon count slows down performance unnecessarily."),Object(r.b)("p",null,"One solution for this problem is to use high-detail meshes for objects\nclose to the camera, and low-detail meshes for objects far from the\ncamera. As the player moves through the scene, you must keep replacing\nclose objects by more detailed meshes, and far objects by less detailed\nmeshes. The goal is to keep few high-quality slow-rendering objects in\nthe foreground, and many low-quality fast-rendering objects in the\nbackground. (Experienced users can compare this approach to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/terrain"}),"JME's\nTerraMonkey terrain system"),", which\ninternally uses the specialized GeoMipMapping algorithm to generate a\nterrain's Levels of Detail.)"),Object(r.b)("p",null,"You see now why you may want to be able to generate Levels of Detail for\ncomplex Geometries automatically. JME3 supports a Java implementation of\nthe Ogre engine's LOD generator (originally by P\xe9ter Sz\xfccs and Stan\nMelax): You use\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-core/src/tools/java/jme3tools/optimize/LodGenerator.java"}),"jme3tools.optimize.LodGenerator"),"\nin conjunction with\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-core/src/main/java/com/jme3/scene/control/LodControl.java"}),"com.jme3.scene.control.LodControl"),"."),Object(r.b)("p",null,"For a demo, run\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-examples/src/main/java/jme3test/stress/TestLodGeneration.java"}),"TestLodGeneration.java"),"\nfrom ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../../sdk/sample_code"}),"JmeTests"),", then press +/- and spacebar\nto experiment. The following screenshots show a monkey model with three\nreduced Levels of Detail:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"../../jme3/advanced/jmonkey-lod.gif",alt:"jmonkey-lod.gif"}))),Object(r.b)("h1",{id:"usage"},"Usage"),Object(r.b)("p",null,"To activate this optimization:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Pick a reduction method and values for the Geometry. (Trial and\nerror...)")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Generate LODs for the Geometry, either in the SDK or in code.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Add an LOD control to the Geometry."))),Object(r.b)("h1",{id:"pick-reduction-methods-and-values"},"Pick Reduction Methods and Values"),Object(r.b)("p",null,"There are several reduction methods to generate a low-polygon version\nfrom a high-polygon model. Don't worry, the reduction does not modify\nthe original model."),Object(r.b)("p",null,"+------------------------+--------------------------------------+------+\n| Reduction Method       | Description                          | R    |\n|                        |                                      | educ |\n|                        |                                      | tion |\n|                        |                                      | V    |\n|                        |                                      | alue |\n+========================+======================================+======+\n| LodGene                | Collapses polygon vertices from the  | 0.0f |\n| rator.TriangleReductio | mesh until the reduction cost (=     | -    |\n| nMethod.COLLAPSE","_","COST | amount of ugly artifacts caused)     | 1.0f |\n|                        | exceeds the given threshold.         |      |\n+------------------------+--------------------------------------+------+\n| LodGe                  | Removes the given percentage of      | 0.0f |\n| nerator.TriangleReduct | polygons from the mesh.              | -    |\n| ionMethod.PROPORTIONAL |                                      | 1.0f |\n+------------------------+--------------------------------------+------+\n| L                      | Removes the given number of polygons | int  |\n| odGenerator.TriangleRe | from the mesh.                       | eger |\n| ductionMethod.CONSTANT |                                      |      |\n+------------------------+--------------------------------------+------+"),Object(r.b)("p",null,"If you don't know which to choose, experiment. For example start by\ntrying COLLAPSE","_","COST and .5f-.9f."),Object(r.b)("h1",{id:"generate-lod"},"Generate LOD"),Object(r.b)("p",null,"You must generate and cache several LODs for each mesh, ranging from\nmany to few polygons. The LOD generator algorithm attempts to collaps\nvertices automatically, while avoiding ugly artifacts. The LOD generator\ndoesn't generate new meshes, it only creates separate reduced index\nbuffers for the more highly reduced levels."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If you create geometries manually (3D models), use the SDK to\ngenerate LODs.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If you create geometries programmatically, generate LODs from your\nJava code."))),Object(r.b)("h2",{id:"generating-lods-in-the-sdk"},"Generating LODs in the SDK"),Object(r.b)("p",null,"The SDK contains a user-friendly interface to generate LODs for a model\n(.j3o file)."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Open the Projects or Files window.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Select the .j3o file in the ",Object(r.b)("inlineCode",{parentName:"p"},"Project Assets/Models")," directory.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Choose ",Object(r.b)("inlineCode",{parentName:"p"},"Window Edit in SceneExplorer")," if the SceneExplorer is not\nopen. Info about the selected model is now displayed in the\nSceneExplorer.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"RMB select the model in SceneExplorer. Choose the\n",Object(r.b)("inlineCode",{parentName:"p"},"Tools Generate Levels of Detail")," menu.\\\n",Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/advanced/jme-sdk-generate-lod-menu.png",alt:"The Tools Generate LOD context menu in the\nSceneExplorer"})))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"The ",Object(r.b)("inlineCode",{parentName:"p"},"Generate LOD")," settings wizard opens:\\\n",Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/advanced/jme-sdk-generate-lod-window.png",alt:"The Generate LOD settings\nwizard"})))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Choose a reduction method and reduction values for one or more\nlevels."),Object(r.b)("div",Object(a.a)({parentName:"li"},{className:"admonition admonition-note alert alert--secondary"}),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Enter higher reduction values for higher levels.")))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Click Finish to generate the LODs for this model."))),Object(r.b)("p",null,"The LODs are saved in the .j3o model file."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Choose ",Object(r.b)("inlineCode",{parentName:"p"},"Window Properties")," if the Properties window is not open. Choose\nthe generated LODs from the dropdown in the Properties window, and\nverify their quality in the SceneComposer."))),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/advanced/jme-sdk-generate-lod-full.png",alt:"jme-sdk-generate-lod-full.png"}))),Object(r.b)("h2",{id:"generating-lods-in-code"},"Generating LODs in Code"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"jme3tools.optimize.LodGenerator")," utility class helps you generate\nLODs for an arbitrary mesh (a Geometry object) programmatically from\nyour Java code. You create and bake one LodGenerator for each Geometry."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"LodGenerator lod = new LodGenerator(geometry);\nlod.bakeLods(reductionMethod,reductionValue);\n")),Object(r.b)("p",null,"The LODs are stored inside the Geometry object."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")," How to generate an LOD of myPrettyGeo's mesh with the same\nsettings as used in the SDK example above:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"LodGenerator lod = new LodGenerator(myPrettyGeo);\nlod.bakeLods(LodGenerator.TriangleReductionMethod.PROPORTIONAL,0.25, 0.5f, 0.75f);\n")),Object(r.b)("h1",{id:"activate-the-lod-control"},"Activate the LOD Control"),Object(r.b)("p",null,"After generating the LODs for the geometry, you create and add a\n",Object(r.b)("inlineCode",{parentName:"p"},"com.jme3.scene.control.LodControl")," to the geometry. Adding the\nLodControl activates the LOD optimizaton for this geometry."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"LodControl lc = new LodControl();\nmyPrettyGeo.addControl(lc);\nrootNode.attachChild(myPrettyGeo);\n")),Object(r.b)("p",null,"The LodControl internally gets the camera from the game's viewport to\ncalculate the distance to this geometry. Depending on the distance, the\nLodControl selects an appropriate level of detail, and passes more (or\nless) detailed vertex data to the renderer."),Object(r.b)("h1",{id:"impact-on-quality-and-speed"},"Impact on Quality and Speed"),Object(r.b)("p",null,"+------+--------------------+-------------+-------------+-------------+\n| L    | Purpose            | Distance    | Rendering   | Rendering   |\n| evel |                    |             | Speed       | Quality     |\n| nu   |                    |             |             |             |\n| mber |                    |             |             |             |\n+======+====================+=============+=============+=============+\n| L    | The original mesh  | Closest     | Slowest.    | Best.       |\n| evel | is used            |             |             |             |\n| 0    | automatically for  |             |             |             |\n|      | close-ups, and     |             |             |             |\n|      | it's the default   |             |             |             |\n|      | if no LODs have    |             |             |             |\n|      | been generated.    |             |             |             |\n+------+--------------------+-------------+-------------+-------------+\n| L    | If you generated   | The higher  | The higher  | The higher  |\n| evel | LODs, JME3 uses    | the level,\\ | the level,\\ | the level,\\ |\n| 1\\   | them automatically | the further | the faster. | the lower   |\n| L    | as soon as the     | away.       |             | the         |\n| evel | object moves into  |             |             | quality.    |\n| 2\\   | the background.    |             |             |             |\n| L    |                    |             |             |             |\n| evel |                    |             |             |             |\n| 3    |                    |             |             |             |\n+------+--------------------+-------------+-------------+-------------+"),Object(r.b)("h1",{id:"see-also"},"See also"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://hub.jmonkeyengine.org/t/brand-new-lod-generator/26341"}),"https://hub.jmonkeyengine.org/t/brand-new-lod-generator/26341"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/worldforge/ember/tree/master/src/components/ogre/lod"}),"https://github.com/worldforge/ember/tree/master/src/components/ogre/lod"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://www.melax.com/polychop"}),"http://www.melax.com/polychop"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://sajty.elementfx.com/progressivemesh/GSoC2012.pdf"}),"http://sajty.elementfx.com/progressivemesh/GSoC2012.pdf"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/terrain"}),"JME3 TerraMonkey Terrain")))))}d.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),d=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},b=function(e){var t=d(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=d(n),p=a,h=b["".concat(i,".").concat(p)]||b[p]||m[p]||r;return n?o.a.createElement(h,l({ref:t},s,{components:n})):o.a.createElement(h,l({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);