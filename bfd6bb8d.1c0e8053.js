(window.webpackJsonp=window.webpackJsonp||[]).push([[229],{368:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var o=n(1),r=n(9),a=(n(0),n(441)),i={},c={id:"jme3/advanced/softbody",title:"softbody",description:"::: {.warning}",source:"@site/docs/jme3/advanced/softbody.md",permalink:"/wikidemo/docs/jme3/advanced/softbody",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/softbody.md"},s=[{value:"How to :",id:"how-to-",children:[]},{value:"Ropes",id:"ropes",children:[{value:"Example",id:"example",children:[]},{value:"Anchors",id:"anchors",children:[]}]},{value:"Note",id:"note",children:[{value:"Example",id:"example-1",children:[]},{value:"Joints",id:"joints",children:[]}]},{value:"LinearJoint",id:"linearjoint",children:[]},{value:"AngularJoint",id:"angularjoint",children:[{value:"Examples",id:"examples",children:[]}]},{value:"LinearJoint",id:"linearjoint-1",children:[]},{value:"AngularJoint",id:"angularjoint-1",children:[]}],l={rightToc:s};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"::: {.warning}\nWriting in progress, checkout the forum for additional infos\n",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"http://hub.jmonkeyengine.org/t/bullet-softbody-in-jme3-1/33110"}),"http://hub.jmonkeyengine.org/t/bullet-softbody-in-jme3-1/33110"),"\n:::"),Object(a.b)("p",null,"what is a soft body ?"),Object(a.b)("p",null,"how a soft body is simulated ? ( node, link, face ; spring & damper )"),Object(a.b)("p",null,Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Soft_body_dynamics"}),"https://en.wikipedia.org/wiki/Soft_body_dynamics")),Object(a.b)("h1",{id:"getting-started"},"Getting Started"),Object(a.b)("p",null,"The dynamics libraries for softbody (.so , .dll ...) isn't (yet)\nprebuild for your platform so you have to checkout the entire project\nfrom GitHub then build the project."),Object(a.b)("h2",{id:"how-to-"},"How to :"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"checkout the project from\n",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Dokthar/jmonkeyengine/tree/bullet_SoftBody"}),"GitHub"),".")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"go into the file gradle.propeties and set the line :\nbuildNativeProjecte = true .")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"run the command : ./gradlew build")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"then build the sdk : ant -f ./sdk/ build-zip (or build the sdk\ninstaller)")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"create a new project and make sure you use the following libraries :\njme3-bullet-native and jme3-bullet (instead of jme3-jBullet)"))),Object(a.b)("h1",{id:"simple-example"},"Simple Example"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'public void simpleInitApp() {\n    softBodyAppState = new BulletSoftBodyAppState();\n    getStateManager().attach(softBodyAppState);\n\n    SoftBodyWorldInfo sbwi = softBodyAppState.getPhysicsSoftSpace().getWorldInfo();\n    sbwi.setGravity(Vector3f.UNIT_Y.mult(-0.981f));\n\n    Geometry bunny = new Geometry("b", StandfordBunny.getMesh().deepClone());\n    Material matN = new Material(assetManager, "Common/MatDefs/Misc/ShowNormals.j3md");\n    bunny.setMaterial(matN);\n    rootNode.attachChild(bunny);\n    bunny.addControl(new SoftBodyControl(false));\n\n    PhysicsSoftBody soft = bunny.getControl(SoftBodyControl.class);\n    soft.generateClusters(8);\n    soft.config().setDynamicFrictionCoef(0.8f);\n    soft.config().setPoseMatchingCoef(0.2f);\n\n    soft.config().setCollisionsFlags(PhysicsSoftBody.Config.CL_SS + PhysicsSoftBody.Config.CL_RS);\n\n    soft.setPose(false, true);\n    soft.setTotalMass(100, true);\n    soft.randomizeConstraints();\n    softBodyAppState.getPhysicsSoftSpace().add(soft);\n\n    Box floorMesh = new Box(100f, 0.5f, 100f);\n    Geometry floor = new Geometry("floor", floorMesh);\n    floor.move(0, -5f, 0);\n    floor.addControl(new RigidBodyControl(0));\n    softBodyAppState.getPhysicsSpace().add(floor);\n}\n')),Object(a.b)("h1",{id:"documentation"},"Documentation"),Object(a.b)("p",null,"soft mesh / surface"),Object(a.b)("p",null,"Cluster ?"),Object(a.b)("p",null,"(generate) bending constraint ?"),Object(a.b)("p",null,"config collision flag ?"),Object(a.b)("h2",{id:"ropes"},"Ropes"),Object(a.b)("p",null,"A rope can be created by creating a new SoftBody on a Mesh with\nMesh.Mode.Lines. More informations on creating ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"../../jme3/advanced/custom_meshes"}),"custom\nmeshes"),"."),Object(a.b)("h3",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"Mesh ropeMesh = new Mesh();\nVector3f[] vertices = {\n   new Vector3f(0.00f, 0, 0),\n   new Vector3f(0.50f, 0, 0),\n   new Vector3f(1.00f, 0, 0),\n   new Vector3f(1.50f, 0, 0),\n   new Vector3f(2.00f, 0, 0),\n   new Vector3f(2.50f, 0, 0),\n   new Vector3f(3.00f, 0, 0),\n   new Vector3f(3.50f, 0, 0),\n   new Vector3f(4.00f, 0, 0)};\nint[] indices = {\n   0, 1,\n   1, 2,\n   2, 3,\n   3, 4,\n   4, 5,\n   5, 6,\n   6, 7,\n   7, 8};\nropeMesh.setBuffer(VertexBuffer.Type.Position, 3, BufferUtils.createFloatBuffer(vertices));\nropeMesh.setBuffer(VertexBuffer.Type.Index, 2, BufferUtils.createIntBuffer(indices));\nropeMesh.setMode(Mesh.Mode.Lines);\nropeMesh.updateBound();\n")),Object(a.b)("p",null,"Once you have a Line Mesh, you can do as follow :"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'Geometry t = new Geometry("softRope", ropeMesh);\nt.move(0, 5, 0);\nt.addControl(new SoftBodyControl(false));\n')),Object(a.b)("h3",{id:"anchors"},"Anchors"),Object(a.b)("p",null,"An Anchors act like a weld between a SoftBody and a RigidBody. Adding a\nanchors to a soft body require to specify the SoftBody's node and the\nRigidBody to weld with."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"soft.appendAnchor(nodeId, rigid);\n")),Object(a.b)("h2",{id:"note"},"Note"),Object(a.b)("p",null,"An anchor bind a SoftBody's node (or Vertex) to a RigidBody, the node\nwill be attached to a RigidBody even if there are space in between."),Object(a.b)("p",null,"::: {.warning}\nAnchors are not yet Serialized\n:::"),Object(a.b)("h3",{id:"example-1"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'Geometry t = new Geometry("softRope", ropeMesh);\nBox box = new Box(1f, 1f, 1f);\nGeometry b = new Geometry("rigidBox", box);\nt.move(0, 5, 0);\nb.move(3f, 5, 0);\n\nt.addControl(new SoftBodyControl(false));\nsoft = t.getControl(SoftBodyControl.class);\nsoft.setMass(0, 0); // make the first ndoe static\n\nb.addControl(new RigidBodyControl(1));\nrigid = b.getControl(RigidBodyControl.class);\n\nsoftBodyAppState.getPhysicsSpace().add(rigid);\nsoftBodyAppState.getPhysicsSoftSpace().add(soft);\n\nsoft.appendAnchor(8, rigid); //where 8 is the last node of the rope\n')),Object(a.b)("p",null,"Anchors can be removed as below. Note that you have to keep the node and\nRigidBody bind with."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"soft.removeAnchor(8,rigid);\n")),Object(a.b)("h3",{id:"joints"},"Joints"),Object(a.b)("p",null,"Joints require SoftBodies with Clusters ( see generateClusters(int k) )."),Object(a.b)("p",null,"::: {.warning}\njoint don't use values pivotA & pivotB (not yet)\n:::"),Object(a.b)("h2",{id:"linearjoint"},"LinearJoint"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"public SoftLinearJoint(Vector3f position, PhysicsSoftBody nodeA, PhysicsRigidBody nodeB, Vector3f pivotA, Vector3f pivotB);\npublic SoftLinearJoint(Vector3f position, PhysicsSoftBody nodeA, PhysicsSoftBody nodeB, Vector3f pivotA, Vector3f pivotB);\n")),Object(a.b)("h2",{id:"angularjoint"},"AngularJoint"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"public SoftAngularJoint(Vector3f axis, PhysicsSoftBody nodeA, PhysicsRigidBody nodeB, Vector3f pivotA, Vector3f pivotB);\npublic SoftAngularJoint(Vector3f axis, PhysicsSoftBody nodeA, PhysicsSoftBody nodeB, Vector3f pivotA, Vector3f pivotB);\n")),Object(a.b)("h3",{id:"examples"},"Examples"),Object(a.b)("h2",{id:"linearjoint-1"},"LinearJoint"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'Box box = new Box(3f, 1f, 3f);\nGeometry b = new Geometry("rigidBox", box);\nb.move(0, 5f, 0);\nb.addControl(new RigidBodyControl(1));\nrigid = b.getControl(RigidBodyControl.class);\n\nTorus torus = new Torus(20, 10, 1f, 1.5f);\nGeometry t = new Geometry("softTorus", torus);\nt.addControl(new SoftBodyControl(true, false));\nsoft = t.getControl(SoftBodyControl.class);\nsoft.generateBendingConstraints(4, soft.material());\nsoft.generateClusters(4);\n\nsoftBodyAppState.getPhysicsSpace().add(rigid);\nsoftBodyAppState.getPhysicsSoftSpace().add(soft);\n\njoint = new SoftLinearJoint(Vector3f.UNIT_X, soft, rigid, new Vector3f(0f,2,0f), new Vector3f(0f,-2,0f));\nsoftBodyAppState.getPhysicsSoftSpace().add(joint);\n')),Object(a.b)("h2",{id:"angularjoint-1"},"AngularJoint"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'Box box = new Box(1f, 1f, 1f);\nGeometry b = new Geometry("rigidBox", box);\nb.move(0, 5f, 0);\nb.addControl(new RigidBodyControl(1));\nrigid = b.getControl(RigidBodyControl.class);\n\n Torus torus = new Torus(20, 10, 1f, 1.5f);\nGeometry t = new Geometry("softTorus", torus);\nt.addControl(new SoftBodyControl(true, false));\nsoft = t.getControl(SoftBodyControl.class);\nsoft.generateBendingConstraints(4, soft.material());\nsoft.generateClusters(4);\n\nsoftBodyAppState.getPhysicsSpace().add(rigid);\nsoftBodyAppState.getPhysicsSoftSpace().add(soft);\n\njoint = new SoftAngularJoint(Vector3f.UNIT_X, soft, rigid, new Vector3f(0,0,2), new Vector3f(0, 0, 2));\nsoftBodyAppState.getPhysicsSoftSpace().add(joint);\n')))}d.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return u}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),d=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},f=function(e){var t=d(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=d(n),p=o,u=f["".concat(i,".").concat(p)]||f[p]||b[p]||a;return n?r.a.createElement(u,c({ref:t},l,{components:n})):r.a.createElement(u,c({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);