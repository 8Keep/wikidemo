(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{254:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(1),r=n(9),i=(n(0),n(441)),c={},o={id:"jme3/advanced/bullet_multithreading",title:"bullet_multithreading",description:"Introduction",source:"@site/docs/jme3/advanced/bullet_multithreading.md",permalink:"/wikidemo/docs/jme3/advanced/bullet_multithreading",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/bullet_multithreading.md"},l=[],p={rightToc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"introduction"},"Introduction"),Object(i.b)("p",null,"Since bullet is not (yet) multithreaded or GPU accelerated, the jME3\nimplementation allows to run each physics space on a separate thread\nthat is executed in parallel to rendering."),Object(i.b)("h1",{id:"how-is-it-handled-in-jme3-and-bullet"},"How is it handled in jme3 and bullet?"),Object(i.b)("p",null,"A SimpleApplication with a BulletAppState allows setting the threading\ntype via"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"setThreadingType(ThreadingType type);\n\nwhere ThreadingType can be either SEQUENTIAL or PARALLEL. By default, it's SEQUENTIAL.\n")),Object(i.b)("p",null,"You can activate PARALLEL threading in the simpleInitApp() method:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"bulletAppState = new BulletAppState();\nbulletAppState.setThreadingType(BulletAppState.ThreadingType.PARALLEL);\nstateManager.attach(bulletAppState);\n")),Object(i.b)("p",null,"Now the physics update happens in parallel to render(), that is, after\nthe user's changes in the update() call have been applied. During\nupdate() the physics update loop pauses. This way the loop logic is\nstill maintained: the user can set and change values in physics and\nscenegraph objects before render() and physicsUpdate() are called in\nparallel. This allows you to use physics methods in update() as if it\nwas single-threaded."),Object(i.b)("p",null,"+-----------------------------------+-----------------------------------+\n| PARALLEL                          | SEQUENTIAL                        |\n+===================================+===================================+\n| 1.  update(), 2. render() and     | 1.  update(), 2. render(), 3.     |\n|     physics update().             |     physics update().             |\n+-----------------------------------+-----------------------------------+\n| Physics Debug View is rendered    | Physics Debug View is rendered    |\n| inaccurately (out of sync)        | accurately.                       |\n+-----------------------------------+-----------------------------------+"),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"You can add more physics spaces by using multiple PARALLEL\nbulletAppStates. You would do that if you have sets physical objects\nthat never collide (for example, underground bolders and flying cannon\nballs above ground), so you put those into separate physics spaces,\nwhich improves performances (less collisions to check!)."))))}s.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},d=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),b=a,h=d["".concat(c,".").concat(b)]||d[b]||u[b]||i;return n?r.a.createElement(h,o({ref:t},p,{components:n})):r.a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=b;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var p=2;p<i;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);