(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{274:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return l})),t.d(a,"metadata",(function(){return i})),t.d(a,"rightToc",(function(){return s})),t.d(a,"default",(function(){return p}));var n=t(1),r=t(9),o=(t(0),t(441)),l={},i={id:"jme3/intermediate/how_to_use_materials",title:"how_to_use_materials",description:"A Geometry (mesh) is just the shape of the object. jMonkeyEngine cannot",source:"@site/docs/jme3/intermediate/how_to_use_materials.md",permalink:"/wikidemo/docs/jme3/intermediate/how_to_use_materials",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/intermediate/how_to_use_materials.md",sidebar:"main",previous:{title:"terminology",permalink:"/wikidemo/docs/jme3/terminology"},next:{title:"transparency_sorting",permalink:"/wikidemo/docs/jme3/intermediate/transparency_sorting"}},s=[{value:"Colored",id:"colored",children:[]},{value:"Textured",id:"textured",children:[]}],c={rightToc:s};function p(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A Geometry (mesh) is just the shape of the object. jMonkeyEngine cannot\nrender a shape without knowing anything about its surface properties.\nYou need to apply a color or texture to the surface of your Geometries\nto make them visible. In jMonkeyEngine, colors and textures are\nrepresented as Material objects. (An alternative would also be to load a\nmodel that includes materials generated by a mesh editor, such as\nBlender.)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"All Geometries must have Materials that defines color or texture.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Each Material is based on a Material Definition file.\\\nExamples of included Material Definitions: Lighting.j3md,\nUnshaded.j3md"))),Object(o.b)("p",null,"You want to make the most of your 3D models by specifying good looking\nmaterial parameters. The developers must be in contact with the graphic\ndesigners regarding which of the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/materials_overview"}),"Material\nproperties")," they intend to\nuse in their 3D models. You must have an understanding what ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/terminology.xml#materialstextures"}),"texture\nmaps")," are, to be able to\nuse texture-mapped materials."),Object(o.b)("p",null,"::: {.important}\nDon't forget to add a ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/light_and_shadow"}),"Light\nSource"),' to the scene! All\nMaterials (except "Unshaded ones) are ',Object(o.b)("strong",{parentName:"p"},"invisible")," without a light\nsource.\n:::"),Object(o.b)("p",null,"If you want more advanced background info: You can learn more about\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/material_definitions"}),"Material Definitions")," in\ngeneral here. You can find the full list of Material Parameters in the\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/materials_overview"}),"Material Definitions\nProperties")," overview. The\nfollowing sections introduce you to the most commonly used cases. You\ntypically initialize Material objects in the ",Object(o.b)("inlineCode",{parentName:"p"},"simpleInitApp()")," method,\nand configure them using the setters described here. Then load the\nMaterials using ",Object(o.b)("inlineCode",{parentName:"p"},"myGeometry.setMaterial(mat)"),"."),Object(o.b)("h1",{id:"code-sample"},"Code Sample"),Object(o.b)("p",null,"The following samples assume that you loaded a Geometry called\nmyGeometry, and want to assign a material to it."),Object(o.b)("p",null,"This example creates a simple unshaded blue material: Use it for\nabstract objects that need no illumination/shading, e.g. sky, GUI and\nbillboard nodes, tiles/cards, or toons."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'Spatial myGeometry = assetManager.loadModel("Models/Teapot/Teapot.j3o");\nMaterial mat = new Material(assetManager,  // Create new material and...\n    "Common/MatDefs/Misc/Unshaded.j3md");  // ... specify .j3md file to use (unshaded).\nmat.setColor("Color", ColorRGBA.Blue);     // Set some parameters, e.g. blue.\nmyGeometry.setMaterial(mat);               // Use new material on this Geometry.\n')),Object(o.b)("p",null,"This example creates a\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://en.wikipedia.org/wiki/Phong_reflection_model"}),"Phong"),"-illuminated\nblue material. Use it for illuminated, naturalistic objects, such as\ncharacters, buildings, terrains, vehicles. Needs a light source,\notherwise it will be invisible."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'Spatial myGeometry = assetManager.loadModel("Models/Teapot/Teapot.j3o");\nMaterial mat = new Material(assetManager,  // Create new material and...\n    "Common/MatDefs/Light/Lighting.j3md"); // ... specify .j3md file to use (illuminated).\nmat.setBoolean("UseMaterialColors",true);  // Set some parameters, e.g. blue.\nmat.setColor("Ambient", ColorRGBA.Blue);   // ... color of this object\nmat.setColor("Diffuse", ColorRGBA.Blue);   // ... color of light being reflected\nmyGeometry.setMaterial(mat);               // Use new material on this Geometry.\n')),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Do you reuse Materials? You can ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../../sdk/material_editing"}),"store Material properties in a .j3m\nfile")," and load all properties in one\nline using"),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'myGeometry.setMaterial( assetManager.loadMaterial("Materials/myMaterial.j3m"));\n')))),Object(o.b)("h1",{id:"colored-or-textured"},"Colored or Textured"),Object(o.b)("p",null,"Every Material must have at least Material Colors or Textures. Some\noptional material features also require a combination of both."),Object(o.b)("h2",{id:"colored"},"Colored"),Object(o.b)("p",null,"To give an unshaded material a color:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Specify the color property"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setColor("Color", ColorRGBA.Blue); // with Unshaded.j3md\n')))),Object(o.b)("p",null,"To give an Phong-illuminated material a color:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Activate material colors:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setBoolean("UseMaterialColors",true); // with Lighting.j3md\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Specify at least Diffuse and Ambient colors. Set both to the same\ncolor in the standard case."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setColor("Diffuse", ColorRGBA.Blue ); // with Lighting.j3md\nmat.setColor("Ambient", ColorRGBA.Blue ); // with Lighting.j3md\n')))),Object(o.b)("h2",{id:"textured"},"Textured"),Object(o.b)("p",null,"To give an unshaded material a texture:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Specify at least a ColorMap:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setTexture("ColorMap", assetManager.loadTexture("Textures/monkey.png")); // with Unshaded.j3md\n')))),Object(o.b)("p",null,"To give a Phong-illuminated material a texture:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Specify at least the DiffuseMap texture:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setTexture("DiffuseMap", assetManager.loadTexture("Textures/wood_diffuse.png")); // with Lighting.j3md\n')))),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"It can happen that you load textures at different scales, for example,\nyour blades of grass may look as big as twigs, or your spaceship's heat\ntiles may look like small bathroom tiles. Then you need to adjust the\ntexture scale, either bigger (",">"," 1.0f) or smaller (\\< 1.0f)."),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"geometry.scaleTextureCoordinates(new Vector2f(0.5f, 0.5f));\n")))),Object(o.b)("p",null,"All other Texture Maps or Material settings are optional. If used\nskillfully, they make your model look really spiffy."),Object(o.b)("h1",{id:"optional-bumpy"},"(Optional) Bumpy"),Object(o.b)("p",null,"A NormalMap (also called BumpMap) is an extra colored texture that\ndescribes the fine bumpy details of the Material surface. E.g. fine\ncracks, pores, creases, notches. Using a BumpMap is more efficient than\ntrying to shape the mesh to be bumpy."),Object(o.b)("p",null,"To add a BumpMap (this only makes sense for illuminated Materials):"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Generate normal vectors information for the Mesh (not for the\nGeometry!) using ",Object(o.b)("inlineCode",{parentName:"p"},"com.jme3.util.TangentBinormalGenerator"),"."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"TangentBinormalGenerator.generate(mesh);\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Specify the ",Object(o.b)("inlineCode",{parentName:"p"},"NormalMap")," texture for the Material."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setTexture("NormalMap", assetManager.loadTexture("Textures/wood_normal.png")); // with Lighting.j3md\n')))),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://en.wikipedia.org/wiki/Bump_mapping"}),"Learn more about creating and using NormalMaps and BumpMaps\nhere.")),Object(o.b)("h1",{id:"optional-shiny"},"(Optional) Shiny"),Object(o.b)("p",null,"To activate Shininess (this only makes sense for illuminated Materials):"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Specify the ",Object(o.b)("inlineCode",{parentName:"p"},"Shininess")," intensity the Material.\\\nShininess is a float value between 1 (rough surface with blurry\nshininess) and 128 (very smooth surface with focused shininess)"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setFloat("Shininess", 5f);\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Activate material colors:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setBoolean("UseMaterialColors",true);\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Specify the ",Object(o.b)("inlineCode",{parentName:"p"},"Specular")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Diffuse")," colors of the shiny spot.\\\nTypically you set Specular to the ColorRGBA value of the light\nsource, often RGBA.White."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setColor("Specular",ColorRGBA.White);\nmat.setColor("Diffuse",ColorRGBA.White);\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"(Optional) Specify a ",Object(o.b)("inlineCode",{parentName:"p"},"SpecularMap")," texture.\\\nYou optionally hand-draw this grayscale texture to outline in detail\nwhere the surface should be more shiny (whiter grays) and where less\n(blacker grays). If you don't supply a SpecularMap, the whole\nmaterial is shiny everywhere."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setTexture("SpecularMap", assetManager.loadTexture("Textures/metal_spec.png")); // with Lighting.j3md\n')))),Object(o.b)("p",null,"To deactivate shininess"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Set the ",Object(o.b)("inlineCode",{parentName:"p"},"Specular")," color to ",Object(o.b)("inlineCode",{parentName:"p"},"ColorRGBA.Black"),". Do not just set\n",Object(o.b)("inlineCode",{parentName:"p"},"Shininess")," to 0."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setColor("Specular",ColorRGBA.Black);\n')))),Object(o.b)("h1",{id:"optional-glow"},"(Optional) Glow"),Object(o.b)("p",null,"To activate glow:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Add one ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/bloom_and_glow"}),"BloomFilter\nPostProcessor")," in your\nsimpleInitApp() method (only once, it is used by all glowing\nobjects)."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"FilterPostProcessor fpp=new FilterPostProcessor(assetManager);\nBloomFilter bloom = new BloomFilter(BloomFilter.GlowMode.Objects);\nfpp.addFilter(bloom);\nviewPort.addProcessor(fpp);\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Specify a ",Object(o.b)("inlineCode",{parentName:"p"},"Glow")," color.\\\nA ColorRGBA value of your choice, e.g. choose a warm or cold color\nfor different effects, or white for a neutral glow."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setColor("GlowColor",ColorRGBA.White);\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"(Optional) Specify a ",Object(o.b)("inlineCode",{parentName:"p"},"GlowMap")," texture.\\\nThis texture outlines in detail where the DiffuseMap texture glows.\nIf you don't supply a GlowMap, the whole material glows everwhere."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setTexture("GlowMap", assetManager.loadTexture("Textures/alien_glow.png"));\n')))),Object(o.b)("p",null,"To deactivate glow:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Set the ",Object(o.b)("inlineCode",{parentName:"p"},"Glow")," color to ",Object(o.b)("inlineCode",{parentName:"p"},"ColorRGBA.Black"),"."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setColor("GlowColor", ColorRGBA.Black);\n')))),Object(o.b)("p",null,"Learn more about ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/bloom_and_glow"}),"Bloom and\nGlow"),"."),Object(o.b)("h1",{id:"optional-transparent"},"(Optional) Transparent"),Object(o.b)("p",null,"Most Material Definitions support an alpha channel to make a model\nopaque, translucent, or transparent."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Alpha=1.0f makes the color opaque (default),")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Alpha=0.0f make the color fully transparent")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Alpha between 0f and 1f makes the color more or less translucent."))),Object(o.b)("p",null,"To make a Geometry transparent or translucent:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Specify which areas you want to be transparent or translucent by\nspecifying the alpha channel:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"(For colored Materials) In any RGBA color, the first three are\nRed-Green-Blue, and the last float is the Alpha channel. For\nexample, to replace ColorRGBA.Red with a translucent red:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setColor("Color", new ColorRGBA(1,0,0,0.5f));\n'))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"(For textured Materials) Supply an AlphaMap that outlines which\nareas are transparent."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setTexture("AlphaMap", assetManager.loadTexture("Textures/window_alpha.png"));\n'))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"(For textured Materials) If the DiffuseMap has an alpha channel,\nuse:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setBoolean("UseAlpha",true);\n'))))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Specify BlendMode Alpha for the Material."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"mat.getAdditionalRenderState().setBlendMode(BlendMode.Alpha);\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Put the Geometry (not the Material!) in the appropriate render queue\nbucket.\\"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Objects in the translucent bucket (e.g. particles) are not\naffected by SceneProcessors (e.g. shadows)."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"geo.setQueueBucket(Bucket.Translucent);\n"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Objects in the transparent bucket (e.g. foliage) are affected by\nSceneProcessors (e.g. shadows)."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"geo.setQueueBucket(Bucket.Transparent);\n"))))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"(Optional) Specify other material settings."))),Object(o.b)("p",null,"+----------------------+----------------------+-----------------------+\n| Standard Material    | Description          | Example               |\n| Transparency         |                      |                       |\n+======================+======================+=======================+\n| getAdditionalRe      | This is the default, | Use for all opaque    |\n| nderState().setBlend | no transparency.     | objects like walls,   |\n| Mode(BlendMode.Off); |                      | floors, people...     |\n+----------------------+----------------------+-----------------------+\n| getAdditionalRend    | Interpolates the     | This is the most      |\n| erState().setBlendMo | background pixel     | commonly used         |\n| de(BlendMode.Alpha); | with the current     | BlendMode for         |\n|                      | pixel by using the   | transparency and      |\n|                      | current pixel's      | translucency: Frosted |\n|                      | alpha.               | window panes, ice,    |\n|                      |                      | glass, alpha-blended  |\n|                      |                      | vegetation            |\n|                      |                      | textures...           |\n+----------------------+----------------------+-----------------------+\n| getAddit             | Disables writing of  | Deactivate this on    |\n| ionalRenderState().s | the pixel's depth    | Materials if you      |\n| etDepthWrite(false); | value to the depth   | expect two or more    |\n|                      | buffer.              | tr                    |\n|                      |                      | ansparent/translucent |\n|                      |                      | objects to be         |\n|                      |                      | obscuring one         |\n|                      |                      | another, but you want |\n|                      |                      | to see through both.  |\n+----------------------+----------------------+-----------------------+\n| getAdd               | Enables Alpha        | Activate Alpha        |\n| itionalRenderState() | Testing and uses an  | Testing for           |\n| .setAlphaTest(true)\\ | A                    | (partially)           |\n| getAdditi            | lphaDiscardThreshold | ",Object(o.b)("strong",{parentName:"p"},"transparent"),"       |\n| onalRenderState().se | as alpha fall-off    | objects such as       |\n| tAlphaFallOff(0.5f); | value. This means    | foliage, hair, etc.\\  |\n|                      | that gradients in    | Deactivate Alpha      |\n|                      | the AlphaMap are no  | Testing for gradually |\n|                      | longer interpreted   | ",Object(o.b)("strong",{parentName:"p"},"translucent"),"       |\n|                      | as soft              | objects, such as      |\n|                      | translucency, but    | colored glass, smoked |\n|                      | parts of the texture | glass, ghosts.        |\n|                      | become either fully  |                       |\n|                      | opaque or fully      |                       |\n|                      | transparent. Only    |                       |\n|                      | pixels above the     |                       |\n|                      | alpha threshold      |                       |\n|                      | (e.g. 0.5f) are      |                       |\n|                      | rendered.            |                       |\n+----------------------+----------------------+-----------------------+"),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"It is possible to load a DiffuseMap texture that has an Alpha channel,\nand combine it with an underlying Material Color."),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'mat.setBoolean("UseAlpha",true);\n')),Object(o.b)("p",{parentName:"div"},"The Material Color bleeds through the transparent areas of the top-layer\nDiffuseMap texture. In this case you do not need BlendMode Alpha --\nbecause it's not the whole Material that is transparent, but only one of\nthe texture layers. You use this bleed-through effect, for example, to\ngenerate differently colored uniforms, animals, or plants, where each\nMaterial uses the same \"template DiffuseMap texture but combines it with\na different color."))),Object(o.b)("h1",{id:"optional-wireframe"},"(Optional) Wireframe"),Object(o.b)("p",null,"Additionally to the above settings, you can switch off and on a\nwireframe rendering of the mesh. Since a wireframe has no faces, this\ntemporarily disables the other Texture Maps."),Object(o.b)("p",null,'+----------------------+----------------------+-----------------------+\n| Material Property    | Description          | Example               |\n+======================+======================+=======================+\n| getAdd               | Switch to showing    | Use wireframes to     |\n| itionalRenderState() | the (textured)       | debug meshes, or for  |\n| .setWireframe(true); | Material in          | a "matrix or          |\n|                      | wireframe mode. The  | "holodeck effect.     |\n|                      | wireframe optionally |                       |\n|                      | uses the Material\'s  |                       |\n|                      | ',Object(o.b)("inlineCode",{parentName:"p"},"Color")," value.       |                       |\n+----------------------+----------------------+-----------------------+\n| getA                 | When in wireframe    |                       |\n| dditionalRenderState | mode, sets the line  |                       |\n| ().setLineWidth(2f); | width of the mesh.   |                       |\n+----------------------+----------------------+-----------------------+"))}p.isMDXComponent=!0},441:function(e,a,t){"use strict";t.d(a,"a",(function(){return b})),t.d(a,"b",(function(){return u}));var n=t(0),r=t.n(n);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),p=function(e){var a=r.a.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):i({},a,{},e)),t},b=function(e){var a=p(e.components);return r.a.createElement(c.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},d=Object(n.forwardRef)((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=p(t),d=n,u=b["".concat(l,".").concat(d)]||b[d]||m[d]||o;return t?r.a.createElement(u,i({ref:a},c,{components:t})):r.a.createElement(u,i({ref:a},c))}));function u(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);