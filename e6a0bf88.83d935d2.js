(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{413:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(9),i=(n(0),n(441)),o={},s={id:"jme3/contributions/entitysystem/terms",title:"terms",description:"Object Oriented Programming",source:"@site/docs/jme3/contributions/entitysystem/terms.md",permalink:"/wikidemo/docs/jme3/contributions/entitysystem/terms",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/contributions/entitysystem/terms.md"},c=[{value:"Why so much people in java world get this wrong at first?",id:"why-so-much-people-in-java-world-get-this-wrong-at-first",children:[]}],d={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"object-oriented-programming"},"Object Oriented Programming"),Object(i.b)("p",null,'Object-oriented programming (OOP) is a programming paradigm that\nrepresents concepts as "objects" that have data fields (attributes that\ndescribe the object) and associated procedures known as methods.'),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://en.wikipedia.org/wiki/Object-oriented_programming"}),"http://en.wikipedia.org/wiki/Object-oriented_programming")),Object(i.b)("h1",{id:"data-oriented-programming"},"Data Oriented Programming"),Object(i.b)("p",null,"[","This just not exist","]"),Object(i.b)("p",null,"If you use Data-oriented","_","languages, you can call it Data Oriented\nProgramming! You may talking about ",Object(i.b)("strong",{parentName:"p"},"Data Oriented Design\n(Architecture)")," instead"),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://stackoverflow.com/questions/4122696/what-is-data-oriented-programming"}),"http://stackoverflow.com/questions/4122696/what-is-data-oriented-programming")),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://en.wikipedia.org/wiki/List_of_programming_languages_by_category#Data-oriented_languages"}),"http://en.wikipedia.org/wiki/List_of_programming_languages_by_category#Data-oriented_languages")),Object(i.b)("h1",{id:"component-oriented-programming"},"Component Oriented Programming"),Object(i.b)("p",null,'This is "the rising force" we are talking about!'),Object(i.b)("p",null,'It\'s a "rather new" programming paradigm. Despite of its name and even\nthe fact it\'s was born from the marriage of "Component base\narchitecture" and "Data oriented architecture", but something different.'),Object(i.b)("h1",{id:"cops-entity-system-in-oop-java"},"COP's Entity System in OOP java"),Object(i.b)("p",null,"Entity System in turn is the Core and fundamental and most obvious\nimplementation design of COP!!!"),Object(i.b)("p",null,"In fact the implementation detail of Entity system is various, some may\nresembling database core, some may have troubles with OOP\nincompatibility, some may appear to get all the good of Functional\nlanguage..."),Object(i.b)("p",null,"but note that Entity System really stand on its own terminology on this\nsingle page: We are talking about the ES within COP, but implemented by\nan pure OOP like Java."),Object(i.b)("h1",{id:"data-driven-programming"},"Data driven programming:"),Object(i.b)("p",null,'You may refer to this "Data driven programming" incorrectly in this ES\ntopic, you may talking about: ',Object(i.b)("strong",{parentName:"p"},"Data driven design")," insted"),Object(i.b)("p",null,"In computer programming, data-driven programming is a programming\nparadigm in which the program statements describe the data to be matched\nand the processing required rather than defining a sequence of steps to\nbe taken"),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://en.wikipedia.org/wiki/Data-driven_programming"}),"http://en.wikipedia.org/wiki/Data-driven_programming")),Object(i.b)("h1",{id:"data-driven-solution-architecture"},"Data driven solution (architecture):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"  Data driven, on the other hand, can mean a few different things. A common usage is one you may already be using. For example. abstracting something like:\n  if( a == 0 ) doFoo()\n  else if( a == 1 ) doBar()\n  into:\n  Command[] commands\u2026.\n  commands[a].doIt()\n  \u2026is a data-driven design.\n\n  Data driven solution (architecture) is a software solution (architecture) where everything is from data and to data, data who decide!\n\n  http://www.enterpriseappstoday.com/business-intelligence/3-rules-for-data-driven-architecture.html\n\n  It has the \u201cdata force\u201d, that\u2019s why it call \u2018driven\u2019, the force sometime a \u201cgenerative force\u201d!\n")),Object(i.b)("h1",{id:"data-oriented-design-architecture"},"Data oriented (design) architecture:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"  Data oriented design is an approach that extracts the operations on the data from the \u201cobjects\u201d and flattens the things that they need to run in order to be cache friendly. According to the literature (I got my first exposure in Game Engine Gems 2, Chapter 15), in many cases it actually simplifies the code.\n")),Object(i.b)("p",null,"From atomix 's overview:"),Object(i.b)("p",null,'Data oriented architecture is focus in Data arrangement and\nprocess(delay of data and the dataflow) and everything is Data, with a\nrepository! It have more aspects than Data driven architecture and not\ntalking about "the force of generative data".'),Object(i.b)("p",null,"In hardware level, data oriented appear in structure and operations of\nchip set, when input and output are carefullly design to get batch/cache\nefficient."),Object(i.b)("p",null,"In software level, programming language such as Java: Data oriented\narchitecture appear as we save everything in a big repository\n(database... or file repository) then retrive it to do operations.\nImportant note, the consideration that everything is Data is very\nimportant. We can load everything as data, code, configs, signal from\nnetwork, service... Second the existence of the repository is also\nimportant, as it the premise of other concept about ports, dataflow,\nstream, event, process, monitoring etc..."),Object(i.b)("p",null,"Compare to service oriented, it care more about the delay of data and\nthe dataflow, not the operation. Compare to object oriented, it just\nonly have the data concept, not object, instance or what ever..."),Object(i.b)("p",null,"Data oriented architecture usually envolve every generic way to descible\ndata, common via XML. They also usually use a data oriented architecture\nas the base of other. As seen in hardware level, the signal in send in\nCPU as the repository, via ports, in a stream, trigger interrupt as\nEvent,... The same in a software level system, in Java world such as\nOracle's Buisiness Process Management (BPM). They essentially use XML to\ndescrible everything and consider everything is Data, also have concept\nof Ports, Stream, Event, Process..."),Object(i.b)("p",null,"So normally Data oriented architecture go along with Data driven... but\nthey are two different thing!"),Object(i.b)("h2",{id:"why-so-much-people-in-java-world-get-this-wrong-at-first"},"Why so much people in java world get this wrong at first?"),Object(i.b)("p",null,'But of course Oracle solution are much more complex than a single\nchipset, as it also envolve EJB, SOAP... with also an candidate for\n"Data driven architecture"... That\'s . But EJB and SOAP are essential\npieces of BPM "Data oriented architecture"!!!'))}p.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),p=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},l=function(e){var t=p(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),l=p(n),u=a,h=l["".concat(o,".").concat(u)]||l[u]||m[u]||i;return n?r.a.createElement(h,s({ref:t},d,{components:n})):r.a.createElement(h,s({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);