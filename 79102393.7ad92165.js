(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{283:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return r})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return m}));var a=t(1),o=t(9),i=(t(0),t(441)),l={},r={id:"jme3/beginner/hello_animation",title:"hello_animation",description:"Previous: [Hello Material](../../jme3/beginner/hello_material),",source:"@site/docs/jme3/beginner/hello_animation.md",permalink:"/wikidemo/docs/jme3/beginner/hello_animation",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/beginner/hello_animation.md",sidebar:"main",previous:{title:"hello_material",permalink:"/wikidemo/docs/jme3/beginner/hello_material"},next:{title:"hello_picking",permalink:"/wikidemo/docs/jme3/beginner/hello_picking"}},c=[{value:"Exercise 1: Two Animations",id:"exercise-1-two-animations",children:[]},{value:"Exercise 2: Revealing the Skeleton (1)",id:"exercise-2-revealing-the-skeleton-1",children:[]},{value:"Exercise 3: Revealing the Skeleton (2)",id:"exercise-3-revealing-the-skeleton-2",children:[]}],s={rightToc:c};function m(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Previous: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/beginner/hello_material"}),"Hello Material"),",\nNext: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/beginner/hello_picking"}),"Hello Picking")),Object(i.b)("p",null,"This tutorial shows how to add an animation controller and channels, and\nhow to respond to user input by triggering an animation in a loaded\nmodel."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/beginner/beginner-animation.png",alt:"beginner-animation.png"}))),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"To use the example assets in a new jMonkeyEngine SDK project, RMB select\nyour project, select ","[Properties ",">"," Libraries]","{.menuchoice} and in the\n",Object(i.b)("inlineCode",{parentName:"p"},"Compile")," tab press ",Object(i.b)("inlineCode",{parentName:"p"},"Add Library")," and add the ",Object(i.b)("inlineCode",{parentName:"p"},"jme3-test-data")," library."))),Object(i.b)("h1",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'package jme3test.helloworld;\n\nimport com.jme3.animation.AnimChannel;\nimport com.jme3.animation.AnimControl;\nimport com.jme3.animation.AnimEventListener;\nimport com.jme3.animation.LoopMode;\nimport com.jme3.app.SimpleApplication;\nimport com.jme3.input.KeyInput;\nimport com.jme3.input.controls.ActionListener;\nimport com.jme3.input.controls.KeyTrigger;\nimport com.jme3.light.DirectionalLight;\nimport com.jme3.math.ColorRGBA;\nimport com.jme3.math.Vector3f;\nimport com.jme3.scene.Node;\n\n/** Sample 7 - how to load an OgreXML model and play an animation,\n * using channels, a controller, and an AnimEventListener. */\npublic class HelloAnimation extends SimpleApplication\n  implements AnimEventListener {\n  private AnimChannel channel;\n  private AnimControl control;\n  Node player;\n  public static void main(String[] args) {\n    HelloAnimation app = new HelloAnimation();\n    app.start();\n  }\n\n  @Override\n  public void simpleInitApp() {\n    viewPort.setBackgroundColor(ColorRGBA.LightGray);\n    initKeys();\n    DirectionalLight dl = new DirectionalLight();\n    dl.setDirection(new Vector3f(-0.1f, -1f, -1).normalizeLocal());\n    rootNode.addLight(dl);\n    player = (Node) assetManager.loadModel("Models/Oto/Oto.mesh.xml");\n    player.setLocalScale(0.5f);\n    rootNode.attachChild(player);\n    control = player.getControl(AnimControl.class);\n    control.addListener(this);\n    channel = control.createChannel();\n    channel.setAnim("stand");\n  }\n\n  public void onAnimCycleDone(AnimControl control, AnimChannel channel, String animName) {\n    if (animName.equals("Walk")) {\n      channel.setAnim("stand", 0.50f);\n      channel.setLoopMode(LoopMode.DontLoop);\n      channel.setSpeed(1f);\n    }\n  }\n\n  public void onAnimChange(AnimControl control, AnimChannel channel, String animName) {\n    // unused\n  }\n\n  /** Custom Keybinding: Map named actions to inputs. */\n  private void initKeys() {\n    inputManager.addMapping("Walk", new KeyTrigger(KeyInput.KEY_SPACE));\n    inputManager.addListener(actionListener, "Walk");\n  }\n  private ActionListener actionListener = new ActionListener() {\n    public void onAction(String name, boolean keyPressed, float tpf) {\n      if (name.equals("Walk") && !keyPressed) {\n        if (!channel.getAnimationName().equals("Walk")) {\n          channel.setAnim("Walk", 0.50f);\n          channel.setLoopMode(LoopMode.Loop);\n        }\n      }\n    }\n  };\n}\n')),Object(i.b)("h1",{id:"creating-and-loading-animated-models"},"Creating and Loading Animated Models"),Object(i.b)("p",null,"You create animated models with a tool such as Blender. Take some time\nand learn how to create your own models in these ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://www.blender.org/education-help/tutorials/animation/"}),"Blender Animation\nTutorials"),".\nFor now, download and use a free model, such as the one included here as\nan example (",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/tree/master/jme3-testdata/src/main/resources/Models/Oto/"}),"Oto\nGolem"),",\nand\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/tree/master/jme3-testdata/src/main/resources/Models/Ninja/"}),"Ninja"),")."),Object(i.b)("p",null,"Loading an animated model is pretty straight-forward, just as you have\nlearned in the previous chapters. Animated Ogre models come as a set of\nfiles: The model is in ",Object(i.b)("inlineCode",{parentName:"p"},"Oto.mesh.xml"),", and the animation details are in\n",Object(i.b)("inlineCode",{parentName:"p"},"Oto.skeleton.xml"),", plus the usual files for materials and textures.\nCheck that all files of the model are together in the same ",Object(i.b)("inlineCode",{parentName:"p"},"Model"),"\nsubdirectory."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'  public void simpleInitApp() {\n    /* Displaying the model requires a light source */\n    DirectionalLight dl = new DirectionalLight();\n    dl.setDirection(new Vector3f(-0.1f, -1f, -1).normalizeLocal());\n    rootNode.addLight(dl);\n    /* load and attach the model as usual */\n    player = assetManager.loadModel("Models/Oto/Oto.mesh.xml");\n    player.setLocalScale(0.5f); // resize\n    rootNode.attachChild(player);\n    ...\n    }\n')),Object(i.b)("p",null,"Don't forget to add a light source to make the material visible."),Object(i.b)("h1",{id:"animation-controller-and-channel"},"Animation Controller and Channel"),Object(i.b)("p",null,"After you load the animated model, you register it to the Animation\nController."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The controller object gives you access to the available animation\nsequences.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The controller can have several channels, each channel can run one\nanimation sequence at a time.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"To run several sequences, you create several channels, and set them\neach to their animation."))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'  private AnimChannel channel;\n  private AnimControl control;\n\n  public void simpleInitApp() {\n    ...\n    /* Load the animation controls, listen to animation events,\n     * create an animation channel, and bring the model in its default position.  */\n    control = player.getControl(AnimControl.class);\n    control.addListener(this);\n    channel = control.createChannel();\n    channel.setAnim("stand");\n    ...\n')),Object(i.b)("p",null,"This line of code will return NULL if the AnimControl is not in the main\nnode of your model."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"control = player.getControl(AnimControl.class);\n")),Object(i.b)("p",null,'To check this, RMB select your model and click "Edit in SceneComposer"\nif the models file extension is .j3o, or "View" if not. You can then see\nthe tree for the model so you can locate the node the control resides\nin. You can access the subnode with the following code.'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'player.getChild("Subnode").getControl(AnimControl.class);\n')),Object(i.b)("p",null,"::: {.note}\nIn response to a question about animations on different channels\ninterefering with each other, ",Object(i.b)("strong",{parentName:"p"},"Nehon on the jME forum\n",Object(i.b)("a",Object(a.a)({parentName:"strong"},{href:"http://jmonkeyengine.org/groups/general-2/forum/topic/helloanimation-animations-seem-to-be-clashing/#post-180994"}),"wrote"),",")),Object(i.b)("p",null,'"You have to consider channels as part of the skeleton that are\nanimated. The default behavior is to use the whole skeleton for a\nchannel. In your example the first channel plays the walk anim, then the\nsecond channel plays the dodge animation. Arms and feet are probably not\naffected by the doge animation so you can see the walk anim for them,\nbut the rest of the body plays the dodge animation.'),Object(i.b)("p",null,"Usually multiple channels are used to animate different part of the\nbody. For example you create one channel for the lower part of the body\nand one for the upper part. This allow you to play a walk animation with\nthe lower part and for example a shoot animation with the upper part.\nThis way your character can walk while shooting."),Object(i.b)("p",null,"In your case, where you want animations to chain for the whole skeleton,\nyou just have to use one channel.\n:::"),Object(i.b)("h1",{id:"responding-to-animation-events"},"Responding to Animation Events"),Object(i.b)("p",null,"Add ",Object(i.b)("inlineCode",{parentName:"p"},"implements AnimEventListener")," to the class declaration. This\ninterface gives you access to events that notify you when a sequence is\ndone, or when you change from one sequence to another, so you can\nrespond to it. In this example, you reset the character to a standing\nposition after a ",Object(i.b)("inlineCode",{parentName:"p"},"Walk")," cycle is done."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'public class HelloAnimation extends SimpleApplication\n                         implements AnimEventListener {\n  ...\n\n  public void onAnimCycleDone(AnimControl control,\n                              AnimChannel channel, String animName) {\n    if (animName.equals("Walk")) {\n      channel.setAnim("stand", 0.50f);\n      channel.setLoopMode(LoopMode.DontLoop);\n      channel.setSpeed(1f);\n    }\n  }\n  public void onAnimChange(AnimControl control, AnimChannel channel, String animName) {\n    // unused\n  }\n')),Object(i.b)("h1",{id:"trigger-animations-after-user-input"},"Trigger Animations After User Input"),Object(i.b)("p",null,"There are ambient animations like animals or trees that you may want to\ntrigger in the main event loop. In other cases, animations are triggered\nby user interaction, such as key input. You want to play the Walk\nanimation when the player presses a certain key (here the spacebar), at\nthe same time as the avatar performs the walk action and changes its\nlocation."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Initialize a new input controller (in ",Object(i.b)("inlineCode",{parentName:"p"},"simpleInitApp()"),")."),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Write the ",Object(i.b)("inlineCode",{parentName:"li"},"initKey()")," convenience method and call it from\n",Object(i.b)("inlineCode",{parentName:"li"},"simpleInitApp()"),"."))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Add a key mapping with the name as the action you want to trigger."),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Here for example, you map ",Object(i.b)("inlineCode",{parentName:"li"},"Walk")," to the Spacebar key."))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Add an input listener for the ",Object(i.b)("inlineCode",{parentName:"p"},"Walk")," action."))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'  private void initKeys() {\n    inputManager.addMapping("Walk", new KeyTrigger(KeyInput.KEY_SPACE));\n    inputManager.addListener(actionListener, "Walk");\n  }\n')),Object(i.b)("p",null,"To use the input controller, you need to implement the actionListener by\ntesting for each action by name, then set the channel to the\ncorresponding animation to run."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The second parameter of setAnim() is the blendTime (how long the\ncurrent animation should overlap with the last one).")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"LoopMode can be Loop (repeat), Cycle (forward then backward), and\nDontLoop (only once).")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"If needed, use channel.setSpeed() to set the speed of this\nanimation.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Optionally, use channel.setTime() to Fast-forward or rewind to a\ncertain moment in time of this animation."))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'  private ActionListener actionListener = new ActionListener() {\n    public void onAction(String name, boolean keyPressed, float tpf) {\n        if (name.equals("Walk") && !keyPressed) {\n            if (!channel.getAnimationName().equals("Walk")){\n                channel.setAnim("Walk", 0.50f);\n                channel.setLoopMode(LoopMode.Cycle);\n            }\n        }\n    }\n  };\n')),Object(i.b)("h1",{id:"exercises"},"Exercises"),Object(i.b)("h2",{id:"exercise-1-two-animations"},"Exercise 1: Two Animations"),Object(i.b)("p",null,"Make a mouse click trigger another animation sequence!"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create a second channel in the controller.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create a new key trigger mapping and action. (see: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/beginner/hello_input_system"}),"Hello\nInput"),")"))),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Do you want to find out what animation sequences are available in the\nmodel? Use:"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"for (String anim : control.getAnimationNames()) {\n    System.out.println(anim);\n}\n")))),Object(i.b)("h2",{id:"exercise-2-revealing-the-skeleton-1"},"Exercise 2: Revealing the Skeleton (1)"),Object(i.b)("p",null,"Open the ",Object(i.b)("inlineCode",{parentName:"p"},"skeleton.xml")," file in a text editor of your choice. You don't\nhave to be able to read or write these xml files (Blender does that for\nyou) -- but it is good to know how skeletons work. \"There's no magic to\nit!"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Note how the bones are numbered and named. All names of animated\nmodels follow a naming scheme.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Note the bone hierarchy that specifies how the bones are connected.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Note the list of animations: Each animation has a name, and several\ntracks. Each track tells individual bones how and when to transform.\nThese animation steps are called keyframes."))),Object(i.b)("h2",{id:"exercise-3-revealing-the-skeleton-2"},"Exercise 3: Revealing the Skeleton (2)"),Object(i.b)("p",null,"Add the following import statements for the SkeletonDebugger and\nMaterial classes:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"     import com.jme3.scene.debug.SkeletonDebugger;\n     import com.jme3.material.Material;\n")),Object(i.b)("p",null,"Add the following code snippet to ",Object(i.b)("inlineCode",{parentName:"p"},"simpleInitApp()")," to make the bones\n(that you just read about) visible!"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'     SkeletonDebugger skeletonDebug =\n         new SkeletonDebugger("skeleton", control.getSkeleton());\n     Material mat = new Material(assetManager, "Common/MatDefs/Misc/Unshaded.j3md");\n     mat.setColor("Color", ColorRGBA.Green);\n     mat.getAdditionalRenderState().setDepthTest(false);\n     skeletonDebug.setMaterial(mat);\n     player.attachChild(skeletonDebug);\n')),Object(i.b)("p",null,"Can you identify individual bones in the skeleton?"),Object(i.b)("h1",{id:"conclusion"},"Conclusion"),Object(i.b)("p",null,"Now you can load animated models, identify stored animations, and\ntrigger animations by using onAnimCycleDone() and onAnimChange(). You\nalso learned that you can play several animations simultaneously, by\nstarting each in a channel of its own. This could be useful if you ever\nwant to animate the lower and upper part of the characters body\nindependently, for example the legs run, while the arms use a weapon."),Object(i.b)("p",null,"Now that your character can walk, wouldn't it be cool if it could also\npick up things, or aim a weapon at things, or open doors? Time to reveal\nthe secrets of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/beginner/hello_picking"}),"mouse picking"),"!"),Object(i.b)("p",null,"See also: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.google.com/leaf?id=0B9hhZie2D-fEYmRkMTYwN2YtMzQ0My00NTM4LThhOTYtZTk1MTRlYTNjYTc3&hl=en"}),"Creating Animated OgreXML Models in\nBlender")))}m.isMDXComponent=!0},441:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return h}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),m=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r({},n,{},e)),t},p=function(e){var n=m(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=m(t),d=a,h=p["".concat(l,".").concat(d)]||p[d]||b[d]||i;return t?o.a.createElement(h,r({ref:n},s,{components:t})):o.a.createElement(h,r({ref:n},s))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=d;var r={};for(var c in n)hasOwnProperty.call(n,c)&&(r[c]=n[c]);r.originalType=e,r.mdxType="string"==typeof e?e:a,l[1]=r;for(var s=2;s<i;s++)l[s]=t[s];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);