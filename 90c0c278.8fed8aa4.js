(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{308:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(1),a=n(9),c=(n(0),n(441)),l={},o={id:"jme3/contributions/tonegodgui/textfield",title:"textfield",description:"TextField Class",source:"@site/docs/jme3/contributions/tonegodgui/textfield.md",permalink:"/wikidemo/docs/jme3/contributions/tonegodgui/textfield",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/contributions/tonegodgui/textfield.md"},i=[{value:"Validations &amp; Rules",id:"validations--rules",children:[]},{value:"Methods specific to the TextField class:",id:"methods-specific-to-the-textfield-class",children:[]},{value:"Hooks:",id:"hooks",children:[]}],s={rightToc:i};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"textfield-class"},"TextField Class"),Object(c.b)("p",null,"Textfields are single line text input fields, that provide the following\nfunctionality:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Caret & Text Range")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Mouse select")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Keyboard nav using:"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"arrows (nav by letter)")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"SHIFT+arrows (text range by latter)")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"CTRL+arrows (nav by word)")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"SHIFT+CTRL+arrows (text range by word)")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"etc.")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Cut & Paste"))),Object(c.b)("p",null,"::: {.note}\nThis control is still a work in progress and will be updated as either\ntime permits or issues arise. There is a known issue with the Cut &\nPaste function as of right now and it has been disabled.\n:::"),Object(c.b)("p",null,"TextFields provide the standard 3 constructors as shown in the ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"../../../jme3/contributions/tonegodgui/quickstart"}),"Quick\nStart Guide"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Constructor 1:")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"/** Parameters:\n  * Screen screen,\n  * String UID,\n  * Vector2f position\n  */\n\nTextField text = new TextField(screen, \u201ctext\u201d, new Vector2f(15, 15));\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Constructor 2:")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"/** Additional Parameter:\n  * Vector2f dimensions  */\n\nTextField text = new TextField(screen, \u201ctext\u201d, new Vector2f(15, 15),\n    new Vector2f(150, 25)\n);\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Constructor 3:")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"/** Additional Parameters:\n  * Vector4f resizeBorders,\n  * String defaultImg\n  */\n\nTextField text = new TextField(screen, \u201ctext\u201d, new Vector2f(15, 15), new Vector2f(150, 25),\n    new Vector4f(3,3,3,3),\n    \u201ctonegod/gui/style/def/TextField/text_field_x.png\u201d\n);\n")),Object(c.b)("h2",{id:"validations--rules"},"Validations & Rules"),Object(c.b)("p",null,"TextFields can be set to a specific Type using:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"text.setType(TextField.Type type);\n")),Object(c.b)("p",null,"+-----------------------------------+-----------------------------------+\n| Rule                              | Description                       |\n+===================================+===================================+\n| Type.DEFAULT                      | Accept all characters             |\n+-----------------------------------+-----------------------------------+\n| Type.ALPHA                        | Accept only lower case, uppercase |\n|                                   | alpha character + spacebar        |\n+-----------------------------------+-----------------------------------+\n| Type.ALPHA","_","NOSPACE               | Accept only lower case, uppercase |\n|                                   | alpha character - no spacebar     |\n+-----------------------------------+-----------------------------------+\n| Type.NUMERIC                      | Accept only numeric values +      |\n|                                   | decimal                           |\n+-----------------------------------+-----------------------------------+\n| Type.ALPHANUMERIC                 | Apply both ALPHA and NUMERIC      |\n|                                   | rules                             |\n+-----------------------------------+-----------------------------------+\n| Type.ALPHANUMERIC","_","NOSPACE        | Apply both ALPHA","_","NOSPACE and     |\n|                                   | NUMERIC rules                     |\n+-----------------------------------+-----------------------------------+\n| Type.EXCLUDE","_","SPECIAL             | Exclude all spacial characters    |\n+-----------------------------------+-----------------------------------+\n| Type.EXCLUDE","_","CUSTOM              | Exclude all user defined          |\n|                                   | character (see below)             |\n+-----------------------------------+-----------------------------------+\n| Type.INCLUDE","_","CUSTOM              | Accept only user defined          |\n|                                   | characters (see below)            |\n+-----------------------------------+-----------------------------------+"),Object(c.b)("p",null,"To define a custom validation for Type.EXCLUDE","_","CUSTOM or\nType.INCLUDE","_","CUSTOM, use the following method:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'text.setCustomValidation("Character List to include/exclude");\n')),Object(c.b)("p",null,"You can also limit the number of characters the TextField will accept\nusing:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"text.setMaxLimit(int maxLimit);\n")),Object(c.b)("p",null,"You can force upper and lower case by using:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"text.setForceUpperCase(boolean forceUpperCase);\ntext.setForceLowerCase(boolean forceLowerCase);\n")),Object(c.b)("h2",{id:"methods-specific-to-the-textfield-class"},"Methods specific to the TextField class:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Get the TextField text\ntext.getText();\n// Set the TextField text !IMPORTANT! setTextFieldText is now @Deprecated, use the following instead:\ntext.setText(String s);\n\n// Retrieve numeric values (all numeric parsers throw NumberFormatException\ntext.parseInt();\ntext.parseFloat();\ntext.parseShort();\ntext.parseDouble();\ntext.parseLong();\n")),Object(c.b)("h2",{id:"hooks"},"Hooks:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"public void controlKeyPressHook(KeyInputEvent evt, String text) {  }\n")))}p.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},b=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,m=b["".concat(l,".").concat(d)]||b[d]||u[d]||c;return n?a.a.createElement(m,o({ref:t},s,{components:n})):a.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,l=new Array(c);l[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<c;s++)l[s]=n[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);