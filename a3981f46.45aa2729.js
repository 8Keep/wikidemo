(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{329:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return h}));var o=n(1),a=n(9),r=(n(0),n(441)),i={},c={id:"sdk/font_creation",title:"font_creation",description:"Most jME3 projects use Bitmap Fonts in order to display text to the",source:"@site/docs/sdk/font_creation.md",permalink:"/wikidemo/docs/sdk/font_creation",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/sdk/font_creation.md"},s=[{value:"Advanced Effects",id:"advanced-effects",children:[]}],l={rightToc:s};function h(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Most jME3 projects use Bitmap Fonts in order to display text to the\nuser. This is because they render much faster than alternatives,\nalthough they do have a number of limitations. The main limitation being\nthat the text will not scale in or out very well, it is designed to be\ndisplayed at a certain pixel size on the screen and will lose quality if\nit zooms too far in or out from that size."),Object(r.b)("p",null,"All current jME3 GUI libraries use Bitmap Fonts, as does the BitmapText\nclass provided within jME3."),Object(r.b)("p",null,"Bitmap Fonts are actually composed of two files. One is a PNG image\ncontaining the individual letters, the other is a .fnt text file\ncontaining definitions of all of the characters supported by the font\nand where to find them inside the PNG image."),Object(r.b)("p",null,"The SDK provides a tool for automatically creating a Bitmap Font from\nany font installed on your computer."),Object(r.b)("p",null,"To create a font right click on the asset folder where you want to\ncreate the font, for example Interface/Fonts."),Object(r.b)("p",null,'Open the "new sub menu and then select "other.'),Object(r.b)("p",null,Object(r.b)("img",Object(o.a)({parentName:"p"},{src:"../sdk/newother.png",alt:"newother.png"}))),Object(r.b)("p",null,"Within the window that pops up select GUI and then Font then click Next"),Object(r.b)("p",null,Object(r.b)("img",Object(o.a)({parentName:"p"},{src:"../sdk/newothergui.png",alt:"newothergui.png"}))),Object(r.b)("p",null,"A list of every standard font installed on your system is then\ndisplayed, select the font that you would like to use to create the\nBitmap Font file from and then click Next."),Object(r.b)("p",null,"When selecting fonts you should check that this use does not breach the\nlicense of the font."),Object(r.b)("p",null,Object(r.b)("img",Object(o.a)({parentName:"p"},{src:"../sdk/selectfont.png",alt:"selectfont.png"}))),Object(r.b)("p",null,"With your font selected you can move onto the final screen which looks\nas follows:"),Object(r.b)("p",null,Object(r.b)("img",Object(o.a)({parentName:"p"},{src:"../sdk/configurefont.png",alt:"configurefont.png"}))),Object(r.b)("h1",{id:"font-settings"},"Font Settings"),Object(r.b)("p",null,"The settings in the box to the left configure how the font is rendered.\nThe Font Name is shown again to confirm your choice. Use the Back button\nif you want to change your mind."),Object(r.b)("p",null,"The Style (For example Bold, Plain, Italic) and Font Size (in Points)\ncan be selected as can the spacing between letters."),Object(r.b)("p",null,"The Char Range selects the characters to render from the Unicode\nCharacter set. The default range of 0 to 256 renders every displayable\ncharacter used in the most western languages, however the range can be\nextended if more characters are needed at the expense of a larger Image\nfile."),Object(r.b)("h1",{id:"image-settings"},"Image Settings"),Object(r.b)("p",null,"The settings in the box to the right control the generated files."),Object(r.b)("p",null,"The first option specifies the file name. This should not contain a file\nextension as two files will be generated, both using this name but one\nwith a .fnt extension and one with a .png extension. Note that as the\ngenerated .fnt file references the .png one then if you rename the files\nafter generating them you will need to go into the .fnt file and\nmanually update the reference."),Object(r.b)("p",null,"The next setting shows the Image Size of the image to produce. It is\nrecommended that you use a square power-of-two texture (256x256,\n512x512, etc) for maximum performance across various graphics cards."),Object(r.b)("p",null,"The final two settings are for the horizontal and vertical padding to\nadd around each character. For most cases these can be left as 0 but\nsometimes it can be useful to expand them."),Object(r.b)("h1",{id:"preview"},"Preview"),Object(r.b)("p",null,"The black area at the top of the window shows a preview of the generated\nfile. You can use it to get some idea of what the characters will look\nlike. The blue lines show the edges between the various characters that\nmake up the font."),Object(r.b)("h1",{id:"finishing"},"Finishing"),Object(r.b)("p",null,"When you are ready press Finish to generate the files or Cancel to\nabort."),Object(r.b)("h2",{id:"advanced-effects"},"Advanced Effects"),Object(r.b)("p",null,"The generated file is a standard PNG file so it can be loaded into an\nimage editing program and effects added. For example you could add a\npadding onto each of the characters using the padding-x and padding-y\nsettings and then use that to add an outer glow, drop shadow, or\nanything else you liked."),Object(r.b)("p",null,"When rendered the Bitmap Font is multiplied with the text colour\nspecified so if the text is set to white then any colour can be used\ninside the PNG file. If the PNG file just uses white then any colour can\nbe used for the text. Furthermore the two settings can be combined if\ndesired although this should be done with care as the multiplication\nwill tend to make colours darker or even disappear entirely. (For\nexample red multiplied with green gives black)."))}h.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var o=n(0),a=n.n(o);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),h=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},d=function(e){var t=h(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=h(n),p=o,f=d["".concat(i,".").concat(p)]||d[p]||u[p]||r;return n?a.a.createElement(f,c({ref:t},l,{components:n})):a.a.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<r;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);