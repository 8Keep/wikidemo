(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{381:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return d}));var n=a(1),r=a(9),o=(a(0),a(441)),i={},l={id:"jme3/advanced/debugging",title:"debugging",description:"When you deal with complex game engine features like animations or",source:"@site/docs/jme3/advanced/debugging.md",permalink:"/wikidemo/docs/jme3/advanced/debugging",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/debugging.md"},s=[{value:"Coordinate Axes",id:"coordinate-axes",children:[]},{value:"Wireframe Grid",id:"wireframe-grid",children:[]},{value:"Wireframe Cube",id:"wireframe-cube",children:[]},{value:"Wireframe Sphere",id:"wireframe-sphere",children:[]}],c={rightToc:s};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"When you deal with complex game engine features like animations or\nphysics it is handy to get feedback from the engine how it interpreted\nthe current state. Is the physical object's collision shape really where\nyou think it is? Is the skeleton of the animated character moving like\nyou think it should? This document shows you how to activate visual\ndebug aides."),Object(o.b)("p",null,'What if you just want to quickly write code that loads models and brings\nthem in their start position? You may not want to hunt for a sample\nmodel, convert it, add lights, and load materials. Instead you use\n"hasslefree" simple shapes, and a "hasslefree" unshaded material or\nwireframe: No model, no light source, no materials are needed to see\nthem in your test scene.'),Object(o.b)("p",null,"If you ever have problems with objects appearing in the wrong spot, with\nthe wrong scale, or wrong orientation, simply attach debug shapes to\nyour scene to have a point of reference in 3D space -- just like a giant\nruler. If your code positions the debug shapes correctly, but models\nremain invisible when you apply the same code to them, you know that the\nproblem must be either the model (where is its origin coordinate?), or\nthe light (too dark? too bright? missing?), or the model's material\n(missing?) -- and not the positioning code."),Object(o.b)("p",null,"Here are some different debug shapes:"),Object(o.b)("p",null,Object(o.b)("img",Object(n.a)({parentName:"p"},{src:"/images/jme3/advanced/debug-shapes.png",alt:"debug-shapes.png"}))),Object(o.b)("h1",{id:"debug-shapes"},"Debug Shapes"),Object(o.b)("h2",{id:"coordinate-axes"},"Coordinate Axes"),Object(o.b)("p",null,'The coordinate axes (com.jme3.scene.debug.Arrow) help you see the\ncardinal directions (X,Y,Z) from their center point. Scale the arrows to\nuse them as a "ruler" for a certain length.'),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'private void attachCoordinateAxes(Vector3f pos) {\n    Arrow arrow = new Arrow(Vector3f.UNIT_X);\n    putShape(arrow, ColorRGBA.Red).setLocalTranslation(pos);\n\n    arrow = new Arrow(Vector3f.UNIT_Y);\n    putShape(arrow, ColorRGBA.Green).setLocalTranslation(pos);\n\n    arrow = new Arrow(Vector3f.UNIT_Z);\n    putShape(arrow, ColorRGBA.Blue).setLocalTranslation(pos);\n}\n\nprivate Geometry putShape(Mesh shape, ColorRGBA color) {\n    Geometry g = new Geometry("coordinate axis", shape);\n    Material mat = new Material(assetManager, "Common/MatDefs/Misc/Unshaded.j3md");\n    mat.getAdditionalRenderState().setWireframe(true);\n    mat.getAdditionalRenderState().setLineWidth(4);\n    mat.setColor("Color", color);\n    g.setMaterial(mat);\n    rootNode.attachChild(g);\n    return g;\n}\n')),Object(o.b)("h2",{id:"wireframe-grid"},"Wireframe Grid"),Object(o.b)("p",null,"Use a wireframe grid (com.jme3.scene.debug.Grid) as a ruler or simple\nfloor."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'private Geometry attachGrid(Vector3f pos, int size, ColorRGBA color) {\n    Geometry g = new Geometry("wireframe grid", new Grid(size, size, 0.2f));\n    Material mat = new Material(assetManager, "Common/MatDefs/Misc/Unshaded.j3md");\n    mat.getAdditionalRenderState().setWireframe(true);\n    mat.setColor("Color", color);\n    g.setMaterial(mat);\n    g.center().move(pos);\n    rootNode.attachChild(g);\n    return g;\n}\n')),Object(o.b)("h2",{id:"wireframe-cube"},"Wireframe Cube"),Object(o.b)("p",null,"Use a wireframe cube (com.jme3.scene.debug.WireBox) as a stand-in object\nto see whether your code scales, positions, or orients, loaded models\nright."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'public Geometry attachWireBox(Vector3f pos, float size, ColorRGBA color) {\n    Geometry g = new Geometry("wireframe cube", new WireBox(size, size, size));\n    Material mat = new Material(assetManager, "Common/MatDefs/Misc/Unshaded.j3md");\n    mat.getAdditionalRenderState().setWireframe(true);\n    mat.setColor("Color", color);\n    g.setMaterial(mat);\n    g.setLocalTranslation(pos);\n    rootNode.attachChild(g);\n    return g;\n}\n')),Object(o.b)("h2",{id:"wireframe-sphere"},"Wireframe Sphere"),Object(o.b)("p",null,"Use a wireframe sphere (com.jme3.scene.debug.WireSphere) as a stand-in\nobject to see whether your code scales, positions, or orients, loaded\nmodels right."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'private Geometry attachWireSphere(Vector3f pos, float size, ColorRGBA color) {\n    Geometry g = new Geometry("wireframe sphere", new WireSphere(size));\n    Material mat = new Material(assetManager, "Common/MatDefs/Misc/Unshaded.j3md");\n    mat.getAdditionalRenderState().setWireframe(true);\n    mat.setColor("Color", color);\n    g.setMaterial(mat);\n    g.setLocalTranslation(pos);\n    rootNode.attachChild(g);\n    return g;\n}\n')),Object(o.b)("h1",{id:"wireframe-for-physics"},"Wireframe for Physics"),Object(o.b)("p",null,"You can display a wireframe of the (usually invisible) collision shape\naround all physical objects. Use this for debugging when analyzing\nunexpected behaviour. Does not work with DETACHED physics, please switch\nto PARALLEL or SEQUENTIAL for debugging."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"//Create the physics space.\nbulletAppState = new BulletAppState();\nbulletAppState.setDebugEnabled(true);\ngetStateManager().attach(bulletAppState);\n")),Object(o.b)("p",null,"With debugging enabled, colors are used to indicate various types of\nphysical objects:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"A magenta wire mesh indicates an active rigid body.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"A blue wire mesh indicates a rigid body which is either new or\ninactive.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"A yellow wire mesh indicates a ghost.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Two green arrows indicate a joint.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"A pink wire mesh indicates a character."))),Object(o.b)("h1",{id:"wireframe-for-animations"},"Wireframe for Animations"),Object(o.b)("p",null,"Making the skeleton visible inside animated models can be handy for\ndebugging animations. The ",Object(o.b)("inlineCode",{parentName:"p"},"control")," object is an AnimControl, ",Object(o.b)("inlineCode",{parentName:"p"},"player"),"\nis the loaded model."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"AnimControl is known to be in the main node.")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'SkeletonDebugger skeletonDebug = new SkeletonDebugger("skeleton", control.getSkeleton());\nMaterial mat = new Material(assetManager, "Common/MatDefs/Misc/Unshaded.j3md");\nmat.setColor("Color", ColorRGBA.Green);\nmat.getAdditionalRenderState().setDepthTest(false);\nskeletonDebug.setMaterial(mat);\nplayer.attachChild(skeletonDebug);\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"AnimControl is nested somewhere.")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'private void debugSkeleton(Node player) {\n    player.depthFirstTraversal(new SceneGraphVisitorAdapter() {\n        @Override\n        public void visit(Node node) {\n            if (node.getControl(AnimControl.class) != null) {\n                AnimControl control = node.getControl(AnimControl.class);\n                SkeletonDebugger skeletonDebug = new SkeletonDebugger("skeleton",\n                        control.getSkeleton());\n                Material mat = new Material(getApplication().getAssetManager(),\n                        "Common/MatDefs/Misc/Unshaded.j3md");\n                mat.setColor("Color", ColorRGBA.Green);\n                mat.getAdditionalRenderState().setDepthTest(false);\n                skeletonDebug.setMaterial(mat);\n                player.attachChild(skeletonDebug);\n            }\n        }\n    });\n}\n')),Object(o.b)("h1",{id:"example-toggle-wireframe-on-model"},"Example: Toggle Wireframe on Model"),Object(o.b)("p",null,"We assume that you have loaded a model with a material ",Object(o.b)("inlineCode",{parentName:"p"},"mat"),"."),Object(o.b)("p",null,"Then you can add a switch to toggle the model's wireframe on and off,\nlike this:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a key input trigger that switches between the two materials:\nE.g. we toggle when the T key is pressed."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'inputManager.addMapping("toggle wireframe", new KeyTrigger(KeyInput.KEY_T));\ninputManager.addListener(actionListener, "toggle wireframe");\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Now add the toggle action to the action listener."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'private ActionListener actionListener = new ActionListener() {\n    @Override\n    public void onAction(String name, boolean pressed, float tpf) {\n        // toggle wireframe\n        if (name.equals("toggle wireframe") && !pressed) {\n            wireframe = !wireframe; // toggle boolean\n            mat.getAdditionalRenderState().setWireframe(wireframe);\n        }\n        // else ... other input tests.\n    }\n};\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Alternatively, you could traverse over the whole scene and toggle\nfor all Geometry objects in there if you don't want to create a new\nSceneProcessor."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'private ActionListener actionListener = new ActionListener() {\n    boolean wireframe = false;\n\n    @Override\n    public void onAction(String name, boolean pressed, float tpf) {\n        // toggle wireframe\n        if (name.equals("toggle wireframe") && !pressed) {\n            wireframe = !wireframe; // toggle boolean\n            rootNode.depthFirstTraversal(new SceneGraphVisitor() {\n                @Override\n                public void visit(Spatial spatial) {\n                    if (spatial instanceof Geometry) {\n                        ((Geometry) spatial).getMaterial()\n                                .getAdditionalRenderState().setWireframe(wireframe);\n                    }\n                }\n            });\n        }\n        // else ... other input tests.\n    }\n};\n')))),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"To set the line width of wireframe display, use\nmesh.setLineWidth(lineWidth). Default line width is 1."))),Object(o.b)("h1",{id:"example-toggle-wireframe-on-the-scene"},"Example: Toggle Wireframe on the scene"),Object(o.b)("p",null,"To display the wireframe of the entire scene instead on one material at\na time, first create the following Scene Processor."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'public class WireProcessor implements SceneProcessor {\n\n    RenderManager renderManager;\n    Material wireMaterial;\n\n    public WireProcessor(AssetManager assetManager) {\n        wireMaterial = new Material(assetManager, "/Common/MatDefs/Misc/Unshaded.j3md");\n        wireMaterial.setColor("Color", ColorRGBA.Blue);\n        wireMaterial.getAdditionalRenderState().setWireframe(true);\n    }\n\n    @Override\n    public void initialize(RenderManager rm, ViewPort vp) {\n        renderManager = rm;\n    }\n\n    @Override\n    public void reshape(ViewPort vp, int w, int h) {\n        throw new UnsupportedOperationException("Not supported yet.");\n    }\n\n    @Override\n    public boolean isInitialized() {\n        return renderManager != null;\n    }\n\n    @Override\n    public void preFrame(float tpf) {\n    }\n\n    @Override\n    public void postQueue(RenderQueue rq) {\n        renderManager.setForcedMaterial(wireMaterial);\n    }\n\n    @Override\n    public void postFrame(FrameBuffer out) {\n        renderManager.setForcedMaterial(null);\n    }\n\n    @Override\n    public void cleanup() {\n        renderManager.setForcedMaterial(null);\n    }\n}\n')),Object(o.b)("p",null,"Then attach the scene processor to the GUI Viewport."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"getViewPort().addProcessor(new WireProcessor());\n")),Object(o.b)("h1",{id:"see-also"},"See also"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"../../jme3/advanced/spatial"}),"Spatial")," -- if you can't see\ncertain spatials, you can modify the culling behaviour to identify\nproblems (such as inside-out custom meshes)")))}d.isMDXComponent=!0},441:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},p=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(a),b=n,u=p["".concat(i,".").concat(b)]||p[b]||m[b]||o;return a?r.a.createElement(u,l({ref:t},c,{components:a})):r.a.createElement(u,l({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"}}]);