(window.webpackJsonp=window.webpackJsonp||[]).push([[283],{422:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var o=n(1),r=n(9),i=(n(0),n(441)),c={},a={id:"jme3/contributions/cubes/tools/picking",title:"picking",description:"You already found out how to create a world block and modify it from",source:"@site/docs/jme3/contributions/cubes/tools/picking.md",permalink:"/wikidemo/docs/jme3/contributions/cubes/tools/picking",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/contributions/cubes/tools/picking.md"},l=[],s={rightToc:l};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"You already found out how to create a world block and modify it from\nyour code. But wouldn't it be nice to have a \"click-and-build\nfunctionality? (Minecraft says hello)"),Object(i.b)("p",null,"The framework helps you to get the block location which is e.g. pointed\nby your mouse - When receiving the coordinates, you can use them to add\nor remove a block there."),Object(i.b)("h1",{id:"blocknavigator"},"BlockNavigator"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"BlockNavigator")," class contains various methods to help you navigate\nthrough your blockworld without having to trouble with coordinates, type\ncasts or chunks. The method we need for (mouse) picking is this one:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"public static Vector3Int getPointedBlockLocation(BlockTerrain blockTerrain, Vector3f collisionContactPoint, boolean getNeighborLocation){\n    //Some mysterious code that returns the location\n    //of the block in the terrain, which is placed\n    //at the specified collisionContactPoint (world coordinates)\n    //If you set getNeighborLocation to true, you can\n    //get the empty block gap, in the direction towards you\n    //(e.g. if you want to add a block to the block you've clicked)\n}\n")),Object(i.b)("h1",{id:"get-the-cursor-pointed-location--raycasting"},"Get the cursor-pointed location / RayCasting"),Object(i.b)("p",null,"So, the above method needs a collisionContactPoint - This is the point\nyou've clicked in your world. Luckily, jMonkeyEngine offers raycasting,\nwhich lets you get exactly this point."),Object(i.b)("p",null,"::: {.important}\nI recommend to read the ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"../../../../jme3/beginner/hello_picking"}),"Hello\nPicking"),' tutorial first,\nsince the rest of this chapter has nothing to do with the "Cubes\nframework itself.\n:::'),Object(i.b)("p",null,"This is a method I've created while creating a test case for mouse\npicking in the blockworld - It returns the CollisionResults of the mouse\ncursor and a specified node: (Generally, this will be the BlockTerrain's\nnode)"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"private CollisionResults getRayCastingResults(Node node){\n    Vector3f origin = cam.getWorldCoordinates(new Vector2f((settings.getWidth() / 2), (settings.getHeight() / 2)), 0.0f);\n    Vector3f direction = cam.getWorldCoordinates(new Vector2f((settings.getWidth() / 2), (settings.getHeight() / 2)), 0.3f);\n    direction.subtractLocal(origin).normalizeLocal();\n    Ray ray = new Ray(origin, direction);\n    CollisionResults results = new CollisionResults();\n    node.collideWith(ray, results);\n    return results;\n}\n")),Object(i.b)("p",null,'You can use the closest CollisionResult to receive the\ncollisionContactPoint with your BlockTerrain and to finally get the\n"pointed block location:'),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"private Vector3Int getCurrentPointedBlockLocation(boolean getNeighborLocation){\n    CollisionResults results = getRayCastingResults(terrainNode);\n    if(results.size() > 0){\n        Vector3f collisionContactPoint = results.getClosestCollision().getContactPoint();\n        return BlockNavigator.getPointedBlockLocation(blockTerrain, collisionContactPoint, getNeighborLocation);\n    }\n    return null;\n}\n")),Object(i.b)("p",null,"Time to sum up: You can now get the current block location that you\npoint with your mouse at any time you want. :)"),Object(i.b)("h1",{id:"woah---lets-build-minecraft"},"Woah - Let's build Minecraft!"),Object(i.b)("p",null,"One nice example would be to register a mouse-listener (See ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"../../../../jme3/beginner/hello_input_system"}),"Hello\nInput"),") and to execute\nthe following code when the user clicks:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"//Get the free block gap, to which the user is loooking...\nVector3Int blockLocation = getCurrentPointedBlockLocation(true);\n//(The block location is null, if the user looks in the sky or out of the map)\nif(blockLocation != null){\n    //... and place a block there :)\n    blockTerrain.setBlock(blockLocation, CubesTestAssets.BLOCK_WOOD);\n}\n")),Object(i.b)("p",null,"And that's it - You just created your own minecraft-like\nblockworld-editor. Give yourself a challenge and implement the other\nmouse button to remove the pointed block (Look out for the\n",Object(i.b)("inlineCode",{parentName:"p"},"getNeighborLocation")," parameter)."),Object(i.b)("p",null,Object(i.b)("img",Object(o.a)({parentName:"p"},{src:"http://destroflyer.mania-community.de/other/imagehost/cubes/test_picking.png",alt:"test_picking.png"}))),Object(i.b)("h1",{id:"further-improvements"},"Further improvements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Create different types of interactions between player and block\n(Open a door, turn a switch, destroy a block, ...) and a way to\ndefine own interactions")))}u.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var o=n(0),r=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a({},t,{},e)),n},b=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=u(n),d=o,h=b["".concat(c,".").concat(d)]||b[d]||p[d]||i;return n?r.a.createElement(h,a({ref:t},s,{components:n})):r.a.createElement(h,a({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);