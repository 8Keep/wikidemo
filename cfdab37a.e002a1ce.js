(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{386:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return b}));var n=a(1),r=a(9),i=(a(0),a(441)),l={},c={id:"jme3/beginner/hello_effects",title:"hello_effects",description:"Previous: [Hello Audio](../../jme3/beginner/hello_audio), Next:",source:"@site/docs/jme3/beginner/hello_effects.md",permalink:"/wikidemo/docs/jme3/beginner/hello_effects",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/beginner/hello_effects.md",sidebar:"main",previous:{title:"hello_audio",permalink:"/wikidemo/docs/jme3/beginner/hello_audio"},next:{title:"hello_physics",permalink:"/wikidemo/docs/jme3/beginner/hello_physics"}},o=[{value:"Texture Animation and Variation",id:"texture-animation-and-variation",children:[]},{value:"Default Particle Textures",id:"default-particle-textures",children:[]},{value:"Emitter Parameters",id:"emitter-parameters",children:[]}],s={rightToc:o};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Previous: ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/beginner/hello_audio"}),"Hello Audio"),", Next:\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/beginner/hello_physics"}),"Hello Physics")),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"../../../images/jme3/beginner/beginner-effect-fire.png",alt:"beginner-effect-fire.png"}))),Object(i.b)("p",null,"When you see one of the following in a game, then a particle system is\nlikely behind it:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fire, flames, sparks;")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Rain, snow, waterfalls, leaves;")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Explosions, debris, shockwaves;")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Dust, fog, clouds, smoke;")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Insects swarms, meteor showers;")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Magic spells."))),Object(i.b)("p",null,"These scene elements cannot be modeled by meshes. In very simple terms:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The difference between an explosion and a dust cloud is the speed of\nthe particle effect.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The difference between flames and a waterfall is the direction and\nthe color of the particle effect."))),Object(i.b)("p",null,"Particle effects can be animated (e.g. sparks, drops) and static\n(strands of grass, hair). Non-particle effects include bloom/glow, and\nmotion blur/afterimage. In this tutorial you learn how to make animated\nparticles (com.jme3.effect)."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"To use the example assets in a new jMonkeyEngine SDK project, RMB click\nyour project, select ","[Properties ",">"," Libraries ",">"," Add\nLibrary]",'{.menuchoice} and add the "jme3-test-data" library.'))),Object(i.b)("h1",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'package jme3test.helloworld;\n\nimport com.jme3.app.SimpleApplication;\nimport com.jme3.effect.ParticleEmitter;\nimport com.jme3.effect.ParticleMesh;\nimport com.jme3.material.Material;\nimport com.jme3.math.ColorRGBA;\nimport com.jme3.math.Vector3f;\n\n/** Sample 11 - how to create fire, water, and explosion effects. */\npublic class HelloEffects extends SimpleApplication {\n\n  public static void main(String[] args) {\n    HelloEffects app = new HelloEffects();\n    app.start();\n  }\n\n  @Override\n  public void simpleInitApp() {\n\n    ParticleEmitter fire =\n            new ParticleEmitter("Emitter", ParticleMesh.Type.Triangle, 30);\n    Material mat_red = new Material(assetManager,\n            "Common/MatDefs/Misc/Particle.j3md");\n    mat_red.setTexture("Texture", assetManager.loadTexture(\n            "Effects/Explosion/flame.png"));\n    fire.setMaterial(mat_red);\n    fire.setImagesX(2);\n    fire.setImagesY(2); // 2x2 texture animation\n    fire.setEndColor(  new ColorRGBA(1f, 0f, 0f, 1f));   // red\n    fire.setStartColor(new ColorRGBA(1f, 1f, 0f, 0.5f)); // yellow\n    fire.getParticleInfluencer().setInitialVelocity(new Vector3f(0, 2, 0));\n    fire.setStartSize(1.5f);\n    fire.setEndSize(0.1f);\n    fire.setGravity(0, 0, 0);\n    fire.setLowLife(1f);\n    fire.setHighLife(3f);\n    fire.getParticleInfluencer().setVelocityVariation(0.3f);\n    rootNode.attachChild(fire);\n\n    ParticleEmitter debris =\n            new ParticleEmitter("Debris", ParticleMesh.Type.Triangle, 10);\n    Material debris_mat = new Material(assetManager,\n            "Common/MatDefs/Misc/Particle.j3md");\n    debris_mat.setTexture("Texture", assetManager.loadTexture(\n            "Effects/Explosion/Debris.png"));\n    debris.setMaterial(debris_mat);\n    debris.setImagesX(3);\n    debris.setImagesY(3); // 3x3 texture animation\n    debris.setRotateSpeed(4);\n    debris.setSelectRandomImage(true);\n    debris.getParticleInfluencer().setInitialVelocity(new Vector3f(0, 4, 0));\n    debris.setStartColor(ColorRGBA.White);\n    debris.setGravity(0, 6, 0);\n    debris.getParticleInfluencer().setVelocityVariation(.60f);\n    rootNode.attachChild(debris);\n    debris.emitAllParticles();\n  }\n}\n')),Object(i.b)("p",null,"You should see an explosion that sends debris flying, and a fire. ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/tree/master/jme3-examples/src/main/java/jme3test/effect"}),"More\nexample code is\nhere.")),Object(i.b)("h2",{id:"texture-animation-and-variation"},"Texture Animation and Variation"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"../../../images/jme3/beginner/Debris.png",alt:"Debris.png"}))),Object(i.b)("p",null,"Start by choosing a material texture for your effect. If you provide the\nemitter with a set of textures (see image), it can use them either for\nvariation (random order), or as animation steps (fixed order)."),Object(i.b)("p",null,"Setting emitter textures works just as you have already learned in\nprevious chapters. This time you base the material on the\n",Object(i.b)("inlineCode",{parentName:"p"},"Particle.j3md")," material definition. Let's have a closer look at the\nmaterial for the Debris effect."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'    ParticleEmitter debris =\n            new ParticleEmitter("Debris", ParticleMesh.Type.Triangle, 10);\n    Material debris_mat = new Material(assetManager,\n            "Common/MatDefs/Misc/Particle.j3md");\n    debris_mat.setTexture("Texture", assetManager.loadTexture(\n            "Effects/Explosion/Debris.png"));\n    debris.setMaterial(debris_mat);\n    debris.setImagesX(3);\n    debris.setImagesY(3); // 3x3 texture animation\n    debris.setSelectRandomImage(true);\n        ...\n')),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create a material and load the texture.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Tell the Emitter into how many animation steps (x","*","y) the texture is\ndivided.\\\nThe debris texture has 3x3 frames.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Optionally, tell the Emitter whether the animation steps are to be\nat random, or in order.\\\nFor the debris, the frames play at random."))),Object(i.b)("p",null,'As you see in the debris example, texture animations improve effects\nbecause each "flame" or "piece" of debris now looks different. Also\nthink of electric or magic effects, where you can create very\ninteresting animations by using an ordered morphing series of lightning\nbolts; or flying leaves or snow flakes, for instance.'),Object(i.b)("p",null,'The fire material is created the same way, just using\n"Effects/Explosion/flame.png" texture, which has with 2x2 ordered\nanimation steps.'),Object(i.b)("h2",{id:"default-particle-textures"},"Default Particle Textures"),Object(i.b)("p",null,"The following particle textures included in ",Object(i.b)("inlineCode",{parentName:"p"},"test-data.jar"),". You can\ncopy and use them in your own effects."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Texture Path"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Dimension"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Preview"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Effects/Explosion/Debris.png"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"3","*","3"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("img",Object(n.a)({parentName:"td"},{src:"../../../images/jme3/beginner/Debris.png",alt:"Debris.png"})))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Effects/Explosion/flame.png"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2","*","2"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("img",Object(n.a)({parentName:"td"},{src:"../../../images/jme3/beginner/flame.png",alt:"flame.png"})))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Effects/Explosion/shockwave.png"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1","*","1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("img",Object(n.a)({parentName:"td"},{src:"../../../images/jme3/beginner/shockwave.png",alt:"shockwave.png"})))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Effects/Explosion/smoketrail.png"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1","*","3"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("img",Object(n.a)({parentName:"td"},{src:"../../../images/jme3/beginner/smoketrail.png",alt:"smoketrail.png"})))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Effects/Smoke/Smoke.png"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1","*","15"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("img",Object(n.a)({parentName:"td"},{src:"../../../images/jme3/beginner/Smoke.png",alt:"Smoke.png"})))))),Object(i.b)("p",null,"Copy them into your ",Object(i.b)("inlineCode",{parentName:"p"},"assets/Effects")," directory to use them."),Object(i.b)("h1",{id:"creating-custom-textures"},"Creating Custom Textures"),Object(i.b)("p",null,"For your game, you will likely create custom particle textures. Look at\nthe fire example again."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'    ParticleEmitter fire =\n            new ParticleEmitter("Emitter", ParticleMesh.Type.Triangle, 30);\n    Material mat_red = new Material(assetManager,\n            "Common/MatDefs/Misc/Particle.j3md");\n    mat_red.setTexture("Texture", assetManager.loadTexture(\n            "Effects/Explosion/flame.png"));\n    fire.setMaterial(mat_red);\n    fire.setImagesX(2);\n    fire.setImagesY(2); // 2x2 texture animation\n    fire.setEndColor(  new ColorRGBA(1f, 0f, 0f, 1f));   // red\n    fire.setStartColor(new ColorRGBA(1f, 1f, 0f, 0.5f)); // yellow\n')),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"../../../images/jme3/beginner/flame.png",alt:"flame.png"}))),Object(i.b)("p",null,"Compare the texture with the resulting effect."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Black parts of the image become fully transparent.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"White/gray parts of the image are translucent and get colorized.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"You set the color using ",Object(i.b)("inlineCode",{parentName:"p"},"setStartColor()")," and ",Object(i.b)("inlineCode",{parentName:"p"},"setEndColor()"),".\\\nFor fire, is's a gradient from yellow to red.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"By default, the animation is played in order and loops."))),Object(i.b)("p",null,"Create a grayscale texture in a graphic editor, and save it to your\n",Object(i.b)("inlineCode",{parentName:"p"},"assets/Effects")," directory. If you split up one image file into x","*","y\nanimation steps, make sure each square is of equal size--just as you see\nin the examples here."),Object(i.b)("h2",{id:"emitter-parameters"},"Emitter Parameters"),Object(i.b)("p",null,"A particle system is always centered around an emitter."),Object(i.b)("p",null,"Use the ",Object(i.b)("inlineCode",{parentName:"p"},"setShape()")," method to change the EmitterShape:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"EmitterPointShape(Vector3f.ZERO) -- particles emit from a point\n(default)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"EmitterSphereShape(Vector3f.ZERO,2f) -- particles emit from a\nsphere-sized area")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"EmitterBoxShape(new Vector3f(-1f,-1f,-1f),new Vector3f(1f,1f,1f)) --\nparticles emit from a box-sized area"))),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"emitter.setShape(new EmitterPointShape(Vector3f.ZERO));\n")),Object(i.b)("p",null,"You create different effects by changing the emitter parameters:"),Object(i.b)("p",null,"+------+-----------------------------------+---------+-----------------+\n| P    | Method                            | Default | Description     |\n| aram |                                   |         |                 |\n| eter |                                   |         |                 |\n+======+===================================+=========+=================+\n| nu   | ",Object(i.b)("inlineCode",{parentName:"p"},"setNumParticles()"),'               | N/A     | The maximum     |\n| mber |                                   |         | number of       |\n|      |                                   |         | particles       |\n|      |                                   |         | visible at the  |\n|      |                                   |         | same time.      |\n|      |                                   |         | Value is        |\n|      |                                   |         | specified by    |\n|      |                                   |         | user in         |\n|      |                                   |         | constructor.    |\n|      |                                   |         | This influences |\n|      |                                   |         | the density and |\n|      |                                   |         | length of the   |\n|      |                                   |         | "trail".        |\n+------+-----------------------------------+---------+-----------------+\n| velo | ',Object(i.b)("inlineCode",{parentName:"p"},"getParticleI                     | Vector  | Specify a       |\n| city | nfluencer().setInitialVelocity()")," | 3f.ZERO | vector how fast |\n|      |                                   |         | particles move  |\n|      |                                   |         | and in which    |\n|      |                                   |         | start           |\n|      |                                   |         | direction.      |\n+------+-----------------------------------+---------+-----------------+\n| d    | ",Object(i.b)("inlineCode",{parentName:"p"},"getParticleInfl                  | 0.2f\\   | Optional        |\n| irec | uencer().setVelocityVariation()"),"\\ | false\\  | accessors that  |\n| tion | ",Object(i.b)("inlineCode",{parentName:"p"},"setFacingVelocity()"),"\\            | false\\  | control in      |\n|      | ",Object(i.b)("inlineCode",{parentName:"p"},"setRandomAngle()"),"\\               | Vector  | which direction |\n|      | ",Object(i.b)("inlineCode",{parentName:"p"},"setFaceNormal()"),"\\                | 3f.NAN\\ | particles face  |\n|      | ",Object(i.b)("inlineCode",{parentName:"p"},"setRotateSpeed()"),"                | 0.0f    | while flying.   |\n+------+-----------------------------------+---------+-----------------+\n| life | ",Object(i.b)("inlineCode",{parentName:"p"},"setLowLife()"),"\\                   | 3f\\     | Minimum and     |\n| time | ",Object(i.b)("inlineCode",{parentName:"p"},"setHighLife()"),"                   | 7f      | maximum time    |\n|      |                                   |         | period before   |\n|      |                                   |         | particles fade. |\n+------+-----------------------------------+---------+-----------------+\n| emis | ",Object(i.b)("inlineCode",{parentName:"p"},"setParticlesPerSec()"),"            | 20      | How many new    |\n| sion |                                   |         | particles are   |\n| rate |                                   |         | emitted per     |\n|      |                                   |         | second.         |\n+------+-----------------------------------+---------+-----------------+\n| c    | ",Object(i.b)("inlineCode",{parentName:"p"},"setStartColor()"),"\\                | gray    | Set to the same |\n| olor | ",Object(i.b)("inlineCode",{parentName:"p"},"setEndColor()"),"                   |         | colors, or to   |\n|      |                                   |         | two different   |\n|      |                                   |         | colors for a    |\n|      |                                   |         | gradient        |\n|      |                                   |         | effect.         |\n+------+-----------------------------------+---------+-----------------+\n| size | ",Object(i.b)("inlineCode",{parentName:"p"},"setStartSize()"),"\\                 | 0.2f\\   | Set to two      |\n|      | ",Object(i.b)("inlineCode",{parentName:"p"},"setEndSize()"),"                    | 2f      | different       |\n|      |                                   |         | values for      |\n|      |                                   |         | shrink/grow     |\n|      |                                   |         | effect, or to   |\n|      |                                   |         | same size for   |\n|      |                                   |         | constant        |\n|      |                                   |         | effect.         |\n+------+-----------------------------------+---------+-----------------+\n| gra  | ",Object(i.b)("inlineCode",{parentName:"p"},"setGravity()"),"                    | 0,1,0   | Whether         |\n| vity |                                   |         | particles fall  |\n|      |                                   |         | down (positive) |\n|      |                                   |         | or fly up       |\n|      |                                   |         | (negative). Set |\n|      |                                   |         | to 0f for a     |\n|      |                                   |         | zero-g effect   |\n|      |                                   |         | where particles |\n|      |                                   |         | keep flying.    |\n+------+-----------------------------------+---------+-----------------+"),Object(i.b)("p",null,"You can find details about ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/particle_emitters.xml#configure_parameters"}),"effect\nparameters"),"\nhere. Add and modify one parameter at a time, and try different values\nuntil you get the effect you want."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Use the SceneComposer in the jMonkeyEngine SDK to create effects more\neasily. Create an empty scene and add an emitter object to it. Change\nthe emitter properties and watch the outcome live. You can save created\neffects as .j3o file and load them like scenes or models."))),Object(i.b)("h1",{id:"exercise"},"Exercise"),Object(i.b)("p",null,'Can you "invert" the fire effect into a small waterfall? Here some tips:'),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Change the Red and Yellow color to Cyan and Blue")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Invert the velocity vector (direction) by using a negative number")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Swap start and end size")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Activate gravity by setting it to 0,1,0"))),Object(i.b)("h1",{id:"conclusion"},"Conclusion"),Object(i.b)("p",null,"You have learned that many different effects can be created by changing\nthe parameters and textures of one general emitter object."),Object(i.b)("p",null,"Now you move on to another exciting chapter -- the simulation of\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/beginner/hello_physics"}),"physical objects"),". Let's shoot\nsome cannon balls at a brick wall!"))}b.isMDXComponent=!0},441:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return f}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c({},t,{},e)),a},m=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=b(a),d=n,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||i;return a?r.a.createElement(f,c({ref:t},s,{components:a})):r.a.createElement(f,c({ref:t},s))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var s=2;s<i;s++)l[s]=a[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);