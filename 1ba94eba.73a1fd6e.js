(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{180:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return u}));var a=t(1),o=t(9),i=(t(0),t(441)),r={},s={id:"jme3/beginner/hello_audio",title:"hello_audio",description:"Previous: [Hello Terrain](../../jme3/beginner/hello_terrain), Next:",source:"@site/docs/jme3/beginner/hello_audio.md",permalink:"/wikidemo/docs/jme3/beginner/hello_audio",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/beginner/hello_audio.md",sidebar:"main",previous:{title:"hello_terrain",permalink:"/wikidemo/docs/jme3/beginner/hello_terrain"},next:{title:"hello_effects",permalink:"/wikidemo/docs/jme3/beginner/hello_effects"}},l=[],c={rightToc:l};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Previous: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/beginner/hello_terrain"}),"Hello Terrain"),", Next:\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/beginner/hello_effects"}),"Hello Effects")),Object(i.b)("p",null,"This tutorial explains how to add 3D sound to a game, and how to make\nsounds play together with events, such as clicking. You learn how to use\nan Audio Listener and Audio Nodes. You also make use of an Action\nListener and a MouseButtonTrigger from the previous ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/beginner/hello_input_system"}),"Hello\nInput")," tutorial to make a\nmouse click trigger a gun shot sound."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},'To use the example assets in a new jMonkeyEngine SDK project,\nright-click your project, select "Properties, go to "Libraries, press\n"Add Library and add the "jme3-test-data library.'))),Object(i.b)("h1",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'package jme3test.helloworld;\n\nimport com.jme3.app.SimpleApplication;\nimport com.jme3.audio.AudioNode;\nimport com.jme3.audio.AudioData.DataType;\nimport com.jme3.input.MouseInput;\nimport com.jme3.input.controls.ActionListener;\nimport com.jme3.input.controls.MouseButtonTrigger;\nimport com.jme3.material.Material;\nimport com.jme3.math.ColorRGBA;\nimport com.jme3.scene.Geometry;\nimport com.jme3.scene.shape.Box;\n\n/** Sample 11 - playing 3D audio. */\npublic class HelloAudio extends SimpleApplication {\n\n  private AudioNode audio_gun;\n  private AudioNode audio_nature;\n  private Geometry player;\n\n  public static void main(String[] args) {\n    HelloAudio app = new HelloAudio();\n    app.start();\n  }\n\n  @Override\n  public void simpleInitApp() {\n    flyCam.setMoveSpeed(40);\n\n    /** just a blue box floating in space */\n    Box box1 = new Box(1, 1, 1);\n    player = new Geometry("Player", box1);\n    Material mat1 = new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");\n    mat1.setColor("Color", ColorRGBA.Blue);\n    player.setMaterial(mat1);\n    rootNode.attachChild(player);\n\n    /** custom init methods, see below */\n    initKeys();\n    initAudio();\n  }\n\n  /** We create two audio nodes. */\n  private void initAudio() {\n    /* gun shot sound is to be triggered by a mouse click. */\n    audio_gun = new AudioNode(assetManager, "Sound/Effects/Gun.wav", DataType.Buffer);\n    audio_gun.setPositional(false);\n    audio_gun.setLooping(false);\n    audio_gun.setVolume(2);\n    rootNode.attachChild(audio_gun);\n\n    /* nature sound - keeps playing in a loop. */\n    audio_nature = new AudioNode(assetManager, "Sound/Environment/Ocean Waves.ogg", DataType.Stream);\n    audio_nature.setLooping(true);  // activate continuous playing\n    audio_nature.setPositional(true);\n    audio_nature.setVolume(3);\n    rootNode.attachChild(audio_nature);\n    audio_nature.play(); // play continuously!\n  }\n\n  /** Declaring "Shoot" action, mapping it to a trigger (mouse left click). */\n  private void initKeys() {\n    inputManager.addMapping("Shoot", new MouseButtonTrigger(MouseInput.BUTTON_LEFT));\n    inputManager.addListener(actionListener, "Shoot");\n  }\n\n  /** Defining the "Shoot" action: Play a gun sound. */\n  private ActionListener actionListener = new ActionListener() {\n    @Override\n    public void onAction(String name, boolean keyPressed, float tpf) {\n      if (name.equals("Shoot") && !keyPressed) {\n        audio_gun.playInstance(); // play each instance once!\n      }\n    }\n  };\n\n  /** Move the listener with the a camera - for 3D audio. */\n  @Override\n  public void simpleUpdate(float tpf) {\n    listener.setLocation(cam.getLocation());\n    listener.setRotation(cam.getRotation());\n  }\n\n}\n')),Object(i.b)("p",null,"When you run the sample, you should see a blue cube. You should hear a\nnature-like ambient sound. When you click, you hear a loud shot."),Object(i.b)("h1",{id:"understanding-the-code-sample"},"Understanding the Code Sample"),Object(i.b)("p",null,"In the ",Object(i.b)("inlineCode",{parentName:"p"},"initSimpleApp()")," method, you create a simple blue cube geometry\ncalled ",Object(i.b)("inlineCode",{parentName:"p"},"player")," and attach it to the scene -- this is just arbitrary\nsample content, so you see something when running the audio sample."),Object(i.b)("p",null,"Let's have a closer look at ",Object(i.b)("inlineCode",{parentName:"p"},"initAudio()")," to learn how to use\n","`","AudioNode","`","s."),Object(i.b)("h1",{id:"audionodes"},"AudioNodes"),Object(i.b)("p",null,"Adding sound to your game is quite simple: Save your audio files into\nyour ",Object(i.b)("inlineCode",{parentName:"p"},"assets/Sound")," directory. JME3 supports both Ogg Vorbis (.ogg) and\nWave (.wav) file formats."),Object(i.b)("p",null,"For each sound, you create an AudioNode. You can use an AudioNode like\nany node in the JME scene graph, e.g. attach it to other Nodes. You\ncreate one node for a gunshot sound, and one node for a nature sound."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"  private AudioNode audio_gun;\n  private AudioNode audio_nature;\n")),Object(i.b)("p",null,"Look at the custom ",Object(i.b)("inlineCode",{parentName:"p"},"initAudio()")," method: Here you initialize the sound\nobjects and set their parameters."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-{.Java}"}),'audio_gun = new AudioNode(assetManager, "Sound/Effects/Gun.wav", DataType.Buffer);\n    ...\naudio_nature = new AudioNode(assetManager, "Sound/Environment/Nature.ogg", DataType.Stream);\n')),Object(i.b)("p",null,"These two lines create new sound nodes from the given audio files in the\nAssetManager. The ",Object(i.b)("inlineCode",{parentName:"p"},"DataType.Buffer")," flag means that you want to buffer\nthese sounds before playing. (If you set this flag to ",Object(i.b)("inlineCode",{parentName:"p"},"DataType.Stream"),",\nthe sound will be streamed, which makes sense for really long sounds.)"),Object(i.b)("p",null,"You want the gunshot sound to play ",Object(i.b)("em",{parentName:"p"},"once")," (you don't want it to loop).\nYou also specify its volume as gain factor (at 0, sound is muted, at 2,\nit is twice as loud, etc.)."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"    audio_gun.setPositional(false);\n    audio_gun.setLooping(false);\n    audio_gun.setVolume(2);\n    rootNode.attachChild(audio_gun);\n")),Object(i.b)("p",null,"::: {.important}\nNote that setPositional(false) is pretty important when you use stereo\nsounds. Positional sounds must always be mono audio files, otherwise the\nengine will remind it to you with a crash.\n:::"),Object(i.b)("p",null,"The nature sound is different: You want it to loop ",Object(i.b)("em",{parentName:"p"},"continuously")," as\nbackground sound. This is why you set looping to true, and immediately\ncall the play() method on the node. You also choose to set its volume to\n3."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"    audio_nature.setLooping(true); // activate continuous playing\n    ...\n    audio_nature.setVolume(3);\n    rootNode.attachChild(audio_nature);\n    audio_nature.play(); // play continuously!\n  }\n")),Object(i.b)("p",null,"Here you make audio","_","nature a positional sound that comes from a certain\nplace. For that you give the node an explicit translation, in this\nexample, you choose Vector3f.ZERO (which stands for the coordinates\n",Object(i.b)("inlineCode",{parentName:"p"},"0.0f,0.0f,0.0f"),", the center of the scene.) Since jME supports 3D audio,\nyou are now able to hear this sound coming from this particular\nlocation. Making the sound positional is optional. If you don't use\nthese lines, the ambient sound comes from every direction."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"    ...\n    audio_nature.setPositional(true);\n    audio_nature.setLocalTranslation(Vector3f.ZERO.clone());\n    ...\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Attach AudioNodes into the scene graph like all nodes, to make certain\nmoving nodes stay up-to-date. If you don't attach them, they are still\naudible and you don't get an error message but 3D sound will not work as\nexpected. AudioNodes can be attached directly to the root node or they\ncan be attached inside a node that is moving through the scene and both\nthe AudioNode and the 3d position of the sound it is generating will\nmove accordingly."))),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"playInstance always plays the sound from the position of the AudioNode\nso multiple gunshots from one gun (for example) can be generated this\nway, however if multiple guns are firing at once then an AudioNode is\nneeded for each one."))),Object(i.b)("h1",{id:"triggering-sound"},"Triggering Sound"),Object(i.b)("p",null,"Let's have a closer look at ",Object(i.b)("inlineCode",{parentName:"p"},"initKeys()"),": As you learned in previous\ntutorials, you use the ",Object(i.b)("inlineCode",{parentName:"p"},"inputManager")," to respond to user input. Here you\nadd a mapping for a left mouse button click, and name this new action\n",Object(i.b)("inlineCode",{parentName:"p"},"Shoot"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'  /** Declaring "Shoot" action, mapping it to a trigger (mouse left click). */\n  private void initKeys() {\n    inputManager.addMapping("Shoot", new MouseButtonTrigger(MouseInput.BUTTON_LEFT));\n    inputManager.addListener(actionListener, "Shoot");\n  }\n')),Object(i.b)("p",null,"Setting up the ActionListener should also be familiar from previous\ntutorials. You declare that, when the trigger (the mouse button) is\npressed and released, you want to play a gun sound."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'  /** Defining the "Shoot" action: Play a gun sound. */\n  private ActionListener actionListener = new ActionListener() {\n    @Override\n    public void onAction(String name, boolean keyPressed, float tpf) {\n      if (name.equals("Shoot") && !keyPressed) {\n        audio_gun.playInstance(); // play each instance once!\n      }\n    }\n  };\n')),Object(i.b)("p",null,"Since you want to be able to shoot fast repeatedly, so you do not want\nto wait for the previous gunshot sound to end before the next one can\nstart. This is why you play this sound using the ",Object(i.b)("inlineCode",{parentName:"p"},"playInstance()"),"\nmethod. This means that every click starts a new instance of the sound,\nso two instances can overlap. You set this sound not to loop, so each\ninstance only plays once. As you would expect it of a gunshot."),Object(i.b)("h1",{id:"ambient-or-situational"},"Ambient or Situational?"),Object(i.b)("p",null,"The two sounds are two different use cases:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"A gunshot is situational. You want to play it only once, right when\nit is triggered."),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"This is why you ",Object(i.b)("inlineCode",{parentName:"li"},"setLooping(false)"),"."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The nature sound is an ambient, background noise. You want it to\nstart playing from the start, as long as the game runs."),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"This is why you ",Object(i.b)("inlineCode",{parentName:"li"},"setLooping(true)"),".")))),Object(i.b)("p",null,"Now every sound knows whether it should loop or not."),Object(i.b)("p",null,"Apart from the looping boolean, another difference is where\n",Object(i.b)("inlineCode",{parentName:"p"},"play().playInstance()")," is called on those nodes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"You start playing the background nature sound right after you have\ncreated it, in the initAudio() method.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-{=html}"}),"\x3c!-- --\x3e\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"    audio_nature.play(); // play continuously!\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The gunshot sound, however, is triggered situationally, once, only\nas part of the ",Object(i.b)("inlineCode",{parentName:"li"},"Shoot")," input action that you defined in the\nActionListener.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-{=html}"}),"\x3c!-- --\x3e\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'  /** Defining the "Shoot" action: Play a gun sound. */\n  private ActionListener actionListener = new ActionListener() {\n    @Override\n    public void onAction(String name, boolean keyPressed, float tpf) {\n      if (name.equals("Shoot") && !keyPressed) {\n        audio_gun.playInstance(); // play each instance once!\n      }\n    }\n  };\n')),Object(i.b)("h1",{id:"buffered-or-streaming"},"Buffered or Streaming?"),Object(i.b)("p",null,"As of 3.1-alpha2, the Enum in the AudioNode constructor defines whether\nthe audio is buffered or streamed. For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'audio_gunshot = new AudioNode(assetManager, "Sound/Effects/Gun.wav", DataType.Buffer); // buffered\n...\naudio_nature = new AudioNode(assetManager, "Sound/Environment/Nature.ogg", DataType.Stream); // streamed\n')),Object(i.b)("p",null,"Typically, you stream long sounds, and buffer short sounds."),Object(i.b)("p",null,"Note that streamed sounds can not loop (i.e. setLooping will not work as\nyou expect). Check the getStatus on the node and if it has stopped\nrecreate the node. (In 3.1-alpha2, this is wrong). If you still run 3.0,\nthe above is still the case aswell as a simple boolean will be used\ninstead of ",Object(i.b)("inlineCode",{parentName:"p"},"DataType")),Object(i.b)("h1",{id:"play-or-playinstance"},"Play() or PlayInstance()?"),Object(i.b)("p",null,"+-----------------------------------+-----------------------------------+\n| audio.play()                      | audio.playInstance()              |\n+===================================+===================================+\n| Plays buffered sounds.            | Plays buffered sounds.            |\n+-----------------------------------+-----------------------------------+\n| Plays streamed sounds.            | Cannot play streamed sounds.      |\n+-----------------------------------+-----------------------------------+\n| The same sound cannot play twice  | The same sounds can play multiple |\n| at the same time.                 | times and overlap.                |\n+-----------------------------------+-----------------------------------+"),Object(i.b)("h1",{id:"your-ear-in-the-scene"},"Your Ear in the Scene"),Object(i.b)("p",null,"To create a 3D audio effect, JME3 needs to know the position of the\nsound source, and the position of the ears of the player. The ears are\nrepresented by an 3D Audio Listener object. The ",Object(i.b)("inlineCode",{parentName:"p"},"listener")," object is a\ndefault object in a SimpleApplication."),Object(i.b)("p",null,"In order to make the most of the 3D audio effect, you must use the\n",Object(i.b)("inlineCode",{parentName:"p"},"simpleUpdate()")," method to move and rotate the listener (the player's\nears) together with the camera (the player's eyes)."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"  public void simpleUpdate(float tpf) {\n    listener.setLocation(cam.getLocation());\n    listener.setRotation(cam.getRotation());\n  }\n")),Object(i.b)("p",null,"If you don't do that, the results of 3D audio will be quite random."),Object(i.b)("h1",{id:"global-directional-positional"},"Global, Directional, Positional?"),Object(i.b)("p",null,"In this example, you defined the nature sound as coming from a certain\nposition, but not the gunshot sound. This means your gunshot is global\nand can be heard everywhere with the same volume. JME3 also supports\ndirectional sounds which you can only hear from a certain direction."),Object(i.b)("p",null,"It makes equal sense to make the gunshot positional, and let the ambient\nsound come from every direction. How do you decide which type of 3D\nsound to use from case to case?"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"In a game with moving enemies you may want to make the gun shot or\nfootsteps positional sounds. In these cases you must move the\nAudioNode to the location of the enemy before ","`","playInstance()","`","ing\nit. This way a player with stereo speakers hears from which\ndirection the enemy is coming.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Similarly, you may have game levels where you want one background\nsound to play globally. In this case, you would make the AudioNode\nneither positional nor directional (set both to false).")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},'If you want sound to be "absorbed by the walls and only broadcast in\none direction, you would make this AudioNode directional. This\ntutorial does not discuss directional sounds, you can read about\n',Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/audio"}),"Advanced Audio")," here."))),Object(i.b)("p",null,"In short, you must choose in every situation whether it makes sense for\na sound to be global, directional, or positional."),Object(i.b)("h1",{id:"conclusion"},"Conclusion"),Object(i.b)("p",null,"You now know how to add the two most common types of sound to your game:\nGlobal sounds and positional sounds. You can play sounds in two ways:\nEither continuously in a loop, or situationally just once. You know the\ndifference between buffering short sounds and streaming long sounds. You\nknow the difference between playing overlapping sound instances, and\nplaying unique sounds that cannot overlap with themselves. You also\nlearned to use sound files that are in either .ogg or .wav format."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"JME's Audio implementation also supports more advanced effects such as\nreverberation and Doppler effect. Use these \"pro features to make audio\nsound different depending on whether it's in the hallway, in a cave,\noutdoors, or in a carpeted room. Find out more about environmental\neffects from the sample code included in the jme3test directory and from\nthe advanced ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/audio"}),"Audio")," docs."))),Object(i.b)("p",null,"Want some fire and explosions to go with your sounds? Read on to learn\nmore about ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/beginner/hello_effects"}),"effects"),"."),Object(i.b)("p",null,"See also:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"../../jme3/advanced/audio"}),"Audio"))))}u.isMDXComponent=!0},441:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),u=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s({},n,{},e)),t},d=function(e){var n=u(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),b=a,m=d["".concat(r,".").concat(b)]||d[b]||p[b]||i;return t?o.a.createElement(m,s({ref:n},c,{components:t})):o.a.createElement(m,s({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=b;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var c=2;c<i;c++)r[c]=t[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);