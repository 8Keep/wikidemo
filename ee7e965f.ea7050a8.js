(window.webpackJsonp=window.webpackJsonp||[]).push([[280],{419:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(1),o=n(9),r=(n(0),n(441)),i={},s={id:"jme3/contributions/entitysystem/advanced",title:"advanced",description:"In this article we explain how the JMonkey Entity System looks like and",source:"@site/docs/jme3/contributions/entitysystem/advanced.md",permalink:"/wikidemo/docs/jme3/contributions/entitysystem/advanced",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/contributions/entitysystem/advanced.md"},c=[{value:"Entity Sets",id:"entity-sets",children:[]},{value:"Components",id:"components",children:[]},{value:"What are Systems?",id:"what-are-systems",children:[]},{value:"Hashmaps",id:"hashmaps",children:[]},{value:"SQL",id:"sql",children:[]},{value:"Hybrid",id:"hybrid",children:[]},{value:"Id Generation",id:"id-generation",children:[]}],l={rightToc:c};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In this article we explain how the JMonkey Entity System looks like and\nwhy."),Object(r.b)("p",null,"If you are new to this subject please read the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../../../jme3/contributions/entitysystem/introduction"}),"Entity System\nIntroduction"),"\nfirst."),Object(r.b)("h1",{id:"multithreading"},"Multithreading"),Object(r.b)("p",null,"One difference between the JMonkey Entity System and other Entity\nSystems is that you are allowed to access the system from various\nthreads. This can give your game a huge performance boost because costly\ntask can easily separated in an own thread. This leads to an unique\ndesign of the components and the introduction to Entity Sets."),Object(r.b)("h2",{id:"entity-sets"},"Entity Sets"),Object(r.b)("p",null,"One part of this special approach are the Entity Sets. Most of the time\nyou want to work with Entities you create an Entity Set and add the\nclass names of the components you are interested in to the constructor.\nIn the background the Entity Set now creates Entity objects for all\nentities that contain the passed component classes. This Entities\n",Object(r.b)("strong",{parentName:"p"},"only")," hold the the components the Set is interested in. This means\ndifferent Entity Sets have two different Entity objects for the same\nentity. Therefore changes of one entity must be synchronized with the\nother entity sets. This works with events created for every change and\npassed to the other entity sets. With the method applyChanges() this\nentity Set will update all of their entities or remove/add new ones.\nBesides after this method call you have a direct access to all\nadded,changed and removed entities separately and there is no need to\nloop through all entities."),Object(r.b)("h2",{id:"components"},"Components"),Object(r.b)("p",null,"Because components have no other methods except the getter, changes are\nmade by replacing the component of an entity with a new one. Therefore\nan entity can only have one component of the same class. If a component\nwould have a setter no event would fired and parallel processing would\nnot be possible anymore. It is important that you only store pure data\nin the components because otherwise you would no longer know where you\ncan find the logic and the approach of a clear software design would get\nlost."),Object(r.b)("p",null,"::: {.important}\nBeginners tend to add large objects like spatials and geometries to a\ncomponent. This is a big mistake because such objects contain logic and\nin our approach components are data only. Abstract it to a general level\nor store it completely in the systems.\n:::"),Object(r.b)("p",null,"::: {.important}\nNever subclass Component classes.\n:::"),Object(r.b)("h2",{id:"what-are-systems"},"What are Systems?"),Object(r.b)("p",null,"Simply all objects that use entities/components can be called a system.\nFor example ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../../../jme3/advanced/application_states"}),"AppStates"),"\ncan deal with different components and can easily be added to the\nApplication."),Object(r.b)("p",null,"::: {.important}\nNever modify the same component from different systems.\n:::"),Object(r.b)("p",null,"If two systems are modifying the same components then there is a design\nflaw. This is a sign that there is a missing component or system."),Object(r.b)("h1",{id:"the-back-end"},"The Back End"),Object(r.b)("p",null,"There are two different ways of storing the information:"),Object(r.b)("h2",{id:"hashmaps"},"Hashmaps"),Object(r.b)("p",null,"For every component class a new Hashmap is created which contains the\nentityId as a key and the component as a value. Therefore if you need to\nget to know all entities which owns components of a certain type the\nsystem will search in these Hashmaps for same entityIds."),Object(r.b)("h2",{id:"sql"},"SQL"),Object(r.b)("p",null,"All information of the components are stored in an SQL Database, this is\ndone via reflection. Therefore all Components need an empty constructor\nwhen they are stored in a database. Otherwise it is not possible to load\nthe Component."),Object(r.b)("p",null,"Because SQL librarys can be different this Entity System only\nconcentrate on working with hsqldb. ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://hsqldb.org/"}),"http://hsqldb.org/")),Object(r.b)("h2",{id:"hybrid"},"Hybrid"),Object(r.b)("p",null,"Because saving/loading the component objects from a SQL Database is slow\nthis does not work for components who are changed recently.\n(PositionComponent) On the other hand checking weather an entity owns a\nspecial component ist faster in a SQL database. To keep both benefits\nthere is the Hybrid approach:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Components are put into a Hashmap.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Persistent Components are stored in the SQL database."))),Object(r.b)("h2",{id:"id-generation"},"Id Generation"),Object(r.b)("p",null,"Every entity has a unique id which is a long. Ids are not reused because\nafterward they would not be unique anymore which would cause a huge\npenalty."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Often people are scared that they would ran out of ids: If you create a\nnew entity every nano second you would need roughly 585 years before it\nwraps."))))}d.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),d=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},h=function(e){var t=d(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),h=d(n),b=a,m=h["".concat(i,".").concat(b)]||h[b]||p[b]||r;return n?o.a.createElement(m,s({ref:t},l,{components:n})):o.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);