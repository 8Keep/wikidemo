(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{330:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var a=t(1),i=t(9),l=(t(0),t(441)),r={},o={id:"jme3/advanced/nifty_gui_java_layout",title:"nifty_gui_java_layout",description:"1.  [Nifty GUI Concepts](../../jme3/advanced/nifty_gui)",source:"@site/docs/jme3/advanced/nifty_gui_java_layout.md",permalink:"/wikidemo/docs/jme3/advanced/nifty_gui_java_layout",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/nifty_gui_java_layout.md"},c=[{value:"Make Screens",id:"make-screens",children:[]},{value:"Make Layers",id:"make-layers",children:[]},{value:"Make Panels",id:"make-panels",children:[]},{value:"Add Images",id:"add-images",children:[]},{value:"Add Static Text",id:"add-static-text",children:[]},{value:"Add Controls",id:"add-controls",children:[{value:"Label Control",id:"label-control",children:[]},{value:"Button Control",id:"button-control",children:[]},{value:"Other Controls",id:"other-controls",children:[]}]}],d={rightToc:c};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui"}),"Nifty GUI Concepts"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_best_practices"}),"Nifty GUI Best\nPractices"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_xml_layout"}),"Nifty GUI XML Layout"),"\nor ",Object(l.b)("strong",{parentName:"p"},"Nifty GUI Java Layout"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_overlay"}),"Nifty GUI Overlay")," or\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_projection"}),"Nifty GUI Projection"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_java_interaction"}),"Interact with the GUI from\nJava")))),Object(l.b)("p",null,'You can "draw" the GUI to the screen by writing Java code --\nalternatively to using XML. Typically you lay out the static base GUI in\nXML, and use Java commands if you need to change the GUI dynamically at\nruntime. In theory, you can also lay out the whole GUI in Java (but we\ndon\'t cover that here).'),Object(l.b)("h1",{id:"sample-code"},"Sample Code"),Object(l.b)("p",null,"Sample project"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Original Source Code:"),Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/nifty-gui/nifty-gui/tree/1.4/nifty-examples/src/main/java/de/lessvoid/nifty/examples/defaultcontrols"}),"/nifty-examples/src/main/java/de/lessvoid/nifty/examples/defaultcontrols/"),".")),Object(l.b)("p",null,"Just so you get a quick picture what Nifty GUI\\'s Java Syntax looks\nlike, here is the most basic example. It creates a screen with a layer\nand a panel that contains a button."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'package mygame;\n\nimport com.jme3.app.Application;\nimport com.jme3.app.SimpleApplication;\nimport com.jme3.app.state.BaseAppState;\nimport com.jme3.niftygui.NiftyJmeDisplay;\nimport de.lessvoid.nifty.Nifty;\nimport de.lessvoid.nifty.builder.LayerBuilder;\nimport de.lessvoid.nifty.builder.PanelBuilder;\nimport de.lessvoid.nifty.builder.ScreenBuilder;\nimport de.lessvoid.nifty.controls.button.builder.ButtonBuilder;\nimport de.lessvoid.nifty.screen.DefaultScreenController;\n\npublic class MyStartScreen extends BaseAppState {\n\n    @Override\n    protected void initialize(Application app) {\n        //It is technically safe to do all initialization and cleanup in the\n        //onEnable()/onDisable() methods. Choosing to use initialize() and\n        //cleanup() for this is a matter of performance specifics for the\n        //implementor.\n        //TODO: initialize your AppState, e.g. attach spatials to rootNode\n    }\n\n    @Override\n    protected void cleanup(Application app) {\n        //TODO: clean up what you initialized in the initialize method,\n        //e.g. remove all spatials from rootNode\n    }\n\n    //onEnable()/onDisable() can be used for managing things that should\n    //only exist while the state is enabled. Prime examples would be scene\n    //graph attachment or input listener attachment.\n    @Override\n    protected void onEnable() {\n        NiftyJmeDisplay niftyDisplay = NiftyJmeDisplay.newNiftyJmeDisplay(\n                getApplication().getAssetManager(),\n                getApplication().getInputManager(),\n                getApplication().getAudioRenderer(),\n                getApplication().getGuiViewPort());\n\n        Nifty nifty = niftyDisplay.getNifty();\n        getApplication().getGuiViewPort().addProcessor(niftyDisplay);\n        ((SimpleApplication) getApplication()).getFlyByCamera().setDragToRotate(true);\n\n        nifty.loadStyleFile("nifty-default-styles.xml");\n        nifty.loadControlFile("nifty-default-controls.xml");\n\n        // <screen>\n        nifty.addScreen("Screen_ID", new ScreenBuilder("Hello Nifty Screen"){{\n            controller(new DefaultScreenController()); // Screen properties\n\n            // <layer>\n            layer(new LayerBuilder("Layer_ID") {{\n                childLayoutVertical(); // layer properties, add more...\n\n                // <panel>\n                panel(new PanelBuilder("Panel_ID") {{\n                   childLayoutCenter(); // panel properties, add more...\n\n                    // GUI elements\n                    control(new ButtonBuilder("Button_ID", "Hello Nifty"){{\n                        alignCenter();\n                        valignCenter();\n                        height("5%");\n                        width("15%");\n                    }});\n\n                    //.. add more GUI elements here\n\n                }});\n                // </panel>\n              }});\n            // </layer>\n          }}.build(nifty));\n        // </screen>\n\n        nifty.gotoScreen("Screen_ID"); // start the screen\n    }\n\n    @Override\n    protected void onDisable() {\n        //Called when the state was previously enabled but is now disabled\n        //either because setEnabled(false) was called or the state is being\n        //cleaned up.\n    }\n\n    @Override\n    public void update(float tpf) {\n        //TODO: implement behavior during runtime\n    }\n\n}\n')),Object(l.b)("h1",{id:"implement-your-gui-layout"},"Implement Your GUI Layout"),Object(l.b)("p",null,Object(l.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/advanced/gui-layout-draft.png",alt:"gui-layout-draft.png"}))),Object(l.b)("p",null,"In this tutorial, you recreate the same screen as in the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_xml_layout"}),"Laying out the\nGUI in XML")," example."),Object(l.b)("p",null,"Create an Screen.Java file that extends BaseAppState in the mygame\ndirectory of your project. One Java file can contain several, or even\nall screens. As a reminder: Nifty displays one screen at a time; a\nscreen contains several layers on top of one another; each layer\ncontains panels that are embedded into another; the panels contain the\nactual content (text, images, or controls)."),Object(l.b)("p",null,"Next, setup your Nifty display."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'NiftyJmeDisplay niftyDisplay = NiftyJmeDisplay.newNiftyJmeDisplay(\n        getApplication().getAssetManager(),\n        getApplication().getInputManager(),\n        getApplication().getAudioRenderer(),\n        getApplication().getGuiViewPort());\n\nNifty nifty = niftyDisplay.getNifty();\ngetApplication().getGuiViewPort().addProcessor(niftyDisplay);\n((SimpleApplication) getApplication()).getFlyByCamera().setDragToRotate(true);\n\nnifty.loadStyleFile("nifty-default-styles.xml");\nnifty.loadControlFile("nifty-default-controls.xml");\n\n// \x3c!-- ... --\x3e\n\nnifty.gotoScreen("start"); // start the screen\n')),Object(l.b)("h2",{id:"make-screens"},"Make Screens"),Object(l.b)("p",null,"The following minimal Java file contains a start screen and a HUD\nscreen. (Neither has been defined yet.)"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'nifty.addScreen("start", new ScreenBuilder("start") {{\n    controller(new DefaultScreenController());\n    // \x3c!-- ... --\x3e\n}}.build(nifty));\n\nnifty.addScreen("hud", new ScreenBuilder("hud") {{\n    controller(new DefaultScreenController());\n    // \x3c!-- ... --\x3e\n}}.build(nifty));\n')),Object(l.b)("p",null,"Every Nifty GUI must have a start screen. The others (in this example,\nthe HUD screen) are optional."),Object(l.b)("h2",{id:"make-layers"},"Make Layers"),Object(l.b)("p",null,"The following Java code shows how we add layers to the start screen and\nHUD screen. Add the following to your ",Object(l.b)("inlineCode",{parentName:"p"},"Screen.java")," file:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'nifty.addScreen("start", new ScreenBuilder("start") {{\n    controller(new DefaultScreenController());\n    // layer added\n    layer(new LayerBuilder("background") {{\n        childLayoutCenter();\n        backgroundColor("#000f");\n\n        // \x3c!-- ... --\x3e\n    }});\n\n    layer(new LayerBuilder("foreground") {{\n        childLayoutVertical();\n        backgroundColor("#0000");\n\n        // \x3c!-- ... --\x3e\n    }});\n    // layer added\n\n}}.build(nifty));\n')),Object(l.b)("p",null,"Repeat the same, but use"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{}),'nifty.addScreen("hud", new ScreenBuilder("hud"){{\n')),Object(l.b)("p",null,"for the HUD screen."),Object(l.b)("p",null,"In a layer, you can now add panels and arrange them. Panels are\ncontainers that mark the areas where you want to display text, images,\nor controls (buttons etc) later."),Object(l.b)("h2",{id:"make-panels"},"Make Panels"),Object(l.b)("p",null,"A panel is the inner-most container (that will contain the actual\ncontent: text, images, or controls). You place panels inside layers. The\nfollowing panels go into in the ",Object(l.b)("inlineCode",{parentName:"p"},"start")," screen ",Object(l.b)("inlineCode",{parentName:"p"},"foreground")," layer:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'nifty.addScreen("start", new ScreenBuilder("start") {{\n    controller(new DefaultScreenController());\n    // layer added\n    layer(new LayerBuilder("background") {{\n        childLayoutCenter();\n        backgroundColor("#000f");\n\n        // \x3c!-- ... --\x3e\n    }});\n\n    layer(new LayerBuilder("foreground") {{\n        childLayoutVertical();\n        backgroundColor("#0000");\n\n        // panel added\n        panel(new PanelBuilder("panel_top") {{\n            childLayoutCenter();\n            alignCenter();\n            backgroundColor("#f008");\n            height("25%");\n            width("75%");\n        }});\n\n        panel(new PanelBuilder("panel_mid") {{\n            childLayoutCenter();\n            alignCenter();\n            backgroundColor("#0f08");\n            height("50%");\n            width("75%");\n        }});\n\n        panel(new PanelBuilder("panel_bottom") {{\n            childLayoutHorizontal();\n            alignCenter();\n            backgroundColor("#00f8");\n            height("25%");\n            width("75%");\n\n            panel(new PanelBuilder("panel_bottom_left") {{\n                childLayoutCenter();\n                valignCenter();\n                backgroundColor("#44f8");\n                height("50%");\n                width("50%");\n            }});\n\n            panel(new PanelBuilder("panel_bottom_right") {{\n                childLayoutCenter();\n                valignCenter();\n                backgroundColor("#88f8");\n                height("50%");\n                width("50%");\n            }});\n        }}); // panel added\n    }});\n    // layer added\n\n}}.build(nifty));\n')),Object(l.b)("p",null,"The following panels go into in the ",Object(l.b)("inlineCode",{parentName:"p"},"hud")," screen:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-{.Java}"}),'nifty.addScreen("hud", new ScreenBuilder("hud") {{\n    controller(new DefaultScreenController());\n\n    layer(new LayerBuilder("background") {{\n        childLayoutCenter();\n        backgroundColor("#000f");\n        // \x3c!-- ... --\x3e\n    }});\n\n    layer(new LayerBuilder("foreground") {{\n        childLayoutHorizontal();\n        backgroundColor("#0000");\n\n        // panel added\n        panel(new PanelBuilder("panel_left") {{\n            childLayoutVertical();\n            backgroundColor("#0f08");\n            height("100%");\n            width("80%");\n            // \x3c!-- spacer --\x3e\n        }});\n\n        panel(new PanelBuilder("panel_right") {{\n            childLayoutVertical();\n            backgroundColor("#00f8");\n            height("100%");\n            width("20%");\n\n            panel(new PanelBuilder("panel_top_right1") {{\n                childLayoutCenter();\n                backgroundColor("#00f8");\n                height("15%");\n                width("100%");\n            }});\n\n            panel(new PanelBuilder("panel_top_right2") {{\n                childLayoutCenter();\n                backgroundColor("#44f8");\n                height("15%");\n                width("100%");\n            }});\n\n            panel(new PanelBuilder("panel_bot_right") {{\n                childLayoutCenter();\n                valignCenter();\n                backgroundColor("#88f8");\n                height("70%");\n                width("100%");\n            }});\n        }}); // panel added\n    }});\n}}.build(nifty));\n')),Object(l.b)("p",null,"Try the sample. Remember to activate a screen using\n",Object(l.b)("inlineCode",{parentName:"p"},'nifty.gotoScreen("start");')," or ",Object(l.b)("inlineCode",{parentName:"p"},"hud")," respectively. The result should\nlook as follows:"),Object(l.b)("p",null,Object(l.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/advanced/nifty-gui-panels.png",alt:"nifty-gui-panels.png"}))),Object(l.b)("h1",{id:"adding-content-to-panels"},"Adding Content to Panels"),Object(l.b)("p",null,"See also ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nifty-gui/nifty-gui/raw/1.4/nifty-core/manual/nifty-gui-the-manual-1.3.2.pdf"}),"Nifty GUI - the Manual:\nLayouts"),"\non the Nifty GUI site."),Object(l.b)("h2",{id:"add-images"},"Add Images"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"start-background.png")," image is a fullscreen background picture. In\nthe ",Object(l.b)("inlineCode",{parentName:"p"},"start")," screen, add the following image element:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'nifty.addScreen("start", new ScreenBuilder("start") {{\n    controller(new DefaultScreenController());\n    // layer added\n    layer(new LayerBuilder("background") {{\n        childLayoutCenter();\n        backgroundColor("#000f");\n\n        // add image\n        image(new ImageBuilder() {{\n            filename("Interface/start-background.png");\n        }});\n    }});\n    // \x3c!-- ... --\x3e\n}}.build(nifty));\n')),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"hud-frame.png")," image is a transparent frame that we use as HUD\ndecoration. In the ",Object(l.b)("inlineCode",{parentName:"p"},"hud")," screen, add the following image element:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'nifty.addScreen("hud", new ScreenBuilder("hud") {{\n    controller(new DefaultScreenController());\n\n    layer(new LayerBuilder("background") {{\n        childLayoutCenter();\n        backgroundColor("#000f");\n\n        // add image\n        image(new ImageBuilder() {{\n            filename("Interface/hud-frame.png");\n        }});\n    }});\n    // \x3c!-- ... --\x3e\n}}.build(nifty));\n')),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"face1.png")," image is an image that you want to use as a status icon.\nIn the ",Object(l.b)("inlineCode",{parentName:"p"},"hud")," screens ",Object(l.b)("inlineCode",{parentName:"p"},"foreground")," layer, add the following image\nelement:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'panel(new PanelBuilder("panel_top_right2") {{\n    childLayoutCenter();\n    backgroundColor("#44f8");\n    height("15%");\n    width("100%");\n\n    // add image\n    image(new ImageBuilder() {{\n        filename("Interface/face1.png");\n        valignCenter();\n        alignCenter();\n        height("50%");\n        width("30%");\n    }});\n}});\n')),Object(l.b)("p",null,"This image is scaled to use 50% of the height and 30% of the width of\nits container."),Object(l.b)("h2",{id:"add-static-text"},"Add Static Text"),Object(l.b)("p",null,"The game title is a typical example of static text. In the ",Object(l.b)("inlineCode",{parentName:"p"},"start"),"\nscreen ",Object(l.b)("inlineCode",{parentName:"p"},"foreground")," layer, add the following text element:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'// panel added\npanel(new PanelBuilder("panel_top") {{\n    childLayoutCenter();\n    alignCenter();\n    backgroundColor("#f008");\n    height("25%");\n    width("75%");\n\n    text(new TextBuilder() {{\n        text("My Cool Game");\n        font("Interface/Fonts/Default.fnt");\n        height("100%");\n        width("100%");\n    }});\n}});\n')),Object(l.b)("p",null,"For longer pieces of static text, such as an introduction, you can use\n",Object(l.b)("inlineCode",{parentName:"p"},'wrap="true"'),". Setting ",Object(l.b)("inlineCode",{parentName:"p"},'wrap="true"')," will only work when you set a width\nfor the text element, so that Nifty knows when to wrap a line. Add the\nfollowing text element to the ",Object(l.b)("inlineCode",{parentName:"p"},"Start")," screen ",Object(l.b)("inlineCode",{parentName:"p"},"foreground")," layer:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'panel(new PanelBuilder("panel_mid") {{\n    childLayoutCenter();\n    alignCenter();\n    backgroundColor("#0f08");\n    height("50%");\n    width("75%");\n\n    // add text\n    text(new TextBuilder() {{\n        text("Here goes some text describing the game and the rules and stuff. "\n           + "Incidentally, the text is quite long and needs to wrap at the end of lines.");\n        font("Interface/Fonts/Default.fnt");\n        wrap(true);\n        height("100%");\n        width("100%");\n    }});\n}});\n')),Object(l.b)("p",null,'The font used is jME3\'s default font "Interface/Fonts/Default.fnt" which\nis included in the jMonkeyEngine.JAR. You can add your own fonts to your\nown ',Object(l.b)("inlineCode",{parentName:"p"},"assets/Interface")," directory. Set your font to the one you created\nduring the start of the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_xml_layout.xml#implement-your-gui-layout#"}),"Gui\nImplementation"),"\nphase of your game."),Object(l.b)("h2",{id:"add-controls"},"Add Controls"),Object(l.b)("p",null,"Before you can use any control, you must load a Control Definition\nfirst. Thats why we add the following two lines ",Object(l.b)("em",{parentName:"p"},"before")," the screen\ndefinitions:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'nifty.loadStyleFile("nifty-default-styles.xml");\nnifty.loadControlFile("nifty-default-controls.xml");\n')),Object(l.b)("h3",{id:"label-control"},"Label Control"),Object(l.b)("p",null,"Use label controls for text that you want to edit dynamically from Java.\nOne example for this is the score display. In the ",Object(l.b)("inlineCode",{parentName:"p"},"hud")," screen's\n",Object(l.b)("inlineCode",{parentName:"p"},"foreground")," layer, add the following text element:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'panel(new PanelBuilder("panel_top_right1") {{\n    childLayoutCenter();\n    backgroundColor("#00f8");\n    height("15%");\n    width("100%");\n\n    control(new LabelBuilder(){{\n        color("#000");\n        text("123");\n        width("100%");\n        height("100%");\n    }});\n}});\n')),Object(l.b)("p",null,"Note that the width and height do not scale the bitmap font, but make\nindirectly certain it is centered. If you want a different size for the\nfont, you need to provide an extra bitmap font (they come with fixes\nsizes and don't scale well)."),Object(l.b)("h3",{id:"button-control"},"Button Control"),Object(l.b)("p",null,"Our GUI plan asks for two buttons on the start screen. You add the Start\nand Quit buttons to the bottom panel of the ",Object(l.b)("inlineCode",{parentName:"p"},"start")," screen using the\n",Object(l.b)("inlineCode",{parentName:"p"},"<control>")," element:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'panel(new PanelBuilder("panel_bottom_left") {{\n    childLayoutCenter();\n    valignCenter();\n    backgroundColor("#44f8");\n    height("50%");\n    width("50%");\n\n    // add control\n    control(new ButtonBuilder("StartButton", "Start") {{\n        alignCenter();\n        valignCenter();\n        height("50%");\n        width("50%");\n    }});\n}});\n\npanel(new PanelBuilder("panel_bottom_right") {{\n    childLayoutCenter();\n    valignCenter();\n    backgroundColor("#88f8");\n    height("50%");\n    width("50%");\n\n    // add control\n    control(new ButtonBuilder("QuitButton", "Quit") {{\n        alignCenter();\n        valignCenter();\n        height("50%");\n        width("50%");\n    }});\n}});\n')),Object(l.b)("p",null,"Note that these controls don't do anything yet -- we'll get to that\nsoon."),Object(l.b)("h3",{id:"other-controls"},"Other Controls"),Object(l.b)("p",null,"Nifty additionally offers many customizable controls such as check\nboxes, text fields, menus, chats, tabs, ..."),Object(l.b)("p",null,"See also:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nifty-gui/nifty-gui/raw/1.4/nifty-core/manual/nifty-gui-the-manual-1.3.2.pdf"}),"Nifty GUI - the Manual:\nElements"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nifty-gui/nifty-gui/wiki/Controls"}),"Controls")))),Object(l.b)("h1",{id:"intermediate-result"},"Intermediate Result"),Object(l.b)("p",null,"When you preview this code in the jMonkeyEngine SDK, our tutorial demo\nshould looks as follows: A start screen with two buttons, and a game\nscreen with a simple HUD frame and a blue cube (which stands for any\njME3 game content)."),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"Remove all lines that set background colors, you only needed them to see\nthe arrangement."))),Object(l.b)("p",null,Object(l.b)("img",Object(a.a)({parentName:"p"},{src:"/images/jme3/advanced/nifty-gui-simple-demo.png",alt:"nifty-gui-simple-demo.png"}))),Object(l.b)("p",null,"Your ",Object(l.b)("inlineCode",{parentName:"p"},"Screen.java")," file should look like this:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'package mygame;\n\nimport com.jme3.app.Application;\nimport com.jme3.app.SimpleApplication;\nimport com.jme3.app.state.BaseAppState;\nimport com.jme3.niftygui.NiftyJmeDisplay;\nimport de.lessvoid.nifty.Nifty;\nimport de.lessvoid.nifty.builder.ImageBuilder;\nimport de.lessvoid.nifty.builder.LayerBuilder;\nimport de.lessvoid.nifty.builder.PanelBuilder;\nimport de.lessvoid.nifty.builder.ScreenBuilder;\nimport de.lessvoid.nifty.builder.TextBuilder;\nimport de.lessvoid.nifty.controls.button.builder.ButtonBuilder;\nimport de.lessvoid.nifty.controls.label.builder.LabelBuilder;\nimport de.lessvoid.nifty.screen.DefaultScreenController;\n\npublic class Screen extends BaseAppState {\n\n    @Override\n    protected void initialize(Application app) {\n        //It is technically safe to do all initialization and cleanup in the\n        //onEnable()/onDisable() methods. Choosing to use initialize() and\n        //cleanup() for this is a matter of performance specifics for the\n        //implementor.\n        //TODO: initialize your AppState, e.g. attach spatials to rootNode\n    }\n\n    @Override\n    protected void cleanup(Application app) {\n        //TODO: clean up what you initialized in the initialize method,\n        //e.g. remove all spatials from rootNode\n    }\n\n    //onEnable()/onDisable() can be used for managing things that should\n    //only exist while the state is enabled. Prime examples would be scene\n    //graph attachment or input listener attachment.\n    @Override\n    protected void onEnable() {\n        NiftyJmeDisplay niftyDisplay = NiftyJmeDisplay.newNiftyJmeDisplay(\n                getApplication().getAssetManager(),\n                getApplication().getInputManager(),\n                getApplication().getAudioRenderer(),\n                getApplication().getGuiViewPort());\n\n        Nifty nifty = niftyDisplay.getNifty();\n        getApplication().getGuiViewPort().addProcessor(niftyDisplay);\n        ((SimpleApplication) getApplication()).getFlyByCamera().setDragToRotate(true);\n\n        nifty.loadStyleFile("nifty-default-styles.xml");\n        nifty.loadControlFile("nifty-default-controls.xml");\n\n        nifty.addScreen("start", new ScreenBuilder("start") {{\n            controller(new DefaultScreenController());\n            // layer added\n            layer(new LayerBuilder("background") {{\n                childLayoutCenter();\n//                backgroundColor("#000f");\n\n                // add image\n                image(new ImageBuilder() {{\n                    filename("Interface/start-background.png");\n                }});\n            }});\n\n            layer(new LayerBuilder("foreground") {{\n                childLayoutVertical();\n//                backgroundColor("#0000");\n\n                // panel added\n                panel(new PanelBuilder("panel_top") {{\n                    childLayoutCenter();\n                    alignCenter();\n//                    backgroundColor("#f008");\n                    height("25%");\n                    width("75%");\n\n                    text(new TextBuilder() {{\n                        text("My Cool Game");\n                        font("Interface/Fonts/Arial.fnt");\n                        height("100%");\n                        width("100%");\n                    }});\n                }});\n\n                panel(new PanelBuilder("panel_mid") {{\n                    childLayoutCenter();\n                    alignCenter();\n//                    backgroundColor("#0f08");\n                    height("50%");\n                    width("75%");\n\n                    // add text\n                    text(new TextBuilder() {{\n                        text("Here goes some text describing the game and the rules and stuff. "\n                           + "Incidentally, the text is quite long and needs to wrap at the end of lines. ");\n                        font("Interface/Fonts/Arial.fnt");\n                        wrap(true);\n                        height("100%");\n                        width("100%");\n                    }});\n                }});\n\n                panel(new PanelBuilder("panel_bottom") {{\n                    childLayoutHorizontal();\n                    alignCenter();\n//                    backgroundColor("#00f8");\n                    height("25%");\n                    width("75%");\n\n                    panel(new PanelBuilder("panel_bottom_left") {{\n                        childLayoutCenter();\n                        valignCenter();\n//                        backgroundColor("#44f8");\n                        height("50%");\n                        width("50%");\n\n                        // add control\n                        control(new ButtonBuilder("StartButton", "Start") {{\n                            alignCenter();\n                            valignCenter();\n                            height("50%");\n                            width("50%");\n                        }});\n                    }});\n\n                    panel(new PanelBuilder("panel_bottom_right") {{\n                        childLayoutCenter();\n                        valignCenter();\n//                        backgroundColor("#88f8");\n                        height("50%");\n                        width("50%");\n\n                        // add control\n                        control(new ButtonBuilder("QuitButton", "Quit") {{\n                            alignCenter();\n                            valignCenter();\n                            height("50%");\n                            width("50%");\n                        }});\n                    }});\n                }}); // panel added\n            }});\n            // layer added\n\n        }}.build(nifty));\n\n        nifty.addScreen("hud", new ScreenBuilder("hud") {{\n            controller(new DefaultScreenController());\n\n            layer(new LayerBuilder("background") {{\n                childLayoutCenter();\n//                backgroundColor("#000f");\n\n                // add image\n                image(new ImageBuilder() {{\n                    filename("Interface/hud-frame.png");\n                }});\n            }});\n\n            layer(new LayerBuilder("foreground") {{\n                childLayoutHorizontal();\n//                backgroundColor("#0000");\n\n                // panel added\n                panel(new PanelBuilder("panel_left") {{\n                    childLayoutVertical();\n//                    backgroundColor("#0f08");\n                    height("100%");\n                    width("80%");\n                    // \x3c!-- spacer --\x3e\n                }});\n\n                panel(new PanelBuilder("panel_right") {{\n                    childLayoutVertical();\n//                    backgroundColor("#00f8");\n                    height("100%");\n                    width("20%");\n\n                    panel(new PanelBuilder("panel_top_right1") {{\n                        childLayoutCenter();\n//                        backgroundColor("#00f8");\n                        height("15%");\n                        width("100%");\n\n                        control(new LabelBuilder(){{\n                            color("#000");\n                            text("123");\n                            width("100%");\n                            height("100%");\n                        }});\n                    }});\n\n                    panel(new PanelBuilder("panel_top_right2") {{\n                        childLayoutCenter();\n//                        backgroundColor("#44f8");\n                        height("15%");\n                        width("100%");\n\n                        // add image\n                        image(new ImageBuilder() {{\n                            filename("Interface/face1.png");\n                            valignCenter();\n                            alignCenter();\n                            height("50%");\n                            width("30%");\n                        }});\n                    }});\n\n                    panel(new PanelBuilder("panel_bot_right") {{\n                        childLayoutCenter();\n                        valignCenter();\n//                        backgroundColor("#88f8");\n                        height("70%");\n                        width("100%");\n                    }});\n                }}); // panel added\n            }});\n        }}.build(nifty));\n\n        nifty.gotoScreen("hud"); // start the screen\n\n    }\n\n    @Override\n    protected void onDisable() {\n        //Called when the state was previously enabled but is now disabled\n        //either because setEnabled(false) was called or the state is being\n        //cleaned up.\n    }\n\n    @Override\n    public void update(float tpf) {\n        //TODO: implement behavior during runtime\n    }\n\n}\n')),Object(l.b)("h1",{id:"nifty-java-settings"},"Nifty Java Settings"),Object(l.b)("p",null,"Before initializing the nifty screens, you set up properties and\nregister media."),Object(l.b)("p",null,'+-----------------------------------+-----------------------------------+\n| Nifty Method                      | Description                       |\n+===================================+===================================+\n| registerSound(\\"mysound\\",        |                                   |\n| \\"Interface/abc.wav\\");           |                                   |\n+-----------------------------------+-----------------------------------+\n| registerMusic(\\"mymusic\\",        |                                   |\n| \\"Interface/xyz.ogg\\");           |                                   |\n+-----------------------------------+-----------------------------------+\n| r                                 |                                   |\n| egisterMouseCursor(\\"mypointer\\", |                                   |\n| \\"Interface/abc.png\\", 5, 4);     |                                   |\n+-----------------------------------+-----------------------------------+\n| registerEffect(?);                | ?                                 |\n+-----------------------------------+-----------------------------------+\n| setDebugOptionPanelColors(true);  | Highlight all panels, makes it    |\n|                                   | easier to arrange them.           |\n+-----------------------------------+-----------------------------------+'),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'nifty.registerMouseCursor("hand", "Interface/mouse-cursor-hand.png", 5, 4);\n')),Object(l.b)("h1",{id:"next-steps"},"Next Steps"),Object(l.b)("p",null,"Integrate the GUI into the game. Typically, you will overlay the GUI."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_overlay"}),"Nifty GUI Overlay"),"\n(recommended)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"../../jme3/advanced/nifty_gui_projection"}),"Nifty GUI Projection"),"\n(optional)"))))}p.isMDXComponent=!0},441:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return h}));var a=t(0),i=t.n(a);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=i.a.createContext({}),p=function(e){var n=i.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o({},n,{},e)),t},u=function(e){var n=p(e.components);return i.a.createElement(d.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},b=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(t),b=a,h=u["".concat(r,".").concat(b)]||u[b]||s[b]||l;return t?i.a.createElement(h,o({ref:n},d,{components:t})):i.a.createElement(h,o({ref:n},d))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,r=new Array(l);r[0]=b;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var d=2;d<l;d++)r[d]=t[d];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);