(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{315:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(9),i=(n(0),n(441)),o={},c={id:"jme3/advanced/building_recast",title:"building_recast",description:"jNavigation is Java jME port for Recast Navigation written in C++. The",source:"@site/docs/jme3/advanced/building_recast.md",permalink:"/wikidemo/docs/jme3/advanced/building_recast",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/building_recast.md"},l=[{value:"Adding new methods from native side",id:"adding-new-methods-from-native-side",children:[{value:"Manually adding code to wrapper",id:"manually-adding-code-to-wrapper",children:[]},{value:"Creating new wrapper with SWIG",id:"creating-new-wrapper-with-swig",children:[]}]}],d={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"jNavigation is Java jME port for Recast Navigation written in C++. The\nproject has two parts:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/QuietOne/jNavigation-native"}),"jNavigationNative"),"\ncontains Recast Navigation library and C++ wrapper for java")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/QuietOne/jNavigation"}),"jNavigation")," is Java\nproject that uses jNavigationNative and is the project that the end\nuser will use"))),Object(i.b)("p",null,"If there is need for updating Recast Navigation from native side, there\nare two kinds of updating bindings:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"only updating methods as the Recast made more efficient or more\nprecise")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"adding new methods for Recast use"))),Object(i.b)("h1",{id:"updating-methods"},"Updating methods"),Object(i.b)("p",null,"Only updating methods are easy. The requirements needed:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"C++ compiler")),Object(i.b)("p",null,"The jNavigationNative that has following folders and files (it has more,\nbut these are the most important for now):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Recast"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Include")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Source")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"README.md")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Recast","_","wrap.cxx - Java - C++ wrapper"))),Object(i.b)("p",null,"Updating the methods is only the matter of putting all headers from\nRecast Navigation to Include folder, source to Source folders, and then\nbuilding the project."),Object(i.b)("p",null,"As author of this project used the NetBeans 7.4 for building the\nproject, the following instruction is included, if the building from\nterminal doesn't work."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Setting ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://netbeans.org/kb/docs/cnd/beginning-jni-linux.html"}),"parameters for NetBeans\ncompiler"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Remove all headers from Header Files")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Remove all source files ",Object(i.b)("strong",{parentName:"p"},"EXCEPT Recast","_","wrap.cxx")," from Source\nFiles")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Right click on Header files, select ",Object(i.b)("inlineCode",{parentName:"p"},"Add Existing Item\u2026")," or\n",Object(i.b)("inlineCode",{parentName:"p"},"Add Existing Items from Folders\u2026")," and select needed headers")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Right click on Source files, select ",Object(i.b)("inlineCode",{parentName:"p"},"Add Existing Item\u2026")," or\n",Object(i.b)("inlineCode",{parentName:"p"},"Add Existing Items from Folders\u2026")," and select needed source files")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Build")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Add built project to jNavigation project")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Build jNavigation project"))),Object(i.b)("h2",{id:"adding-new-methods-from-native-side"},"Adding new methods from native side"),Object(i.b)("p",null,"This is more complicated process and it includes the all work done in\nNetBeans mentioned in previous section. After that, there are two ways\nto add new function:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"manually adding code to wrapper")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"creating new wrapper with ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://swig.org/"}),"SWIG")))),Object(i.b)("h3",{id:"manually-adding-code-to-wrapper"},"Manually adding code to wrapper"),Object(i.b)("p",null,"Example of method in wrapper:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"SWIGEXPORT jint JNICALL Java_com_jme3_ai_navigation_utils_RecastJNI_rcIntArray_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {\n ...\n}\n")),Object(i.b)("p",null,"The Recast","_","wrap.cxx uses SWIG wrapper so for declaring method in\nwrapper you must first use the keyword ",Object(i.b)("inlineCode",{parentName:"p"},"SWIGEXPORT")," then returning type\n(for more information on returning types see\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://docs.oracle.com/javase/1.5.0/docs/guide/jni/spec/types.html"}),"link"),"),\nthen again keyword ",Object(i.b)("inlineCode",{parentName:"p"},"JNICALL")," and then as the name of method\n",Object(i.b)("inlineCode",{parentName:"p"},"Java_com_jme3_ai_navigation_utils_RecastJNI_")," + ",Object(i.b)("inlineCode",{parentName:"p"},"name of class")," +\n",Object(i.b)("inlineCode",{parentName:"p"},"name of method"),", after that, there goes list of parameters needed for\nthe function (for more information see\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/functions.html"}),"link"),").\nIn body of method write how the function should be used."),Object(i.b)("p",null,"After adding method to wrapper, compile project and add it to\njNavigation. In jNavigation project in class\n",Object(i.b)("inlineCode",{parentName:"p"},"com.jme3.ai.navigation.utils.RecastJNI.java")," add native method, and\nafter that add in class from which you would like to use this method to\ncall this native method. It seems a little bit more complicated than it\nshould be, but this also for support for updating native side with SWIG."),Object(i.b)("h3",{id:"creating-new-wrapper-with-swig"},"Creating new wrapper with SWIG"),Object(i.b)("p",null,"In some temporary folder add all headers. It shouldn't contain any\nsubfolders."),Object(i.b)("p",null,"The following script was used for generating wrapper:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'%module Recast\n%include "carrays.i"\n%array_class(double, DoubleArray);\n%array_class(float, FloatArray);\n%array_class(int, IntArray);\n%array_class(unsigned char, UCharArray);\n%array_class(unsigned short, UShortArray);\n%array_class(unsigned int, UIntArray);\n%array_class(long, LongArray);\n%array_class(bool, BooleanArray)\n\n%{\n#include "DetourAlloc.h"\n#include "DetourAssert.h"\n#include "DetourCommon.h"\n#include "DetourCrowd.h"\n#include "DetourLocalBoundary.h"\n#include "DetourMath.h"\n#include "DetourNavMesh.h"\n#include "DetourNavMeshBuilder.h"\n#include "DetourNavMeshQuery.h"\n#include "DetourNode.h"\n#include "DetourObstacleAvoidance.h"\n#include "DetourPathCorridor.h"\n#include "DetourPathQueue.h"\n#include "DetourProximityGrid.h"\n#include "DetourStatus.h"\n#include "DetourTileCache.h"\n#include "DetourTileCacheBuilder.h"\n#include "Recast.h"\n#include "RecastAlloc.h"\n#include "RecastAssert.h"\n%}\n\n/* Let\'s just grab the original header file here */\n%include "DetourAlloc.h"\n%include "DetourAssert.h"\n%include "DetourCommon.h"\n%include "DetourCrowd.h"\n%include "DetourLocalBoundary.h"\n%include "DetourMath.h"\n%include "DetourNavMesh.h"\n%include "DetourNavMeshBuilder.h"\n%include "DetourNavMeshQuery.h"\n%include "DetourNode.h"\n%include "DetourObstacleAvoidance.h"\n%include "DetourPathCorridor.h"\n%include "DetourPathQueue.h"\n%include "DetourProximityGrid.h"\n%include "DetourStatus.h"\n%include "DetourTileCache.h"\n%include "DetourTileCacheBuilder.h"\n%include "Recast.h"\n%include "RecastAlloc.h"\n%include "RecastAssert.h"\n\n%pragma(java) jniclasscode=%{\n  static {\n    System.load("Recast");\n  }\n%}\n')),Object(i.b)("p",null,"If there are more headers at some moment, include them in both places."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Save script as Recast.i into temp folder with rest of the headers")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Install SWIG if not already")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Open terminal and go to folder where the script is")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Execute command ",Object(i.b)("inlineCode",{parentName:"p"},"swig -c++ -java Recast.i"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now SWIG will generate Java classes and new Recast","_","wrap.cxx")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Recast","_","wrap.cxx put in jNavigationNative with new headers and\nsource files, as previously mentioned")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Build that project")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"For jNavigation side, put only new methods in RecastJNI, and use\nwhere they are being used. For that you can see in Java class that\nare build with SWIG.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"If method uses some explicit SWIG type, try to use some method for\nconverting it into jME type, or similar. You can probably find\nsomething in package ",Object(i.b)("inlineCode",{parentName:"p"},"com.jme3.ai.navigation.utils")))))}p.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),p=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},s=function(e){var t=p(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=p(n),b=a,m=s["".concat(o,".").concat(b)]||s[b]||u[b]||i;return n?r.a.createElement(m,c({ref:t},d,{components:n})):r.a.createElement(m,c({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var d=2;d<i;d++)o[d]=n[d];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);