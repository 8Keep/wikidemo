(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{167:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return p}));var n=a(1),o=a(9),r=(a(0),a(441)),i={},l={id:"jme3/advanced/save_and_load",title:"save_and_load",description:"Spatials (that is Nodes and Geometries) can contain audio and light",source:"@site/docs/jme3/advanced/save_and_load.md",permalink:"/wikidemo/docs/jme3/advanced/save_and_load",editUrl:"https://github.com/8keep/wikidemo/edit/master/docs/jme3/advanced/save_and_load.md"},s=[],c={rightToc:s};function p(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Spatials (that is Nodes and Geometries) can contain audio and light\nnodes, particle emitters, controls, and user data (player score, health,\ninventory, etc). For your game distribution, you must convert all\noriginal models to a faster binary format. You save individual Spatials\nas well as scenes using ",Object(r.b)("inlineCode",{parentName:"p"},"com.jme3.export.binary.BinaryExporter"),"."),Object(r.b)("p",null,"The jMonkeyEngine's binary file format is called ",Object(r.b)("inlineCode",{parentName:"p"},".j3o"),". You can\nconvert, view and edit .j3o files and their materials in the\njMonkeyEngine ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../../sdk"}),"SDK")," and compose scenes (this does not\ninclude editing meshes). For the conversion, you can either use the\nBinaryExporters, or a context menu in the SDK."),Object(r.b)("p",null,"::: {.important}\nThe jMonkeyEngine's serialization system is the\n",Object(r.b)("inlineCode",{parentName:"p"},"com.jme3.export.Savable")," interface. JME3's BinaryExporter can write\nstandard Java objects, JME3 objects, and primitive data types that are\nincluded in a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/spatial"}),"spatial's user data"),'. If\nyou use custom game data classes, see below how to make them "Savable.\n:::'),Object(r.b)("p",null,"There is also a com.jme3.export.xml.XMLExporter and\ncom.jme3.export.xml.XMLImporter that similarly converts jme3 spatials to\nan XML format. But you wouldn't use that to load models at runtime\n(quite slow)."),Object(r.b)("h1",{id:"sample-code"},"Sample Code"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-examples/src/main/java/jme3test/tools/TestSaveGame.java"}),"TestSaveGame.java"))),Object(r.b)("h1",{id:"saving-a-node"},"Saving a Node"),Object(r.b)("p",null,"The following example overrides ",Object(r.b)("inlineCode",{parentName:"p"},"stop()")," in SimpleApplication to save\nthe rootNode to a file when the user quits the application. The saved\nrootNode is a normal .j3o binary file that you can open in the\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../../sdk"}),"SDK"),"."),Object(r.b)("p",null,"::: {.warning}\nNote that when you save a model that has textures, the references to\nthose textures are stored as absolute paths, so when loading the j3o\nfile again, the textures have to be accessible at the exact location\n(relative to the assetmanager root, by default the ",Object(r.b)("inlineCode",{parentName:"p"},"assets")," directory)\nthey were loaded from. This is why the SDK manages the conversion on the\nproject level.\n:::"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'  /* This is called when the user quits the app. */\n  @Override\n  public void stop() {\n    String userHome = System.getProperty("user.home");\n    BinaryExporter exporter = BinaryExporter.getInstance();\n    File file = new File(userHome+"/Models/"+"MyModel.j3o");\n    try {\n      exporter.save(rootNode, file);\n    } catch (IOException ex) {\n      Logger.getLogger(Main.class.getName()).log(Level.SEVERE, "Error: Failed to save game!", ex);\n    }\n    super.stop(); // continue quitting the game\n  }\n')),Object(r.b)("h1",{id:"loading-a-node"},"Loading a Node"),Object(r.b)("p",null,"The following example overrides ",Object(r.b)("inlineCode",{parentName:"p"},"simpleInitApp()")," in SimpleApplication\nto load ",Object(r.b)("inlineCode",{parentName:"p"},"Models/MyModel.j3o")," when the game is initialized."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'  @Override\n  public void simpleInitApp() {\n     String userHome = System.getProperty("user.home");\n     assetManager.registerLocator(userHome, FileLocator.class);\n     Node loadedNode = (Node)assetManager.loadModel("Models/MyModel.j3o");\n     loadedNode.setName("loaded node");\n     rootNode.attachChild(loadedNode);\n  }\n')),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Here you see why we save user data inside spatials -- so it can be saved\nand loaded together with the .j3o file. If you have game data outside\nSpatials, you have to remember to save() and load(), and get() and set()\nit yourself."))),Object(r.b)("h1",{id:"custom-savable-class"},"Custom Savable Class"),Object(r.b)("p",null,"JME's BinaryExporter can write standard Java objects (String, ArrayList,\nbuffers, etc), JME objects (Savables, such as Material), and primitive\ndata types (int, float, etc). If you are using any custom class together\nwith a Spatial, then the custom class must implement the\n",Object(r.b)("inlineCode",{parentName:"p"},"com.jme3.export.Savable")," interface. There are two common cases where\nthis is relevant:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The Spatial is carrying any ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../../jme3/advanced/custom_controls"}),"Custom\nControls"),".\\\nExample: You used something like ",Object(r.b)("inlineCode",{parentName:"p"},"mySpatial.addControl(myControl);"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The Spatial's user data can contain a custom Java object.\\\nExample: You used something like\n",Object(r.b)("inlineCode",{parentName:"p"},'mySpatial.setUserData("inventory", myInventory);')))),Object(r.b)("p",null,"If your custom classes (the user data or the Controls) do not implement\nSavable, then the BinaryImporter/BinaryExporter cannot save the Spatial!"),Object(r.b)("p",null,"So every time you create a custom Control or custom user data class,\nremember to implement Savable:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'import com.jme3.export.InputCapsule;\nimport com.jme3.export.JmeExporter;\nimport com.jme3.export.JmeImporter;\nimport com.jme3.export.OutputCapsule;\nimport com.jme3.export.Savable;\nimport com.jme3.material.Material;\nimport java.io.IOException;\n\npublic class MyCustomClass implements Savable {\n    private int      someIntValue;   // some custom user data\n    private float    someFloatValue; // some custom user data\n    private Material someJmeObject;  // some custom user data\n\n    ...\n    // your other code...\n    ...\n\n    public void write(JmeExporter ex) throws IOException {\n        OutputCapsule capsule = ex.getCapsule(this);\n        capsule.write(someIntValue,   "someIntValue",   1);\n        capsule.write(someFloatValue, "someFloatValue", 0f);\n        capsule.write(someJmeObject,  "someJmeObject",  new Material());\n    }\n\n    public void read(JmeImporter im) throws IOException {\n        InputCapsule capsule = im.getCapsule(this);\n        someIntValue   = capsule.readInt(    "someIntValue",   1);\n        someFloatValue = capsule.readFloat(  "someFloatValue", 0f);\n        someJmeObject  = capsule.readSavable("someJmeObject",  new Material());\n    }\n}\n')),Object(r.b)("p",null,"To make a custom class savable:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Implement ",Object(r.b)("inlineCode",{parentName:"p"},"Savable")," and add the ",Object(r.b)("inlineCode",{parentName:"p"},"write()")," and ",Object(r.b)("inlineCode",{parentName:"p"},"read()")," methods as\nshown in the example above.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Do the following for each non-temporary class field:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Add one line that ",Object(r.b)("inlineCode",{parentName:"p"},"write()"),"s the data to the JmeExport output\ncapsule."),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the variable to save, give it a String name (can be\nthe same as the variable name), and specify a default value."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Add one line that ",Object(r.b)("inlineCode",{parentName:"p"},"read\u2026()"),"s the data to the JmeImport input\ncapsule."),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"On the left side of the assignment, specify the class field\nthat you are restoring")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"On the right side, use the appropriate ",Object(r.b)("inlineCode",{parentName:"p"},"capsule.read\u2026()"),"\nmethod for the data type. Specify the String name of the\nvariable (must be the same as you used in the ",Object(r.b)("inlineCode",{parentName:"p"},"write()"),"\nmethod), and again specify a default value."))))))),Object(r.b)("p",null,"::: {.important}\nAs with all serialization, remember that if you ever change data types\nin custom classes, the updated read() methods will no longer be able to\nread your old files. Also there has to be a constructor that takes no\nParameters.\n:::"),Object(r.b)("h1",{id:"default-value"},"Default Value"),Object(r.b)("p",null,"The default value plays an important role in what data is saved to file."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"write().")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public void write(int value, String name, int defVal) throws IOException {\n    if (value == defVal)\n        return;\n    writeAlias(name, BinaryClassField.INT);\n    write(value);\n}\n")),Object(r.b)("p",null,"The write methods of the\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/blob/445f7ed010199d30c484fe75bacef4b87f2eb38e/jme3-core/src/plugins/java/com/jme3/export/binary/BinaryOutputCapsule.java"}),"BinaryOutputCapsule.java"),"\nclass do not write the ",Object(r.b)("inlineCode",{parentName:"p"},"defVal")," to file. Instead, they check to see if\n",Object(r.b)("inlineCode",{parentName:"p"},"value")," is equal to ",Object(r.b)("inlineCode",{parentName:"p"},"defVal"),", and if so, will not write anything at all."),Object(r.b)("p",null,"There are very good reasons to do this."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"It takes less space if everything is a default value.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"You may decide on new defaults later and your objects will\nautomatically upgrade if they didn't have specifically overridden\nvalues."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"read().")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public int readInt(String name, int defVal) throws IOException {\n    BinaryClassField field = cObj.nameFields.get(name);\n    if (field == null || !fieldData.containsKey(field.alias))\n        return defVal;\n    return ((Integer) fieldData.get(field.alias)).intValue();\n}\n")),Object(r.b)("p",null,"When reading your saved file, the\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jMonkeyEngine/jmonkeyengine/blob/445f7ed010199d30c484fe75bacef4b87f2eb38e/jme3-core/src/plugins/java/com/jme3/export/binary/BinaryInputCapsule.java"}),"BinaryInputCapsule.java"),"\nclass will see that the ",Object(r.b)("inlineCode",{parentName:"p"},"name")," field is ",Object(r.b)("inlineCode",{parentName:"p"},"null")," and this is when the\ndefVal is set."),Object(r.b)("p",null,"::: {.note}\nIf you rely on the compiler to initialize class or instance variables\nfor you, this can lead too unintended consequences."),Object(r.b)("p",null,"For example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'capsule.write(someIntValue,   "someIntValue",   1);\n')),Object(r.b)("p",null,"If you let the compiler initialize ",Object(r.b)("inlineCode",{parentName:"p"},"someIntValue"),", it will initialize to\nzero and if it's not changed after initialization, zero will be written\nto file."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'someIntValue   = capsule.readInt(    "someIntValue",   1);\n')),Object(r.b)("p",null,"Now when ",Object(r.b)("inlineCode",{parentName:"p"},"read"),' is called, it will see the "someIntValue" name and set\nthe ',Object(r.b)("inlineCode",{parentName:"p"},"someIntValue")," variable to zero. Not one, as you were expecting.\nKeep this in mind when using Savable.\n:::"))}p.isMDXComponent=!0},441:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return u}));var n=a(0),o=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=o.a.createContext({}),p=function(e){var t=o.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},m=function(e){var t=p(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(a),d=n,u=m["".concat(i,".").concat(d)]||m[d]||b[d]||r;return a?o.a.createElement(u,l({ref:t},c,{components:a})):o.a.createElement(u,l({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);